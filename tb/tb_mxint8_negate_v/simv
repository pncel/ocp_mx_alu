#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_000002080b8c7470 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000002080b8cdd00 .scope module, "op_negate_int8" "op_negate_int8" 3 41;
 .timescale 0 0;
v000002080b8d07d0_0 .net "input_elements", 255 0, v000002080b8cf330_0;  1 drivers
v000002080b8d0d70_0 .net "input_scalar", 7 0, v000002080b8cfab0_0;  1 drivers
v000002080b8d0e10_0 .net "output_elements", 255 0, v000002080b8cf510_0;  1 drivers
v000002080b8cf010_0 .net "output_scalar", 7 0, v000002080b8d0870_0;  1 drivers
S_000002080b88fa40 .scope module, "a" "t_mx_int8_vector" 3 47, 3 9 0, S_000002080b8cdd00;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scalar";
    .port_info 1 /OUTPUT 256 "elements";
v000002080b8cf330_0 .var "elements", 255 0;
v000002080b8cfab0_0 .var "scalar", 7 0;
v000002080b8cffb0_0 .var "zero_num", 5 0;
S_000002080b88fbd0 .scope task, "post_randomize" "post_randomize" 3 16, 3 16 0, S_000002080b88fa40;
 .timescale 0 0;
TD_op_negate_int8.a.post_randomize ;
    %pushi/vec4 0, 0, 6;
    %store/vec4 v000002080b8cffb0_0, 0, 6;
    %fork t_1, S_000002080b93cfb0;
    %jmp t_0;
    .scope S_000002080b93cfb0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002080b8cf830_0, 0, 32;
T_0.0 ;
    %load/vec4 v000002080b8cf830_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_0.1, 5;
    %load/vec4 v000002080b8cf330_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cf830_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.2, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8cffb0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000002080b8cffb0_0, 0, 6;
T_0.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8cf830_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002080b8cf830_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .scope S_000002080b88fbd0;
t_0 %join;
    %end;
S_000002080b93cfb0 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 3 18, 3 18 0, S_000002080b88fbd0;
 .timescale 0 0;
v000002080b8cf830_0 .var/2s "i", 31 0;
S_000002080b93d140 .scope task, "randomize" "randomize" 3 25, 3 25 0, S_000002080b88fa40;
 .timescale 0 0;
TD_op_negate_int8.a.randomize ;
    %vpi_func 3 26 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %store/vec4 v000002080b8cfab0_0, 0, 8;
    %fork t_3, S_000002080b87a450;
    %jmp t_2;
    .scope S_000002080b87a450;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002080b8cfa10_0, 0, 32;
T_1.4 ;
    %load/vec4 v000002080b8cfa10_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_1.5, 5;
    %vpi_func 3 28 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfa10_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %ix/vec4/s 4;
    %store/vec4 v000002080b8cf330_0, 4, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8cfa10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002080b8cfa10_0, 0, 32;
    %jmp T_1.4;
T_1.5 ;
    %end;
    .scope S_000002080b93d140;
t_2 %join;
    %fork TD_op_negate_int8.a.post_randomize, S_000002080b88fbd0;
    %join;
    %end;
S_000002080b87a450 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 3 27, 3 27 0, S_000002080b93d140;
 .timescale 0 0;
v000002080b8cfa10_0 .var/2s "i", 31 0;
S_000002080b87a5e0 .scope function.void, "set_zero" "set_zero" 3 32, 3 32 0, S_000002080b88fa40;
 .timescale 0 0;
v000002080b8cff10_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.a.set_zero ;
    %load/vec4 v000002080b8cf330_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cff10_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_2.6, 4;
    %pushi/vec4 0, 0, 8;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cff10_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %ix/vec4/s 4;
    %store/vec4 v000002080b8cf330_0, 4, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8cffb0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000002080b8cffb0_0, 0, 6;
T_2.6 ;
    %end;
S_000002080b87b840 .scope module, "result" "t_mx_int8_vector" 3 48, 3 9 0, S_000002080b8cdd00;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scalar";
    .port_info 1 /OUTPUT 256 "elements";
v000002080b8cf510_0 .var "elements", 255 0;
v000002080b8d0870_0 .var "scalar", 7 0;
v000002080b8d05f0_0 .var "zero_num", 5 0;
S_000002080b87b9d0 .scope task, "post_randomize" "post_randomize" 3 16, 3 16 0, S_000002080b87b840;
 .timescale 0 0;
TD_op_negate_int8.result.post_randomize ;
    %pushi/vec4 0, 0, 6;
    %store/vec4 v000002080b8d05f0_0, 0, 6;
    %fork t_5, S_000002080b888030;
    %jmp t_4;
    .scope S_000002080b888030;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002080b8cfdd0_0, 0, 32;
T_3.8 ;
    %load/vec4 v000002080b8cfdd0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_3.9, 5;
    %load/vec4 v000002080b8cf510_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfdd0_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_3.10, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8d05f0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000002080b8d05f0_0, 0, 6;
T_3.10 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8cfdd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002080b8cfdd0_0, 0, 32;
    %jmp T_3.8;
T_3.9 ;
    %end;
    .scope S_000002080b87b9d0;
t_4 %join;
    %end;
S_000002080b888030 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 3 18, 3 18 0, S_000002080b87b9d0;
 .timescale 0 0;
v000002080b8cfdd0_0 .var/2s "i", 31 0;
S_000002080b8881c0 .scope task, "randomize" "randomize" 3 25, 3 25 0, S_000002080b87b840;
 .timescale 0 0;
TD_op_negate_int8.result.randomize ;
    %vpi_func 3 26 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %store/vec4 v000002080b8d0870_0, 0, 8;
    %fork t_7, S_000002080b9363a0;
    %jmp t_6;
    .scope S_000002080b9363a0;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002080b8cfe70_0, 0, 32;
T_4.12 ;
    %load/vec4 v000002080b8cfe70_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_4.13, 5;
    %vpi_func 3 28 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfe70_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %ix/vec4/s 4;
    %store/vec4 v000002080b8cf510_0, 4, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8cfe70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002080b8cfe70_0, 0, 32;
    %jmp T_4.12;
T_4.13 ;
    %end;
    .scope S_000002080b8881c0;
t_6 %join;
    %fork TD_op_negate_int8.result.post_randomize, S_000002080b87b9d0;
    %join;
    %end;
S_000002080b9363a0 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 3 27, 3 27 0, S_000002080b8881c0;
 .timescale 0 0;
v000002080b8cfe70_0 .var/2s "i", 31 0;
S_000002080b936530 .scope function.void, "set_zero" "set_zero" 3 32, 3 32 0, S_000002080b87b840;
 .timescale 0 0;
v000002080b8d0050_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.result.set_zero ;
    %load/vec4 v000002080b8cf510_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8d0050_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_5.14, 4;
    %pushi/vec4 0, 0, 8;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8d0050_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %ix/vec4/s 4;
    %store/vec4 v000002080b8cf510_0, 4, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8d05f0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000002080b8d05f0_0, 0, 6;
T_5.14 ;
    %end;
S_000002080b8cde90 .scope module, "tb_mxint8_negate" "tb_mxint8_negate" 4 3;
 .timescale -9 -12;
v000002080d438670_0 .var/2u "clk", 0 0;
v000002080d438030_0 .net "data_ready", 0 0, L_000002080d483580;  1 drivers
v000002080d436eb0_0 .net "dut_i_mxint8_elements", 255 0, v000002080b8cfd30_0;  1 drivers
v000002080d436f50_0 .net "dut_o_mxint8_elements", 255 0, L_000002080d483d40;  1 drivers
S_000002080b9366c0 .scope module, "drv" "mx_int8_negate_drv" 4 15, 5 2 0, S_000002080b8cde90;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 256 "gen_mxint8_elements";
    .port_info 1 /OUTPUT 1 "data_ready_o";
    .port_info 2 /INPUT 1 "clk";
L_000002080d483580 .functor OR 1, v000002080b8cfb50_0, v000002080b8cf970_0, C4<0>, C4<0>;
v000002080b8cf470_0 .net "clk", 0 0, v000002080d438670_0;  1 drivers
v000002080b8cf650_0 .net "data_ready_o", 0 0, L_000002080d483580;  alias, 1 drivers
v000002080b8cf0b0_0 .net "gen_mxint8_elements", 255 0, v000002080b8cfd30_0;  alias, 1 drivers
v000002080b8cfb50_0 .var "rand_ready", 0 0;
v000002080b8cf970_0 .var "zero_ready", 0 0;
S_000002080b92b840 .scope module, "data_in" "t_mx_int8_vector" 5 12, 3 9 0, S_000002080b9366c0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scalar";
    .port_info 1 /OUTPUT 256 "elements";
v000002080b8cfd30_0 .var "elements", 255 0;
v000002080b8d0910_0 .var "scalar", 7 0;
v000002080b8cf3d0_0 .var "zero_num", 5 0;
S_000002080b92c380 .scope task, "post_randomize" "post_randomize" 3 16, 3 16 0, S_000002080b92b840;
 .timescale 0 0;
TD_tb_mxint8_negate.drv.data_in.post_randomize ;
    %pushi/vec4 0, 0, 6;
    %store/vec4 v000002080b8cf3d0_0, 0, 6;
    %fork t_9, S_000002080b92c510;
    %jmp t_8;
    .scope S_000002080b92c510;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002080b8cf1f0_0, 0, 32;
T_6.16 ;
    %load/vec4 v000002080b8cf1f0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_6.17, 5;
    %load/vec4 v000002080b8cfd30_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cf1f0_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_6.18, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8cf3d0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000002080b8cf3d0_0, 0, 6;
T_6.18 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8cf1f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002080b8cf1f0_0, 0, 32;
    %jmp T_6.16;
T_6.17 ;
    %end;
    .scope S_000002080b92c380;
t_8 %join;
    %end;
S_000002080b92c510 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 3 18, 3 18 0, S_000002080b92c380;
 .timescale 0 0;
v000002080b8cf1f0_0 .var/2s "i", 31 0;
S_000002080b92bed0 .scope task, "randomize" "randomize" 3 25, 3 25 0, S_000002080b92b840;
 .timescale 0 0;
TD_tb_mxint8_negate.drv.data_in.randomize ;
    %vpi_func 3 26 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %store/vec4 v000002080b8d0910_0, 0, 8;
    %fork t_11, S_000002080b92c060;
    %jmp t_10;
    .scope S_000002080b92c060;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002080b8d0cd0_0, 0, 32;
T_7.20 ;
    %load/vec4 v000002080b8d0cd0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_7.21, 5;
    %vpi_func 3 28 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8d0cd0_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %ix/vec4/s 4;
    %store/vec4 v000002080b8cfd30_0, 4, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8d0cd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000002080b8d0cd0_0, 0, 32;
    %jmp T_7.20;
T_7.21 ;
    %end;
    .scope S_000002080b92bed0;
t_10 %join;
    %fork TD_tb_mxint8_negate.drv.data_in.post_randomize, S_000002080b92c380;
    %join;
    %end;
S_000002080b92c060 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 3 27, 3 27 0, S_000002080b92bed0;
 .timescale 0 0;
v000002080b8d0cd0_0 .var/2s "i", 31 0;
S_000002080b92c6a0 .scope function.void, "set_zero" "set_zero" 3 32, 3 32 0, S_000002080b92b840;
 .timescale 0 0;
v000002080b8cf290_0 .var/2s "elem_index", 31 0;
TD_tb_mxint8_negate.drv.data_in.set_zero ;
    %load/vec4 v000002080b8cfd30_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cf290_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_8.22, 4;
    %pushi/vec4 0, 0, 8;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cf290_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %ix/vec4/s 4;
    %store/vec4 v000002080b8cfd30_0, 4, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000002080b8cf3d0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000002080b8cf3d0_0, 0, 6;
T_8.22 ;
    %end;
S_000002080b92bbb0 .scope task, "n_drive" "n_drive" 5 28, 5 28 0, S_000002080b9366c0;
 .timescale -9 -12;
v000002080b8cef70_0 .var/2s "n", 31 0;
TD_tb_mxint8_negate.drv.n_drive ;
    %load/vec4 v000002080b8cef70_0;
T_9.24 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_9.25, 5;
    %jmp/1 T_9.25, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %fork TD_tb_mxint8_negate.drv.single_drive, S_000002080b92c830;
    %join;
    %jmp T_9.24;
T_9.25 ;
    %pop/vec4 1;
    %end;
S_000002080b92c830 .scope task, "single_drive" "single_drive" 5 16, 5 16 0, S_000002080b9366c0;
 .timescale -9 -12;
E_000002080b8c7b60 .event posedge, v000002080b8cf470_0;
TD_tb_mxint8_negate.drv.single_drive ;
    %fork TD_tb_mxint8_negate.drv.data_in.randomize, S_000002080b92bed0;
    %join;
    %wait E_000002080b8c7b60;
    %fork TD_tb_mxint8_negate.drv.data_in.randomize, S_000002080b92bed0;
    %join;
    %delay 1000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002080b8cfb50_0, 0, 1;
    %pushi/vec4 32, 0, 32;
T_10.26 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_10.27, 5;
    %jmp/1 T_10.27, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000002080b8c7b60;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002080b8cfb50_0, 0, 1;
    %jmp T_10.26;
T_10.27 ;
    %pop/vec4 1;
    %end;
S_000002080b92c1f0 .scope task, "zero_drive" "zero_drive" 5 33, 5 33 0, S_000002080b9366c0;
 .timescale -9 -12;
v000002080b8d0410_0 .var "zero_index", 4 0;
TD_tb_mxint8_negate.drv.zero_drive ;
    %wait E_000002080b8c7b60;
    %vpi_func 5 36 "$urandom" 32 {0 0 0};
    %pushi/vec4 32, 0, 32;
    %mod;
    %pad/u 5;
    %store/vec4 v000002080b8d0410_0, 0, 5;
    %fork TD_tb_mxint8_negate.drv.data_in.randomize, S_000002080b92bed0;
    %join;
    %load/vec4 v000002080b8d0410_0;
    %pad/u 32;
    %cast2;
    %store/vec4 v000002080b8cf290_0, 0, 32;
    %callf/void TD_tb_mxint8_negate.drv.data_in.set_zero, S_000002080b92c6a0;
    %delay 1000, 0;
    %vpi_call/w 5 40 "$display", "zero element index: %d", v000002080b8d0410_0 {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000002080b8cf970_0, 0, 1;
    %pushi/vec4 32, 0, 32;
T_11.28 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_11.29, 5;
    %jmp/1 T_11.29, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000002080b8c7b60;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002080b8cf970_0, 0, 1;
    %jmp T_11.28;
T_11.29 ;
    %pop/vec4 1;
    %end;
S_000002080b92ba20 .scope module, "mon" "mx_int8_negate_mon" 4 21, 6 2 0, S_000002080b8cde90;
 .timescale -9 -12;
    .port_info 0 /INPUT 256 "dut_in_mxint8_elements";
    .port_info 1 /INPUT 256 "dut_out_mxint8_elements";
    .port_info 2 /INPUT 1 "data_ready_i";
    .port_info 3 /INPUT 1 "clk";
v000002080b8d09b0_0 .net "clk", 0 0, v000002080d438670_0;  alias, 1 drivers
v000002080b8cf6f0_0 .var "data_in", 255 0;
v000002080b8d00f0_0 .var "data_out", 255 0;
v000002080b8cf790_0 .net "data_ready_i", 0 0, L_000002080d483580;  alias, 1 drivers
v000002080b8d0730_0 .var/real "decoded_in", 0 0;
v000002080b8d0370_0 .var/real "decoded_out", 0 0;
v000002080b8cf8d0_0 .net "dut_in_mxint8_elements", 255 0, v000002080b8cfd30_0;  alias, 1 drivers
v000002080b8d0190_0 .net "dut_out_mxint8_elements", 255 0, L_000002080d483d40;  alias, 1 drivers
v000002080b8d0230_0 .var/2s "transection_id", 31 0;
E_000002080b8c8360 .event posedge, v000002080b8cf650_0;
S_000002080b92bd40 .scope autotask, "decoder" "decoder" 6 52, 6 52 0, S_000002080b92ba20;
 .timescale -9 -12;
v000002080b8d0550_0 .var/real "decimal_data", 0 0;
v000002080b8d0690_0 .var "int8_data", 7 0;
v000002080b8cf150_0 .var/real "scale", 0 0;
TD_tb_mxint8_negate.mon.decoder ;
    %pushi/real 1073741824, 4066; load=1.00000
    %store/real v000002080b8cf150_0;
    %pushi/real 0, 4065; load=0.00000
    %store/real v000002080b8d0550_0;
    %fork t_13, S_000002080b92d9d0;
    %jmp t_12;
    .scope S_000002080b92d9d0;
t_13 ;
    %pushi/vec4 6, 0, 32;
    %store/vec4 v000002080b8cfbf0_0, 0, 32;
T_12.30 ;
    %load/vec4 v000002080b8cfbf0_0;
    %cmpi/s 0, 0, 32;
    %flag_inv 5; GE is !LT
    %jmp/0xz T_12.31, 5;
    %load/vec4 v000002080b8d0690_0;
    %load/vec4 v000002080b8cfbf0_0;
    %part/s 1;
    %cmpi/e 1, 0, 1;
    %jmp/0xz  T_12.32, 4;
    ; show_stmt_assign_real: Get l-value for compressed += operand
    %load/real v000002080b8d0550_0;
    %load/real v000002080b8cf150_0;
    %add/wr;
    %store/real v000002080b8d0550_0;
T_12.32 ;
    %load/real v000002080b8cf150_0;
    %pushi/vec4 2, 0, 32;
    %cvt/rv/s;
    %div/wr;
    %store/real v000002080b8cf150_0;
    %load/vec4 v000002080b8cfbf0_0;
    %subi 1, 0, 32;
    %cast2;
    %store/vec4 v000002080b8cfbf0_0, 0, 32;
    %jmp T_12.30;
T_12.31 ;
    %end;
    .scope S_000002080b92bd40;
t_12 %join;
    %load/vec4 v000002080b8d0690_0;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.34, 8;
    ; show_stmt_assign_real: Get l-value for compressed -= operand
    %load/real v000002080b8d0550_0;
    %pushi/real 1073741824, 4067; load=2.00000
    %sub/wr;
    %store/real v000002080b8d0550_0;
T_12.34 ;
    %end;
S_000002080b92d9d0 .scope autobegin, "$ivl_for_loop1" "$ivl_for_loop1" 6 56, 6 56 0, S_000002080b92bd40;
 .timescale -9 -12;
v000002080b8cfbf0_0 .var/2s "i", 31 0;
S_000002080b92e7e0 .scope task, "single_mon" "single_mon" 6 30, 6 30 0, S_000002080b92ba20;
 .timescale -9 -12;
TD_tb_mxint8_negate.mon.single_mon ;
    %fork t_15, S_000002080b92e4c0;
    %jmp t_14;
    .scope S_000002080b92e4c0;
t_15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002080b8cfc90_0, 0, 32;
T_13.36 ;
    %load/vec4 v000002080b8cfc90_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_13.37, 5;
    %wait E_000002080b8c7b60;
    %load/vec4 v000002080b8cf8d0_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfc90_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %ix/load 5, 0, 0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfc90_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %ix/vec4/s 4;
    %assign/vec4/off/d v000002080b8cf6f0_0, 4, 5;
    %alloc S_000002080b92bd40;
    %load/vec4 v000002080b8cf8d0_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfc90_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %store/vec4 v000002080b8d0690_0, 0, 8;
    %fork TD_tb_mxint8_negate.mon.decoder, S_000002080b92bd40;
    %join;
    %load/real v000002080b8d0550_0;
    %store/real v000002080b8d0730_0;
    %free S_000002080b92bd40;
    %load/vec4 v000002080b8d0190_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfc90_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %ix/load 5, 0, 0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfc90_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %ix/vec4/s 4;
    %assign/vec4/off/d v000002080b8d00f0_0, 4, 5;
    %alloc S_000002080b92bd40;
    %load/vec4 v000002080b8d0190_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfc90_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %store/vec4 v000002080b8d0690_0, 0, 8;
    %fork TD_tb_mxint8_negate.mon.decoder, S_000002080b92bd40;
    %join;
    %load/real v000002080b8d0550_0;
    %store/real v000002080b8d0370_0;
    %free S_000002080b92bd40;
    %delay 0, 0;
    %vpi_call/w 6 38 "$display", "element index: %d", v000002080b8cfc90_0 {0 0 0};
    %load/real v000002080b8d0730_0;
    %pushi/real 0, 0; load 0.0
    %load/real v000002080b8d0370_0;
    %sub/wr;
    %cmp/wr;
    %flag_inv 4;
    %flag_get/vec4 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_13.38, 8;
    %vpi_call/w 6 40 "$display", "MXINT8_NEGATE ERROR!" {0 0 0};
T_13.38 ;
    %vpi_call/w 6 41 "$display", "input data: %f, output data: %f", v000002080b8d0730_0, v000002080b8d0370_0 {0 0 0};
    %load/vec4 v000002080b8cf6f0_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfc90_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %vpi_call/w 6 46 "$display", "input binary: \012%b", S<0,vec4,u8> {1 0 0};
    %load/vec4 v000002080b8d00f0_0;
    %pushi/vec4 248, 0, 36;
    %load/vec4 v000002080b8cfc90_0;
    %pad/s 35;
    %muli 8, 0, 35;
    %pad/s 36;
    %sub;
    %part/s 8;
    %vpi_call/w 6 47 "$display", "%b\012output binary", S<0,vec4,u8> {1 0 0};
    %load/vec4 v000002080b8cfc90_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000002080b8cfc90_0, 0, 32;
    %jmp T_13.36;
T_13.37 ;
    %end;
    .scope S_000002080b92e7e0;
t_14 %join;
    %end;
S_000002080b92e4c0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 6 31, 6 31 0, S_000002080b92e7e0;
 .timescale -9 -12;
v000002080b8cfc90_0 .var/2s "i", 31 0;
S_000002080b92d200 .scope module, "uut" "mxint8_negate" 4 10, 7 4 0, S_000002080b8cde90;
 .timescale 0 0;
    .port_info 0 /INPUT 256 "i_mxint8_elements";
    .port_info 1 /OUTPUT 256 "o_mxint8_elements";
v000002080d437810_0 .net "i_mxint8_elements", 255 0, v000002080b8cfd30_0;  alias, 1 drivers
v000002080d436a50_0 .net "o_mxint8_elements", 255 0, L_000002080d483d40;  alias, 1 drivers
L_000002080d4376d0 .part v000002080b8cfd30_0, 248, 8;
L_000002080d436ff0 .part v000002080b8cfd30_0, 240, 8;
L_000002080d437090 .part v000002080b8cfd30_0, 232, 8;
L_000002080d437e50 .part v000002080b8cfd30_0, 224, 8;
L_000002080d436af0 .part v000002080b8cfd30_0, 216, 8;
L_000002080d437130 .part v000002080b8cfd30_0, 208, 8;
L_000002080d4387b0 .part v000002080b8cfd30_0, 200, 8;
L_000002080d437270 .part v000002080b8cfd30_0, 192, 8;
L_000002080d4374f0 .part v000002080b8cfd30_0, 184, 8;
L_000002080d4380d0 .part v000002080b8cfd30_0, 176, 8;
L_000002080d438530 .part v000002080b8cfd30_0, 168, 8;
L_000002080d4385d0 .part v000002080b8cfd30_0, 160, 8;
L_000002080d436cd0 .part v000002080b8cfd30_0, 152, 8;
L_000002080d484ba0 .part v000002080b8cfd30_0, 144, 8;
L_000002080d4858c0 .part v000002080b8cfd30_0, 136, 8;
L_000002080d483b60 .part v000002080b8cfd30_0, 128, 8;
L_000002080d4842e0 .part v000002080b8cfd30_0, 120, 8;
L_000002080d484b00 .part v000002080b8cfd30_0, 112, 8;
L_000002080d483de0 .part v000002080b8cfd30_0, 104, 8;
L_000002080d485a00 .part v000002080b8cfd30_0, 96, 8;
L_000002080d484ec0 .part v000002080b8cfd30_0, 88, 8;
L_000002080d484e20 .part v000002080b8cfd30_0, 80, 8;
L_000002080d484f60 .part v000002080b8cfd30_0, 72, 8;
L_000002080d485000 .part v000002080b8cfd30_0, 64, 8;
L_000002080d4850a0 .part v000002080b8cfd30_0, 56, 8;
L_000002080d484740 .part v000002080b8cfd30_0, 48, 8;
L_000002080d485960 .part v000002080b8cfd30_0, 40, 8;
L_000002080d4856e0 .part v000002080b8cfd30_0, 32, 8;
L_000002080d484060 .part v000002080b8cfd30_0, 24, 8;
L_000002080d4841a0 .part v000002080b8cfd30_0, 16, 8;
L_000002080d485460 .part v000002080b8cfd30_0, 8, 8;
LS_000002080d483d40_0_0 .concat8 [ 8 8 8 8], L_000002080d484380, L_000002080d484920, L_000002080d4849c0, L_000002080d485820;
LS_000002080d483d40_0_4 .concat8 [ 8 8 8 8], L_000002080d485780, L_000002080d484880, L_000002080d4853c0, L_000002080d483fc0;
LS_000002080d483d40_0_8 .concat8 [ 8 8 8 8], L_000002080d485320, L_000002080d483ca0, L_000002080d485640, L_000002080d483c00;
LS_000002080d483d40_0_12 .concat8 [ 8 8 8 8], L_000002080d484d80, L_000002080d484a60, L_000002080d485280, L_000002080d4847e0;
LS_000002080d483d40_0_16 .concat8 [ 8 8 8 8], L_000002080d484c40, L_000002080d484ce0, L_000002080d485500, L_000002080d4855a0;
LS_000002080d483d40_0_20 .concat8 [ 8 8 8 8], L_000002080d4369b0, L_000002080d438490, L_000002080d436910, L_000002080d437f90;
LS_000002080d483d40_0_24 .concat8 [ 8 8 8 8], L_000002080d437450, L_000002080d436c30, L_000002080d438350, L_000002080d437310;
LS_000002080d483d40_0_28 .concat8 [ 8 8 8 8], L_000002080d437770, L_000002080d437c70, L_000002080d437950, L_000002080d437b30;
LS_000002080d483d40_1_0 .concat8 [ 32 32 32 32], LS_000002080d483d40_0_0, LS_000002080d483d40_0_4, LS_000002080d483d40_0_8, LS_000002080d483d40_0_12;
LS_000002080d483d40_1_4 .concat8 [ 32 32 32 32], LS_000002080d483d40_0_16, LS_000002080d483d40_0_20, LS_000002080d483d40_0_24, LS_000002080d483d40_0_28;
L_000002080d483d40 .concat8 [ 128 128 0 0], LS_000002080d483d40_1_0, LS_000002080d483d40_1_4;
L_000002080d484240 .part v000002080b8cfd30_0, 0, 8;
S_000002080b92db60 .scope generate, "genblk1[0]" "genblk1[0]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7ce0 .param/l "i" 0 7 16, +C4<00>;
L_000002080b8b1380 .functor NOT 8, L_000002080d4376d0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080b8d02d0_0 .net *"_ivl_0", 7 0, L_000002080d4376d0;  1 drivers
v000002080b8d04b0_0 .net *"_ivl_1", 7 0, L_000002080b8b1380;  1 drivers
L_000002080d4388d8 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080b8d0a50_0 .net/2u *"_ivl_3", 7 0, L_000002080d4388d8;  1 drivers
v000002080b8d0af0_0 .net *"_ivl_5", 7 0, L_000002080d437b30;  1 drivers
L_000002080d437b30 .arith/sum 8, L_000002080b8b1380, L_000002080d4388d8;
S_000002080b92d070 .scope generate, "genblk1[1]" "genblk1[1]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7be0 .param/l "i" 0 7 16, +C4<01>;
L_000002080b8b1700 .functor NOT 8, L_000002080d436ff0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080b8d0b90_0 .net *"_ivl_0", 7 0, L_000002080d436ff0;  1 drivers
v000002080b8b8100_0 .net *"_ivl_1", 7 0, L_000002080b8b1700;  1 drivers
L_000002080d438920 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080b8b90a0_0 .net/2u *"_ivl_3", 7 0, L_000002080d438920;  1 drivers
v000002080b8b7660_0 .net *"_ivl_5", 7 0, L_000002080d437950;  1 drivers
L_000002080d437950 .arith/sum 8, L_000002080b8b1700, L_000002080d438920;
S_000002080b92dcf0 .scope generate, "genblk1[2]" "genblk1[2]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c89a0 .param/l "i" 0 7 16, +C4<010>;
L_000002080b8b0a50 .functor NOT 8, L_000002080d437090, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080b8a1950_0 .net *"_ivl_0", 7 0, L_000002080d437090;  1 drivers
v000002080d4302b0_0 .net *"_ivl_1", 7 0, L_000002080b8b0a50;  1 drivers
L_000002080d438968 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d431070_0 .net/2u *"_ivl_3", 7 0, L_000002080d438968;  1 drivers
v000002080d430530_0 .net *"_ivl_5", 7 0, L_000002080d437c70;  1 drivers
L_000002080d437c70 .arith/sum 8, L_000002080b8b0a50, L_000002080d438968;
S_000002080b92e010 .scope generate, "genblk1[3]" "genblk1[3]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7c20 .param/l "i" 0 7 16, +C4<011>;
L_000002080b8b1770 .functor NOT 8, L_000002080d437e50, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d431cf0_0 .net *"_ivl_0", 7 0, L_000002080d437e50;  1 drivers
v000002080d430710_0 .net *"_ivl_1", 7 0, L_000002080b8b1770;  1 drivers
L_000002080d4389b0 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d431890_0 .net/2u *"_ivl_3", 7 0, L_000002080d4389b0;  1 drivers
v000002080d4300d0_0 .net *"_ivl_5", 7 0, L_000002080d437770;  1 drivers
L_000002080d437770 .arith/sum 8, L_000002080b8b1770, L_000002080d4389b0;
S_000002080b92de80 .scope generate, "genblk1[4]" "genblk1[4]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c84a0 .param/l "i" 0 7 16, +C4<0100>;
L_000002080b8b17e0 .functor NOT 8, L_000002080d436af0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d430c10_0 .net *"_ivl_0", 7 0, L_000002080d436af0;  1 drivers
v000002080d431f70_0 .net *"_ivl_1", 7 0, L_000002080b8b17e0;  1 drivers
L_000002080d4389f8 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d4307b0_0 .net/2u *"_ivl_3", 7 0, L_000002080d4389f8;  1 drivers
v000002080d430170_0 .net *"_ivl_5", 7 0, L_000002080d437310;  1 drivers
L_000002080d437310 .arith/sum 8, L_000002080b8b17e0, L_000002080d4389f8;
S_000002080b92d390 .scope generate, "genblk1[5]" "genblk1[5]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7ee0 .param/l "i" 0 7 16, +C4<0101>;
L_000002080b8b0dd0 .functor NOT 8, L_000002080d437130, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d430fd0_0 .net *"_ivl_0", 7 0, L_000002080d437130;  1 drivers
v000002080d431750_0 .net *"_ivl_1", 7 0, L_000002080b8b0dd0;  1 drivers
L_000002080d438a40 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d431110_0 .net/2u *"_ivl_3", 7 0, L_000002080d438a40;  1 drivers
v000002080d430850_0 .net *"_ivl_5", 7 0, L_000002080d438350;  1 drivers
L_000002080d438350 .arith/sum 8, L_000002080b8b0dd0, L_000002080d438a40;
S_000002080b92e1a0 .scope generate, "genblk1[6]" "genblk1[6]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7f20 .param/l "i" 0 7 16, +C4<0110>;
L_000002080b8b0ba0 .functor NOT 8, L_000002080d4387b0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d431610_0 .net *"_ivl_0", 7 0, L_000002080d4387b0;  1 drivers
v000002080d431a70_0 .net *"_ivl_1", 7 0, L_000002080b8b0ba0;  1 drivers
L_000002080d438a88 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d4303f0_0 .net/2u *"_ivl_3", 7 0, L_000002080d438a88;  1 drivers
v000002080d431ed0_0 .net *"_ivl_5", 7 0, L_000002080d436c30;  1 drivers
L_000002080d436c30 .arith/sum 8, L_000002080b8b0ba0, L_000002080d438a88;
S_000002080b92d520 .scope generate, "genblk1[7]" "genblk1[7]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c83a0 .param/l "i" 0 7 16, +C4<0111>;
L_000002080b8b0e40 .functor NOT 8, L_000002080d437270, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d4308f0_0 .net *"_ivl_0", 7 0, L_000002080d437270;  1 drivers
v000002080d4316b0_0 .net *"_ivl_1", 7 0, L_000002080b8b0e40;  1 drivers
L_000002080d438ad0 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d430670_0 .net/2u *"_ivl_3", 7 0, L_000002080d438ad0;  1 drivers
v000002080d430990_0 .net *"_ivl_5", 7 0, L_000002080d437450;  1 drivers
L_000002080d437450 .arith/sum 8, L_000002080b8b0e40, L_000002080d438ad0;
S_000002080b92cd50 .scope generate, "genblk1[8]" "genblk1[8]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c83e0 .param/l "i" 0 7 16, +C4<01000>;
L_000002080b8b0eb0 .functor NOT 8, L_000002080d4374f0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d431bb0_0 .net *"_ivl_0", 7 0, L_000002080d4374f0;  1 drivers
v000002080d431d90_0 .net *"_ivl_1", 7 0, L_000002080b8b0eb0;  1 drivers
L_000002080d438b18 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d430a30_0 .net/2u *"_ivl_3", 7 0, L_000002080d438b18;  1 drivers
v000002080d430210_0 .net *"_ivl_5", 7 0, L_000002080d437f90;  1 drivers
L_000002080d437f90 .arith/sum 8, L_000002080b8b0eb0, L_000002080d438b18;
S_000002080b92cee0 .scope generate, "genblk1[9]" "genblk1[9]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7ea0 .param/l "i" 0 7 16, +C4<01001>;
L_000002080b8b10e0 .functor NOT 8, L_000002080d4380d0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d431e30_0 .net *"_ivl_0", 7 0, L_000002080d4380d0;  1 drivers
v000002080d430350_0 .net *"_ivl_1", 7 0, L_000002080b8b10e0;  1 drivers
L_000002080d438b60 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d431430_0 .net/2u *"_ivl_3", 7 0, L_000002080d438b60;  1 drivers
v000002080d430ad0_0 .net *"_ivl_5", 7 0, L_000002080d436910;  1 drivers
L_000002080d436910 .arith/sum 8, L_000002080b8b10e0, L_000002080d438b60;
S_000002080b92ca30 .scope generate, "genblk1[10]" "genblk1[10]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7c60 .param/l "i" 0 7 16, +C4<01010>;
L_000002080b8893c0 .functor NOT 8, L_000002080d438530, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d430490_0 .net *"_ivl_0", 7 0, L_000002080d438530;  1 drivers
v000002080d4305d0_0 .net *"_ivl_1", 7 0, L_000002080b8893c0;  1 drivers
L_000002080d438ba8 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d4319d0_0 .net/2u *"_ivl_3", 7 0, L_000002080d438ba8;  1 drivers
v000002080d430b70_0 .net *"_ivl_5", 7 0, L_000002080d438490;  1 drivers
L_000002080d438490 .arith/sum 8, L_000002080b8893c0, L_000002080d438ba8;
S_000002080b92cbc0 .scope generate, "genblk1[11]" "genblk1[11]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c8420 .param/l "i" 0 7 16, +C4<01011>;
L_000002080d4832e0 .functor NOT 8, L_000002080d4385d0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d431930_0 .net *"_ivl_0", 7 0, L_000002080d4385d0;  1 drivers
v000002080d430cb0_0 .net *"_ivl_1", 7 0, L_000002080d4832e0;  1 drivers
L_000002080d438bf0 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d430d50_0 .net/2u *"_ivl_3", 7 0, L_000002080d438bf0;  1 drivers
v000002080d430df0_0 .net *"_ivl_5", 7 0, L_000002080d4369b0;  1 drivers
L_000002080d4369b0 .arith/sum 8, L_000002080d4832e0, L_000002080d438bf0;
S_000002080b92d6b0 .scope generate, "genblk1[12]" "genblk1[12]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7ca0 .param/l "i" 0 7 16, +C4<01100>;
L_000002080d482cc0 .functor NOT 8, L_000002080d436cd0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d430e90_0 .net *"_ivl_0", 7 0, L_000002080d436cd0;  1 drivers
v000002080d430f30_0 .net *"_ivl_1", 7 0, L_000002080d482cc0;  1 drivers
L_000002080d438c38 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d431c50_0 .net/2u *"_ivl_3", 7 0, L_000002080d438c38;  1 drivers
v000002080d4311b0_0 .net *"_ivl_5", 7 0, L_000002080d4855a0;  1 drivers
L_000002080d4855a0 .arith/sum 8, L_000002080d482cc0, L_000002080d438c38;
S_000002080b92d840 .scope generate, "genblk1[13]" "genblk1[13]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7d20 .param/l "i" 0 7 16, +C4<01101>;
L_000002080d4830b0 .functor NOT 8, L_000002080d484ba0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d431250_0 .net *"_ivl_0", 7 0, L_000002080d484ba0;  1 drivers
v000002080d4317f0_0 .net *"_ivl_1", 7 0, L_000002080d4830b0;  1 drivers
L_000002080d438c80 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d4312f0_0 .net/2u *"_ivl_3", 7 0, L_000002080d438c80;  1 drivers
v000002080d431390_0 .net *"_ivl_5", 7 0, L_000002080d485500;  1 drivers
L_000002080d485500 .arith/sum 8, L_000002080d4830b0, L_000002080d438c80;
S_000002080b92e330 .scope generate, "genblk1[14]" "genblk1[14]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c8860 .param/l "i" 0 7 16, +C4<01110>;
L_000002080d4834a0 .functor NOT 8, L_000002080d4858c0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d4314d0_0 .net *"_ivl_0", 7 0, L_000002080d4858c0;  1 drivers
v000002080d431570_0 .net *"_ivl_1", 7 0, L_000002080d4834a0;  1 drivers
L_000002080d438cc8 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d431b10_0 .net/2u *"_ivl_3", 7 0, L_000002080d438cc8;  1 drivers
v000002080d432cc0_0 .net *"_ivl_5", 7 0, L_000002080d484ce0;  1 drivers
L_000002080d484ce0 .arith/sum 8, L_000002080d4834a0, L_000002080d438cc8;
S_000002080b92e650 .scope generate, "genblk1[15]" "genblk1[15]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c8820 .param/l "i" 0 7 16, +C4<01111>;
L_000002080d483740 .functor NOT 8, L_000002080d483b60, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d4320e0_0 .net *"_ivl_0", 7 0, L_000002080d483b60;  1 drivers
v000002080d432400_0 .net *"_ivl_1", 7 0, L_000002080d483740;  1 drivers
L_000002080d438d10 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d432d60_0 .net/2u *"_ivl_3", 7 0, L_000002080d438d10;  1 drivers
v000002080d4339e0_0 .net *"_ivl_5", 7 0, L_000002080d484c40;  1 drivers
L_000002080d484c40 .arith/sum 8, L_000002080d483740, L_000002080d438d10;
S_000002080d434d70 .scope generate, "genblk1[16]" "genblk1[16]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c88a0 .param/l "i" 0 7 16, +C4<010000>;
L_000002080d483510 .functor NOT 8, L_000002080d4842e0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d432f40_0 .net *"_ivl_0", 7 0, L_000002080d4842e0;  1 drivers
v000002080d432b80_0 .net *"_ivl_1", 7 0, L_000002080d483510;  1 drivers
L_000002080d438d58 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d433d00_0 .net/2u *"_ivl_3", 7 0, L_000002080d438d58;  1 drivers
v000002080d433760_0 .net *"_ivl_5", 7 0, L_000002080d4847e0;  1 drivers
L_000002080d4847e0 .arith/sum 8, L_000002080d483510, L_000002080d438d58;
S_000002080d434730 .scope generate, "genblk1[17]" "genblk1[17]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7fa0 .param/l "i" 0 7 16, +C4<010001>;
L_000002080d483350 .functor NOT 8, L_000002080d484b00, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d432900_0 .net *"_ivl_0", 7 0, L_000002080d484b00;  1 drivers
v000002080d432a40_0 .net *"_ivl_1", 7 0, L_000002080d483350;  1 drivers
L_000002080d438da0 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d433940_0 .net/2u *"_ivl_3", 7 0, L_000002080d438da0;  1 drivers
v000002080d433260_0 .net *"_ivl_5", 7 0, L_000002080d485280;  1 drivers
L_000002080d485280 .arith/sum 8, L_000002080d483350, L_000002080d438da0;
S_000002080d434a50 .scope generate, "genblk1[18]" "genblk1[18]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c88e0 .param/l "i" 0 7 16, +C4<010010>;
L_000002080d482da0 .functor NOT 8, L_000002080d483de0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d433b20_0 .net *"_ivl_0", 7 0, L_000002080d483de0;  1 drivers
v000002080d4325e0_0 .net *"_ivl_1", 7 0, L_000002080d482da0;  1 drivers
L_000002080d438de8 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d433bc0_0 .net/2u *"_ivl_3", 7 0, L_000002080d438de8;  1 drivers
v000002080d4338a0_0 .net *"_ivl_5", 7 0, L_000002080d484a60;  1 drivers
L_000002080d484a60 .arith/sum 8, L_000002080d482da0, L_000002080d438de8;
S_000002080d4348c0 .scope generate, "genblk1[19]" "genblk1[19]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c7fe0 .param/l "i" 0 7 16, +C4<010011>;
L_000002080d482e10 .functor NOT 8, L_000002080d485a00, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d432860_0 .net *"_ivl_0", 7 0, L_000002080d485a00;  1 drivers
v000002080d4334e0_0 .net *"_ivl_1", 7 0, L_000002080d482e10;  1 drivers
L_000002080d438e30 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d432360_0 .net/2u *"_ivl_3", 7 0, L_000002080d438e30;  1 drivers
v000002080d432c20_0 .net *"_ivl_5", 7 0, L_000002080d484d80;  1 drivers
L_000002080d484d80 .arith/sum 8, L_000002080d482e10, L_000002080d438e30;
S_000002080d4345a0 .scope generate, "genblk1[20]" "genblk1[20]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c8020 .param/l "i" 0 7 16, +C4<010100>;
L_000002080d4836d0 .functor NOT 8, L_000002080d484ec0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d4329a0_0 .net *"_ivl_0", 7 0, L_000002080d484ec0;  1 drivers
v000002080d432ea0_0 .net *"_ivl_1", 7 0, L_000002080d4836d0;  1 drivers
L_000002080d438e78 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d433800_0 .net/2u *"_ivl_3", 7 0, L_000002080d438e78;  1 drivers
v000002080d433440_0 .net *"_ivl_5", 7 0, L_000002080d483c00;  1 drivers
L_000002080d483c00 .arith/sum 8, L_000002080d4836d0, L_000002080d438e78;
S_000002080d434be0 .scope generate, "genblk1[21]" "genblk1[21]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c8160 .param/l "i" 0 7 16, +C4<010101>;
L_000002080d483660 .functor NOT 8, L_000002080d484e20, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d4327c0_0 .net *"_ivl_0", 7 0, L_000002080d484e20;  1 drivers
v000002080d433a80_0 .net *"_ivl_1", 7 0, L_000002080d483660;  1 drivers
L_000002080d438ec0 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d432e00_0 .net/2u *"_ivl_3", 7 0, L_000002080d438ec0;  1 drivers
v000002080d433f80_0 .net *"_ivl_5", 7 0, L_000002080d485640;  1 drivers
L_000002080d485640 .arith/sum 8, L_000002080d483660, L_000002080d438ec0;
S_000002080d435b80 .scope generate, "genblk1[22]" "genblk1[22]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c80a0 .param/l "i" 0 7 16, +C4<010110>;
L_000002080d4829b0 .functor NOT 8, L_000002080d484f60, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d433580_0 .net *"_ivl_0", 7 0, L_000002080d484f60;  1 drivers
v000002080d432680_0 .net *"_ivl_1", 7 0, L_000002080d4829b0;  1 drivers
L_000002080d438f08 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d432720_0 .net/2u *"_ivl_3", 7 0, L_000002080d438f08;  1 drivers
v000002080d433620_0 .net *"_ivl_5", 7 0, L_000002080d483ca0;  1 drivers
L_000002080d483ca0 .arith/sum 8, L_000002080d4829b0, L_000002080d438f08;
S_000002080d434f00 .scope generate, "genblk1[23]" "genblk1[23]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c80e0 .param/l "i" 0 7 16, +C4<010111>;
L_000002080d482e80 .functor NOT 8, L_000002080d485000, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d432ae0_0 .net *"_ivl_0", 7 0, L_000002080d485000;  1 drivers
v000002080d433c60_0 .net *"_ivl_1", 7 0, L_000002080d482e80;  1 drivers
L_000002080d438f50 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d4336c0_0 .net/2u *"_ivl_3", 7 0, L_000002080d438f50;  1 drivers
v000002080d433da0_0 .net *"_ivl_5", 7 0, L_000002080d485320;  1 drivers
L_000002080d485320 .arith/sum 8, L_000002080d482e80, L_000002080d438f50;
S_000002080d435ea0 .scope generate, "genblk1[24]" "genblk1[24]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8c8120 .param/l "i" 0 7 16, +C4<011000>;
L_000002080d4833c0 .functor NOT 8, L_000002080d4850a0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d432fe0_0 .net *"_ivl_0", 7 0, L_000002080d4850a0;  1 drivers
v000002080d433e40_0 .net *"_ivl_1", 7 0, L_000002080d4833c0;  1 drivers
L_000002080d438f98 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d433ee0_0 .net/2u *"_ivl_3", 7 0, L_000002080d438f98;  1 drivers
v000002080d433080_0 .net *"_ivl_5", 7 0, L_000002080d483fc0;  1 drivers
L_000002080d483fc0 .arith/sum 8, L_000002080d4833c0, L_000002080d438f98;
S_000002080d435d10 .scope generate, "genblk1[25]" "genblk1[25]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b879320 .param/l "i" 0 7 16, +C4<011001>;
L_000002080d482a20 .functor NOT 8, L_000002080d484740, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d433120_0 .net *"_ivl_0", 7 0, L_000002080d484740;  1 drivers
v000002080d432180_0 .net *"_ivl_1", 7 0, L_000002080d482a20;  1 drivers
L_000002080d438fe0 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d432220_0 .net/2u *"_ivl_3", 7 0, L_000002080d438fe0;  1 drivers
v000002080d4331c0_0 .net *"_ivl_5", 7 0, L_000002080d4853c0;  1 drivers
L_000002080d4853c0 .arith/sum 8, L_000002080d482a20, L_000002080d438fe0;
S_000002080d435090 .scope generate, "genblk1[26]" "genblk1[26]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8798a0 .param/l "i" 0 7 16, +C4<011010>;
L_000002080d4837b0 .functor NOT 8, L_000002080d485960, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d433300_0 .net *"_ivl_0", 7 0, L_000002080d485960;  1 drivers
v000002080d4333a0_0 .net *"_ivl_1", 7 0, L_000002080d4837b0;  1 drivers
L_000002080d439028 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d4322c0_0 .net/2u *"_ivl_3", 7 0, L_000002080d439028;  1 drivers
v000002080d4324a0_0 .net *"_ivl_5", 7 0, L_000002080d484880;  1 drivers
L_000002080d484880 .arith/sum 8, L_000002080d4837b0, L_000002080d439028;
S_000002080d4356d0 .scope generate, "genblk1[27]" "genblk1[27]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8794e0 .param/l "i" 0 7 16, +C4<011011>;
L_000002080d482b00 .functor NOT 8, L_000002080d4856e0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d432540_0 .net *"_ivl_0", 7 0, L_000002080d4856e0;  1 drivers
v000002080d436b90_0 .net *"_ivl_1", 7 0, L_000002080d482b00;  1 drivers
L_000002080d439070 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d4383f0_0 .net/2u *"_ivl_3", 7 0, L_000002080d439070;  1 drivers
v000002080d4371d0_0 .net *"_ivl_5", 7 0, L_000002080d485780;  1 drivers
L_000002080d485780 .arith/sum 8, L_000002080d482b00, L_000002080d439070;
S_000002080d4353b0 .scope generate, "genblk1[28]" "genblk1[28]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8798e0 .param/l "i" 0 7 16, +C4<011100>;
L_000002080d482b70 .functor NOT 8, L_000002080d484060, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d437630_0 .net *"_ivl_0", 7 0, L_000002080d484060;  1 drivers
v000002080d437ef0_0 .net *"_ivl_1", 7 0, L_000002080d482b70;  1 drivers
L_000002080d4390b8 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d437bd0_0 .net/2u *"_ivl_3", 7 0, L_000002080d4390b8;  1 drivers
v000002080d437a90_0 .net *"_ivl_5", 7 0, L_000002080d485820;  1 drivers
L_000002080d485820 .arith/sum 8, L_000002080d482b70, L_000002080d4390b8;
S_000002080d4340f0 .scope generate, "genblk1[29]" "genblk1[29]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b8799a0 .param/l "i" 0 7 16, +C4<011101>;
L_000002080d482ef0 .functor NOT 8, L_000002080d4841a0, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d438210_0 .net *"_ivl_0", 7 0, L_000002080d4841a0;  1 drivers
v000002080d437590_0 .net *"_ivl_1", 7 0, L_000002080d482ef0;  1 drivers
L_000002080d439100 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d438710_0 .net/2u *"_ivl_3", 7 0, L_000002080d439100;  1 drivers
v000002080d4379f0_0 .net *"_ivl_5", 7 0, L_000002080d4849c0;  1 drivers
L_000002080d4849c0 .arith/sum 8, L_000002080d482ef0, L_000002080d439100;
S_000002080d435860 .scope generate, "genblk1[30]" "genblk1[30]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b879e60 .param/l "i" 0 7 16, +C4<011110>;
L_000002080d482be0 .functor NOT 8, L_000002080d485460, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d436d70_0 .net *"_ivl_0", 7 0, L_000002080d485460;  1 drivers
v000002080d436e10_0 .net *"_ivl_1", 7 0, L_000002080d482be0;  1 drivers
L_000002080d439148 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d437d10_0 .net/2u *"_ivl_3", 7 0, L_000002080d439148;  1 drivers
v000002080d4373b0_0 .net *"_ivl_5", 7 0, L_000002080d484920;  1 drivers
L_000002080d484920 .arith/sum 8, L_000002080d482be0, L_000002080d439148;
S_000002080d435220 .scope generate, "genblk1[31]" "genblk1[31]" 7 16, 7 16 0, S_000002080b92d200;
 .timescale 0 0;
P_000002080b879aa0 .param/l "i" 0 7 16, +C4<011111>;
L_000002080d482fd0 .functor NOT 8, L_000002080d484240, C4<00000000>, C4<00000000>, C4<00000000>;
v000002080d4382b0_0 .net *"_ivl_0", 7 0, L_000002080d484240;  1 drivers
v000002080d437db0_0 .net *"_ivl_1", 7 0, L_000002080d482fd0;  1 drivers
L_000002080d439190 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v000002080d438170_0 .net/2u *"_ivl_3", 7 0, L_000002080d439190;  1 drivers
v000002080d4378b0_0 .net *"_ivl_5", 7 0, L_000002080d484380;  1 drivers
L_000002080d484380 .arith/sum 8, L_000002080d482fd0, L_000002080d439190;
    .scope S_000002080b9366c0;
T_14 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002080b8cfb50_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002080b8cf970_0, 0, 1;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v000002080b8cef70_0, 0, 32;
    %fork TD_tb_mxint8_negate.drv.n_drive, S_000002080b92bbb0;
    %join;
    %pushi/vec4 3, 0, 32;
T_14.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_14.1, 5;
    %jmp/1 T_14.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %fork TD_tb_mxint8_negate.drv.zero_drive, S_000002080b92c1f0;
    %join;
    %jmp T_14.0;
T_14.1 ;
    %pop/vec4 1;
    %vpi_call/w 5 54 "$finish" {0 0 0};
    %end;
    .thread T_14;
    .scope S_000002080b92ba20;
T_15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000002080b8d0230_0, 0, 32;
    %end;
    .thread T_15;
    .scope S_000002080b92ba20;
T_16 ;
    %wait E_000002080b8c8360;
    %vpi_call/w 6 25 "$display", "\012transection id: %d", v000002080b8d0230_0 {0 0 0};
    %fork TD_tb_mxint8_negate.mon.single_mon, S_000002080b92e7e0;
    %join;
    %load/vec4 v000002080b8d0230_0;
    %addi 1, 0, 32;
    %cast2;
    %assign/vec4 v000002080b8d0230_0, 0;
    %jmp T_16;
    .thread T_16;
    .scope S_000002080b8cde90;
T_17 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000002080d438670_0, 0, 1;
T_17.0 ;
    %delay 5000, 0;
    %load/vec4 v000002080d438670_0;
    %inv;
    %store/vec4 v000002080d438670_0, 0, 1;
    %jmp T_17.0;
    %end;
    .thread T_17;
    .scope S_000002080b8cde90;
T_18 ;
    %vpi_call/w 4 36 "$dumpfile", "test.vcd" {0 0 0};
    %vpi_call/w 4 37 "$dumpvars", 32'sb00000000000000000000000000000000, S_000002080b8cde90 {0 0 0};
    %end;
    .thread T_18;
# The file index is used to find the file name in the following table.
:file_names 8;
    "N/A";
    "<interactive>";
    "-";
    "../transection.sv";
    "./tb_mxint8_negate.sv";
    "./mx_int8_negate_drv.sv";
    "./mx_int8_negate_mon.sv";
    "../../src/v/mxint8_negate.v";
