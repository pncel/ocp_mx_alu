#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_000001a03e9fd620 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000001a03e9fd7b0 .scope module, "mx_int8_sum_drv" "mx_int8_sum_drv" 3 1;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scale_drv";
    .port_info 1 /OUTPUT 256 "mxint8_elements_drv";
    .port_info 2 /INPUT 1 "clk";
P_000001a03ea69940 .param/l "N" 1 3 6, +C4<00000000000000000000000000000101>;
v000001a040690ac0_0 .array/port v000001a040690ac0, 0;
L_000001a03ea7b500 .functor BUFZ 8, v000001a040690ac0_0, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_1 .array/port v000001a040690ac0, 1;
L_000001a03ea7a8c0 .functor BUFZ 8, v000001a040690ac0_1, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_2 .array/port v000001a040690ac0, 2;
L_000001a03ea7afc0 .functor BUFZ 8, v000001a040690ac0_2, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_3 .array/port v000001a040690ac0, 3;
L_000001a03ea7b570 .functor BUFZ 8, v000001a040690ac0_3, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_4 .array/port v000001a040690ac0, 4;
L_000001a03ea7b1f0 .functor BUFZ 8, v000001a040690ac0_4, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_5 .array/port v000001a040690ac0, 5;
L_000001a03ea7ae70 .functor BUFZ 8, v000001a040690ac0_5, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_6 .array/port v000001a040690ac0, 6;
L_000001a03ea7b340 .functor BUFZ 8, v000001a040690ac0_6, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_7 .array/port v000001a040690ac0, 7;
L_000001a03ea7b0a0 .functor BUFZ 8, v000001a040690ac0_7, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_8 .array/port v000001a040690ac0, 8;
L_000001a03ea7b2d0 .functor BUFZ 8, v000001a040690ac0_8, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_9 .array/port v000001a040690ac0, 9;
L_000001a03ea7af50 .functor BUFZ 8, v000001a040690ac0_9, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_10 .array/port v000001a040690ac0, 10;
L_000001a03ea7b030 .functor BUFZ 8, v000001a040690ac0_10, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_11 .array/port v000001a040690ac0, 11;
L_000001a03ea7a930 .functor BUFZ 8, v000001a040690ac0_11, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_12 .array/port v000001a040690ac0, 12;
L_000001a03ea7b7a0 .functor BUFZ 8, v000001a040690ac0_12, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_13 .array/port v000001a040690ac0, 13;
L_000001a03ea7b3b0 .functor BUFZ 8, v000001a040690ac0_13, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_14 .array/port v000001a040690ac0, 14;
L_000001a03ea7ab60 .functor BUFZ 8, v000001a040690ac0_14, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_15 .array/port v000001a040690ac0, 15;
L_000001a03ea7aa10 .functor BUFZ 8, v000001a040690ac0_15, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_16 .array/port v000001a040690ac0, 16;
L_000001a03ea7b420 .functor BUFZ 8, v000001a040690ac0_16, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_17 .array/port v000001a040690ac0, 17;
L_000001a03ea7b260 .functor BUFZ 8, v000001a040690ac0_17, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_18 .array/port v000001a040690ac0, 18;
L_000001a03ea7b5e0 .functor BUFZ 8, v000001a040690ac0_18, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_19 .array/port v000001a040690ac0, 19;
L_000001a03ea7a9a0 .functor BUFZ 8, v000001a040690ac0_19, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_20 .array/port v000001a040690ac0, 20;
L_000001a03ea7b490 .functor BUFZ 8, v000001a040690ac0_20, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_21 .array/port v000001a040690ac0, 21;
L_000001a03ea7b650 .functor BUFZ 8, v000001a040690ac0_21, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_22 .array/port v000001a040690ac0, 22;
L_000001a03ea7b6c0 .functor BUFZ 8, v000001a040690ac0_22, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_23 .array/port v000001a040690ac0, 23;
L_000001a03ea7ad20 .functor BUFZ 8, v000001a040690ac0_23, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_24 .array/port v000001a040690ac0, 24;
L_000001a03ea7b730 .functor BUFZ 8, v000001a040690ac0_24, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_25 .array/port v000001a040690ac0, 25;
L_000001a03ea7aa80 .functor BUFZ 8, v000001a040690ac0_25, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_26 .array/port v000001a040690ac0, 26;
L_000001a03ea7aaf0 .functor BUFZ 8, v000001a040690ac0_26, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_27 .array/port v000001a040690ac0, 27;
L_000001a03ea7ac40 .functor BUFZ 8, v000001a040690ac0_27, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_28 .array/port v000001a040690ac0, 28;
L_000001a03ea7abd0 .functor BUFZ 8, v000001a040690ac0_28, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_29 .array/port v000001a040690ac0, 29;
L_000001a03ea7acb0 .functor BUFZ 8, v000001a040690ac0_29, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_30 .array/port v000001a040690ac0, 30;
L_000001a03ea7ad90 .functor BUFZ 8, v000001a040690ac0_30, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690ac0_31 .array/port v000001a040690ac0, 31;
L_000001a03ea7ae00 .functor BUFZ 8, v000001a040690ac0_31, C4<00000000>, C4<00000000>, C4<00000000>;
o000001a040650bf8 .functor BUFZ 1, C4<z>; HiZ drive
v000001a040690020_0 .net "clk", 0 0, o000001a040650bf8;  0 drivers
v000001a04068f4e0 .array "mxint8_elements_drv", 0 31;
v000001a04068f4e0_0 .net v000001a04068f4e0 0, 7 0, L_000001a03ea7b500; 1 drivers
v000001a04068f4e0_1 .net v000001a04068f4e0 1, 7 0, L_000001a03ea7a8c0; 1 drivers
v000001a04068f4e0_2 .net v000001a04068f4e0 2, 7 0, L_000001a03ea7afc0; 1 drivers
v000001a04068f4e0_3 .net v000001a04068f4e0 3, 7 0, L_000001a03ea7b570; 1 drivers
v000001a04068f4e0_4 .net v000001a04068f4e0 4, 7 0, L_000001a03ea7b1f0; 1 drivers
v000001a04068f4e0_5 .net v000001a04068f4e0 5, 7 0, L_000001a03ea7ae70; 1 drivers
v000001a04068f4e0_6 .net v000001a04068f4e0 6, 7 0, L_000001a03ea7b340; 1 drivers
v000001a04068f4e0_7 .net v000001a04068f4e0 7, 7 0, L_000001a03ea7b0a0; 1 drivers
v000001a04068f4e0_8 .net v000001a04068f4e0 8, 7 0, L_000001a03ea7b2d0; 1 drivers
v000001a04068f4e0_9 .net v000001a04068f4e0 9, 7 0, L_000001a03ea7af50; 1 drivers
v000001a04068f4e0_10 .net v000001a04068f4e0 10, 7 0, L_000001a03ea7b030; 1 drivers
v000001a04068f4e0_11 .net v000001a04068f4e0 11, 7 0, L_000001a03ea7a930; 1 drivers
v000001a04068f4e0_12 .net v000001a04068f4e0 12, 7 0, L_000001a03ea7b7a0; 1 drivers
v000001a04068f4e0_13 .net v000001a04068f4e0 13, 7 0, L_000001a03ea7b3b0; 1 drivers
v000001a04068f4e0_14 .net v000001a04068f4e0 14, 7 0, L_000001a03ea7ab60; 1 drivers
v000001a04068f4e0_15 .net v000001a04068f4e0 15, 7 0, L_000001a03ea7aa10; 1 drivers
v000001a04068f4e0_16 .net v000001a04068f4e0 16, 7 0, L_000001a03ea7b420; 1 drivers
v000001a04068f4e0_17 .net v000001a04068f4e0 17, 7 0, L_000001a03ea7b260; 1 drivers
v000001a04068f4e0_18 .net v000001a04068f4e0 18, 7 0, L_000001a03ea7b5e0; 1 drivers
v000001a04068f4e0_19 .net v000001a04068f4e0 19, 7 0, L_000001a03ea7a9a0; 1 drivers
v000001a04068f4e0_20 .net v000001a04068f4e0 20, 7 0, L_000001a03ea7b490; 1 drivers
v000001a04068f4e0_21 .net v000001a04068f4e0 21, 7 0, L_000001a03ea7b650; 1 drivers
v000001a04068f4e0_22 .net v000001a04068f4e0 22, 7 0, L_000001a03ea7b6c0; 1 drivers
v000001a04068f4e0_23 .net v000001a04068f4e0 23, 7 0, L_000001a03ea7ad20; 1 drivers
v000001a04068f4e0_24 .net v000001a04068f4e0 24, 7 0, L_000001a03ea7b730; 1 drivers
v000001a04068f4e0_25 .net v000001a04068f4e0 25, 7 0, L_000001a03ea7aa80; 1 drivers
v000001a04068f4e0_26 .net v000001a04068f4e0 26, 7 0, L_000001a03ea7aaf0; 1 drivers
v000001a04068f4e0_27 .net v000001a04068f4e0 27, 7 0, L_000001a03ea7ac40; 1 drivers
v000001a04068f4e0_28 .net v000001a04068f4e0 28, 7 0, L_000001a03ea7abd0; 1 drivers
v000001a04068f4e0_29 .net v000001a04068f4e0 29, 7 0, L_000001a03ea7acb0; 1 drivers
v000001a04068f4e0_30 .net v000001a04068f4e0 30, 7 0, L_000001a03ea7ad90; 1 drivers
v000001a04068f4e0_31 .net v000001a04068f4e0 31, 7 0, L_000001a03ea7ae00; 1 drivers
v000001a04068f8a0_0 .net "scale_drv", 7 0, v000001a04068f940_0;  1 drivers
E_000001a03ea69ac0 .event posedge, v000001a040690020_0;
S_000001a03ea14840 .scope function.void, "all_nan_case" "all_nan_case" 3 49, 3 49 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.all_nan_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_all_unused_code, S_000001a03ea9d330;
    %end;
S_000001a03ea149d0 .scope function.void, "all_zero_case" "all_zero_case" 3 41, 3 41 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.all_zero_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_all_zero, S_000001a03ea9c520;
    %end;
S_000001a03e9e5380 .scope function.void, "big_case" "big_case" 3 37, 3 37 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.big_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_all_big_elements, S_000001a03ea9c9d0;
    %end;
S_000001a03e9e5510 .scope function.void, "negative_carry_case" "negative_carry_case" 3 82, 3 82 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.negative_carry_case ;
    %pushi/vec4 15, 0, 32;
    %store/vec4 v000001a03ea5ddb0_0, 0, 32;
    %pushi/vec4 40, 0, 32;
    %store/vec4 v000001a03ea5dd10_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.negative_carry_case_p, S_000001a03e9e56a0;
    %end;
S_000001a03e9e56a0 .scope function.void, "negative_carry_case_p" "negative_carry_case_p" 3 78, 3 78 0, S_000001a03e9fd7b0;
 .timescale 0 0;
v000001a03ea5ddb0_0 .var/2s "big_positive_num", 31 0;
v000001a03ea5dd10_0 .var/2s "is_small_scale", 31 0;
TD_mx_int8_sum_drv.negative_carry_case_p ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %load/vec4 v000001a03ea5ddb0_0;
    %store/vec4 v000001a03ea5e170_0, 0, 32;
    %load/vec4 v000001a03ea5dd10_0;
    %store/vec4 v000001a03ea5e210_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_sum_negative_carry, S_000001a04068dc00;
    %end;
S_000001a03ea5d180 .scope function.void, "negative_carry_max_case" "negative_carry_max_case" 3 94, 3 94 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.negative_carry_max_case ;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v000001a03ea5ddb0_0, 0, 32;
    %pushi/vec4 120, 0, 32;
    %store/vec4 v000001a03ea5dd10_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.negative_carry_case_p, S_000001a03e9e56a0;
    %end;
S_000001a03ea5d310 .scope function.void, "negative_case" "negative_case" 3 30, 3 30 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.negative_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_all_negative, S_000001a03ea9d010;
    %end;
S_000001a03ea5d4a0 .scope function.void, "negative_overflow_case" "negative_overflow_case" 3 85, 3 85 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.negative_overflow_case ;
    %pushi/vec4 25, 0, 32;
    %store/vec4 v000001a03ea5ddb0_0, 0, 32;
    %pushi/vec4 3, 0, 32;
    %store/vec4 v000001a03ea5dd10_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.negative_carry_case_p, S_000001a03e9e56a0;
    %end;
S_000001a03ea5d630 .scope function.void, "negative_overflow_max_case" "negative_overflow_max_case" 3 88, 3 88 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.negative_overflow_max_case ;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v000001a03ea5ddb0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v000001a03ea5dd10_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.negative_carry_case_p, S_000001a03e9e56a0;
    %end;
S_000001a03ea5d7c0 .scope function.void, "negative_overflow_scale_nan" "negative_overflow_scale_nan" 3 91, 3 91 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.negative_overflow_scale_nan ;
    %pushi/vec4 21, 0, 32;
    %store/vec4 v000001a03ea5ddb0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5dd10_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.negative_carry_case_p, S_000001a03e9e56a0;
    %end;
S_000001a03ea5d950 .scope function.void, "normal_case" "normal_case" 3 23, 3 23 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.normal_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %end;
S_000001a0406810a0 .scope function.void, "positive_carry_case" "positive_carry_case" 3 62, 3 62 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.positive_carry_case ;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v000001a03ea5e2b0_0, 0, 32;
    %pushi/vec4 20, 0, 32;
    %store/vec4 v000001a03ea5ead0_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.positive_carry_case_p, S_000001a040681230;
    %end;
S_000001a040681230 .scope function.void, "positive_carry_case_p" "positive_carry_case_p" 3 58, 3 58 0, S_000001a03e9fd7b0;
 .timescale 0 0;
v000001a03ea5e2b0_0 .var/2s "big_positive_num", 31 0;
v000001a03ea5ead0_0 .var/2s "is_small_scale", 31 0;
TD_mx_int8_sum_drv.positive_carry_case_p ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %load/vec4 v000001a03ea5e2b0_0;
    %store/vec4 v000001a03ea5e490_0, 0, 32;
    %load/vec4 v000001a03ea5ead0_0;
    %store/vec4 v000001a03ea5e7b0_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_sum_positive_carry, S_000001a04068e560;
    %end;
S_000001a03ea9b1f0 .scope function.void, "positive_carry_max_case" "positive_carry_max_case" 3 74, 3 74 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.positive_carry_max_case ;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v000001a03ea5e2b0_0, 0, 32;
    %pushi/vec4 100, 0, 32;
    %store/vec4 v000001a03ea5ead0_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.positive_carry_case_p, S_000001a040681230;
    %end;
S_000001a03ea9b380 .scope function.void, "positive_case" "positive_case" 3 26, 3 26 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.positive_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_all_positive, S_000001a03ea9d4c0;
    %end;
S_000001a03ea9b9c0 .scope function.void, "positive_overflow_case" "positive_overflow_case" 3 65, 3 65 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.positive_overflow_case ;
    %pushi/vec4 20, 0, 32;
    %store/vec4 v000001a03ea5e2b0_0, 0, 32;
    %pushi/vec4 2, 0, 32;
    %store/vec4 v000001a03ea5ead0_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.positive_carry_case_p, S_000001a040681230;
    %end;
S_000001a03ea9b510 .scope function.void, "positive_overflow_max_case" "positive_overflow_max_case" 3 68, 3 68 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.positive_overflow_max_case ;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v000001a03ea5e2b0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v000001a03ea5ead0_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.positive_carry_case_p, S_000001a040681230;
    %end;
S_000001a03ea9bb50 .scope function.void, "positive_overflow_scale_nan" "positive_overflow_scale_nan" 3 71, 3 71 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.positive_overflow_scale_nan ;
    %pushi/vec4 11, 0, 32;
    %store/vec4 v000001a03ea5e2b0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5ead0_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.positive_carry_case_p, S_000001a040681230;
    %end;
S_000001a03ea9b6a0 .scope function.void, "scale_nan_case" "scale_nan_case" 3 98, 3 98 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.scale_nan_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_largest_scale, S_000001a04068f1e0;
    %end;
S_000001a03ea9b830 .scope function.void, "scale_nan_unusedcode_case" "scale_nan_unusedcode_case" 3 102, 3 102 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.scale_nan_unusedcode_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_largest_scale, S_000001a04068f1e0;
    %vpi_func 3 105 "$random" 32 {0 0 0};
    %pushi/vec4 32, 0, 32;
    %mod/s;
    %cast2;
    %store/vec4 v000001a03ea5e530_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_unused_encode, S_000001a04068e240;
    %end;
S_000001a03ea9bce0 .scope function.void, "single_nan_case" "single_nan_case" 3 53, 3 53 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.single_nan_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %vpi_func 3 55 "$random" 32 {0 0 0};
    %pushi/vec4 32, 0, 32;
    %mod/s;
    %cast2;
    %store/vec4 v000001a03ea5e530_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_unused_encode, S_000001a04068e240;
    %end;
S_000001a03ea9be70 .scope function.void, "single_zero_case" "single_zero_case" 3 45, 3 45 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.single_zero_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %vpi_func 3 47 "$random" 32 {0 0 0};
    %pushi/vec4 32, 0, 32;
    %mod/s;
    %cast2;
    %store/vec4 v000001a040690ca0_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_zero, S_000001a04068eec0;
    %end;
S_000001a03ea9b060 .scope function.void, "small_case" "small_case" 3 33, 3 33 0, S_000001a03e9fd7b0;
 .timescale 0 0;
TD_mx_int8_sum_drv.small_case ;
    %callf/void TD_mx_int8_sum_drv.vector_in.randomize, S_000001a03ea9d7e0;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_all_small_elements, S_000001a03ea9c6b0;
    %end;
S_000001a03ea9cb60 .scope module, "vector_in" "t_mx_int8_vector" 3 13, 4 11 0, S_000001a03e9fd7b0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scale";
    .port_info 1 /OUTPUT 256 "elements";
P_000001a03ea14b60 .param/l "largest_scale" 1 4 15, C4<11111111>;
P_000001a03ea14b98 .param/l "unused_code" 1 4 14, C4<10000000>;
P_000001a03ea14bd0 .param/l "zero_scale" 1 4 16, C4<00000000>;
v000001a040690ac0 .array "elements", 31 0, 7 0;
v000001a04068f940_0 .var "scale", 7 0;
v000001a04068fc60_0 .var "zero_num", 5 0;
S_000001a03ea9ccf0 .scope function.void, "post_randomize" "post_randomize" 4 20, 4 20 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.post_randomize ;
    %pushi/vec4 0, 0, 6;
    %store/vec4 v000001a04068fc60_0, 0, 6;
    %fork t_1, S_000001a03ea9ce80;
    %jmp t_0;
    .scope S_000001a03ea9ce80;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5de50_0, 0, 32;
T_23.0 ;
    %load/vec4 v000001a03ea5de50_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_23.1, 5;
    %ix/getv/s 4, v000001a03ea5de50_0;
    %load/vec4a v000001a040690ac0, 4;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_23.2, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a04068fc60_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000001a04068fc60_0, 0, 6;
T_23.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a03ea5de50_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a03ea5de50_0, 0, 32;
    %jmp T_23.0;
T_23.1 ;
    %end;
    .scope S_000001a03ea9ccf0;
t_0 %join;
    %end;
S_000001a03ea9ce80 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 4 22, 4 22 0, S_000001a03ea9ccf0;
 .timescale 0 0;
v000001a03ea5de50_0 .var/2s "i", 31 0;
S_000001a03ea9d7e0 .scope function.void, "randomize" "randomize" 4 29, 4 29 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.randomize ;
    %vpi_func 4 30 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %store/vec4 v000001a04068f940_0, 0, 8;
    %fork t_3, S_000001a03ea9c070;
    %jmp t_2;
    .scope S_000001a03ea9c070;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5e670_0, 0, 32;
T_24.4 ;
    %load/vec4 v000001a03ea5e670_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_24.5, 5;
    %vpi_func 4 32 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %ix/getv/s 4, v000001a03ea5e670_0;
    %store/vec4a v000001a040690ac0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a03ea5e670_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a03ea5e670_0, 0, 32;
    %jmp T_24.4;
T_24.5 ;
    %end;
    .scope S_000001a03ea9d7e0;
t_2 %join;
    %callf/void TD_mx_int8_sum_drv.vector_in.post_randomize, S_000001a03ea9ccf0;
    %end;
S_000001a03ea9c070 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 4 31, 4 31 0, S_000001a03ea9d7e0;
 .timescale 0 0;
v000001a03ea5e670_0 .var/2s "i", 31 0;
S_000001a03ea9c9d0 .scope function.void, "set_all_big_elements" "set_all_big_elements" 4 63, 4 63 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.set_all_big_elements ;
    %fork t_5, S_000001a03ea9c840;
    %jmp t_4;
    .scope S_000001a03ea9c840;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5df90_0, 0, 32;
T_25.6 ;
    %load/vec4 v000001a03ea5df90_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_25.7, 5;
    %ix/getv/s 4, v000001a03ea5df90_0;
    %load/vec4a v000001a040690ac0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_25.8, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a03ea5df90_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
    %jmp T_25.9;
T_25.8 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a03ea5df90_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
T_25.9 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a03ea5df90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a03ea5df90_0, 0, 32;
    %jmp T_25.6;
T_25.7 ;
    %end;
    .scope S_000001a03ea9c9d0;
t_4 %join;
    %end;
S_000001a03ea9c840 .scope begin, "$ivl_foreach5" "$ivl_foreach5" 4 64, 4 64 0, S_000001a03ea9c9d0;
 .timescale 0 0;
v000001a03ea5df90_0 .var/2s "i", 31 0;
S_000001a03ea9d010 .scope function.void, "set_all_negative" "set_all_negative" 4 41, 4 41 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.set_all_negative ;
    %fork t_7, S_000001a03ea9c200;
    %jmp t_6;
    .scope S_000001a03ea9c200;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5e5d0_0, 0, 32;
T_26.10 ;
    %load/vec4 v000001a03ea5e5d0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_26.11, 5;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a03ea5e5d0_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a03ea5e5d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a03ea5e5d0_0, 0, 32;
    %jmp T_26.10;
T_26.11 ;
    %end;
    .scope S_000001a03ea9d010;
t_6 %join;
    %end;
S_000001a03ea9c200 .scope begin, "$ivl_foreach3" "$ivl_foreach3" 4 42, 4 42 0, S_000001a03ea9d010;
 .timescale 0 0;
v000001a03ea5e5d0_0 .var/2s "i", 31 0;
S_000001a03ea9d4c0 .scope function.void, "set_all_positive" "set_all_positive" 4 36, 4 36 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.set_all_positive ;
    %fork t_9, S_000001a03ea9d650;
    %jmp t_8;
    .scope S_000001a03ea9d650;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5e350_0, 0, 32;
T_27.12 ;
    %load/vec4 v000001a03ea5e350_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_27.13, 5;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a03ea5e350_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a03ea5e350_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a03ea5e350_0, 0, 32;
    %jmp T_27.12;
T_27.13 ;
    %end;
    .scope S_000001a03ea9d4c0;
t_8 %join;
    %end;
S_000001a03ea9d650 .scope begin, "$ivl_foreach2" "$ivl_foreach2" 4 37, 4 37 0, S_000001a03ea9d4c0;
 .timescale 0 0;
v000001a03ea5e350_0 .var/2s "i", 31 0;
S_000001a03ea9c6b0 .scope function.void, "set_all_small_elements" "set_all_small_elements" 4 54, 4 54 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.set_all_small_elements ;
    %fork t_11, S_000001a03ea9d970;
    %jmp t_10;
    .scope S_000001a03ea9d970;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5def0_0, 0, 32;
T_28.14 ;
    %load/vec4 v000001a03ea5def0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_28.15, 5;
    %ix/getv/s 4, v000001a03ea5def0_0;
    %load/vec4a v000001a040690ac0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_28.16, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a03ea5def0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
    %jmp T_28.17;
T_28.16 ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a03ea5def0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
T_28.17 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a03ea5def0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a03ea5def0_0, 0, 32;
    %jmp T_28.14;
T_28.15 ;
    %end;
    .scope S_000001a03ea9c6b0;
t_10 %join;
    %end;
S_000001a03ea9d970 .scope begin, "$ivl_foreach4" "$ivl_foreach4" 4 55, 4 55 0, S_000001a03ea9c6b0;
 .timescale 0 0;
v000001a03ea5def0_0 .var/2s "i", 31 0;
S_000001a03ea9d330 .scope function.void, "set_all_unused_code" "set_all_unused_code" 4 105, 4 105 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.set_all_unused_code ;
    %fork t_13, S_000001a03ea9d1a0;
    %jmp t_12;
    .scope S_000001a03ea9d1a0;
t_13 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5dbd0_0, 0, 32;
T_29.18 ;
    %load/vec4 v000001a03ea5dbd0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_29.19, 5;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v000001a03ea5dbd0_0;
    %store/vec4a v000001a040690ac0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a03ea5dbd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a03ea5dbd0_0, 0, 32;
    %jmp T_29.18;
T_29.19 ;
    %end;
    .scope S_000001a03ea9d330;
t_12 %join;
    %end;
S_000001a03ea9d1a0 .scope begin, "$ivl_foreach7" "$ivl_foreach7" 4 106, 4 106 0, S_000001a03ea9d330;
 .timescale 0 0;
v000001a03ea5dbd0_0 .var/2s "i", 31 0;
S_000001a03ea9c520 .scope function.void, "set_all_zero" "set_all_zero" 4 96, 4 96 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.set_all_zero ;
    %fork t_15, S_000001a03ea9db00;
    %jmp t_14;
    .scope S_000001a03ea9db00;
t_15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5e990_0, 0, 32;
T_30.20 ;
    %load/vec4 v000001a03ea5e990_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_30.21, 5;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v000001a03ea5e990_0;
    %store/vec4a v000001a040690ac0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a03ea5e990_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a03ea5e990_0, 0, 32;
    %jmp T_30.20;
T_30.21 ;
    %end;
    .scope S_000001a03ea9c520;
t_14 %join;
    %end;
S_000001a03ea9db00 .scope begin, "$ivl_foreach6" "$ivl_foreach6" 4 97, 4 97 0, S_000001a03ea9c520;
 .timescale 0 0;
v000001a03ea5e990_0 .var/2s "i", 31 0;
S_000001a03ea9dc90 .scope function.void, "set_big_element" "set_big_element" 4 72, 4 72 0, S_000001a03ea9cb60;
 .timescale 0 0;
v000001a03ea5e850_0 .var/2s "index", 31 0;
TD_mx_int8_sum_drv.vector_in.set_big_element ;
    %ix/getv/s 4, v000001a03ea5e850_0;
    %load/vec4a v000001a040690ac0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_31.22, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a03ea5e850_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
    %jmp T_31.23;
T_31.22 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a03ea5e850_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
T_31.23 ;
    %end;
S_000001a03ea9de20 .scope function.void, "set_big_negative" "set_big_negative" 4 84, 4 84 0, S_000001a03ea9cb60;
 .timescale 0 0;
v000001a03ea5e710_0 .var/2s "index", 31 0;
TD_mx_int8_sum_drv.vector_in.set_big_negative ;
    %load/vec4 v000001a03ea5e710_0;
    %store/vec4 v000001a03ea5e8f0_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_negative_element, S_000001a04068e0b0;
    %load/vec4 v000001a03ea5e710_0;
    %store/vec4 v000001a03ea5e850_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_big_element, S_000001a03ea9dc90;
    %end;
S_000001a03ea9c390 .scope function.void, "set_big_positive" "set_big_positive" 4 79, 4 79 0, S_000001a03ea9cb60;
 .timescale 0 0;
v000001a03ea5dc70_0 .var/2s "index", 31 0;
TD_mx_int8_sum_drv.vector_in.set_big_positive ;
    %load/vec4 v000001a03ea5dc70_0;
    %store/vec4 v000001a03ea5e0d0_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_positive_element, S_000001a04068df20;
    %load/vec4 v000001a03ea5dc70_0;
    %store/vec4 v000001a03ea5e850_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_big_element, S_000001a03ea9dc90;
    %end;
S_000001a04068f1e0 .scope function.void, "set_largest_scale" "set_largest_scale" 4 114, 4 114 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.set_largest_scale ;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001a04068f940_0, 0, 8;
    %end;
S_000001a04068e0b0 .scope function.void, "set_negative_element" "set_negative_element" 4 50, 4 50 0, S_000001a03ea9cb60;
 .timescale 0 0;
v000001a03ea5e8f0_0 .var/2s "index", 31 0;
TD_mx_int8_sum_drv.vector_in.set_negative_element ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a03ea5e8f0_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
    %end;
S_000001a04068df20 .scope function.void, "set_positive_element" "set_positive_element" 4 46, 4 46 0, S_000001a03ea9cb60;
 .timescale 0 0;
v000001a03ea5e0d0_0 .var/2s "index", 31 0;
TD_mx_int8_sum_drv.vector_in.set_positive_element ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a03ea5e0d0_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690ac0, 4, 5;
    %end;
S_000001a04068dc00 .scope function.void, "set_sum_negative_carry" "set_sum_negative_carry" 4 126, 4 126 0, S_000001a03ea9cb60;
 .timescale 0 0;
v000001a03ea5e170_0 .var/2s "big_negative_num", 31 0;
v000001a03ea5e210_0 .var/2s "is_small_scale", 31 0;
TD_mx_int8_sum_drv.vector_in.set_sum_negative_carry ;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_largest_scale, S_000001a04068f1e0;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v000001a04068f940_0;
    %load/vec4 v000001a03ea5e210_0;
    %pad/u 8;
    %sub;
    %store/vec4 v000001a04068f940_0, 0, 8;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_all_small_elements, S_000001a03ea9c6b0;
    %fork t_17, S_000001a04068dd90;
    %jmp t_16;
    .scope S_000001a04068dd90;
t_17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5ea30_0, 0, 32;
T_37.24 ;
    %load/vec4 v000001a03ea5ea30_0;
    %load/vec4 v000001a03ea5e170_0;
    %cmp/s;
    %jmp/0xz T_37.25, 5;
    %load/vec4 v000001a03ea5ea30_0;
    %store/vec4 v000001a03ea5e710_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_big_negative, S_000001a03ea9de20;
    %load/vec4 v000001a03ea5ea30_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000001a03ea5ea30_0, 0, 32;
    %jmp T_37.24;
T_37.25 ;
    %end;
    .scope S_000001a04068dc00;
t_16 %join;
    %end;
S_000001a04068dd90 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 4 130, 4 130 0, S_000001a04068dc00;
 .timescale 0 0;
v000001a03ea5ea30_0 .var/2s "i", 31 0;
S_000001a04068e560 .scope function.void, "set_sum_positive_carry" "set_sum_positive_carry" 4 118, 4 118 0, S_000001a03ea9cb60;
 .timescale 0 0;
v000001a03ea5e490_0 .var/2s "big_positive_num", 31 0;
v000001a03ea5e7b0_0 .var/2s "is_small_scale", 31 0;
TD_mx_int8_sum_drv.vector_in.set_sum_positive_carry ;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_largest_scale, S_000001a04068f1e0;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v000001a04068f940_0;
    %load/vec4 v000001a03ea5e7b0_0;
    %pad/u 8;
    %sub;
    %store/vec4 v000001a04068f940_0, 0, 8;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_all_small_elements, S_000001a03ea9c6b0;
    %fork t_19, S_000001a04068d5c0;
    %jmp t_18;
    .scope S_000001a04068d5c0;
t_19 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a03ea5e3f0_0, 0, 32;
T_38.26 ;
    %load/vec4 v000001a03ea5e3f0_0;
    %load/vec4 v000001a03ea5e490_0;
    %cmp/s;
    %jmp/0xz T_38.27, 5;
    %load/vec4 v000001a03ea5e3f0_0;
    %store/vec4 v000001a03ea5dc70_0, 0, 32;
    %callf/void TD_mx_int8_sum_drv.vector_in.set_big_positive, S_000001a03ea9c390;
    %load/vec4 v000001a03ea5e3f0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000001a03ea5e3f0_0, 0, 32;
    %jmp T_38.26;
T_38.27 ;
    %end;
    .scope S_000001a04068e560;
t_18 %join;
    %end;
S_000001a04068d5c0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 122, 4 122 0, S_000001a04068e560;
 .timescale 0 0;
v000001a03ea5e3f0_0 .var/2s "i", 31 0;
S_000001a04068e240 .scope function.void, "set_unused_encode" "set_unused_encode" 4 101, 4 101 0, S_000001a03ea9cb60;
 .timescale 0 0;
v000001a03ea5e530_0 .var/2s "elem_index", 31 0;
TD_mx_int8_sum_drv.vector_in.set_unused_encode ;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v000001a03ea5e530_0;
    %store/vec4a v000001a040690ac0, 4, 0;
    %end;
S_000001a04068eec0 .scope function.void, "set_zero" "set_zero" 4 89, 4 89 0, S_000001a03ea9cb60;
 .timescale 0 0;
v000001a040690ca0_0 .var/2s "elem_index", 31 0;
TD_mx_int8_sum_drv.vector_in.set_zero ;
    %ix/getv/s 4, v000001a040690ca0_0;
    %load/vec4a v000001a040690ac0, 4;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_40.28, 4;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v000001a040690ca0_0;
    %store/vec4a v000001a040690ac0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a04068fc60_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000001a04068fc60_0, 0, 6;
T_40.28 ;
    %end;
S_000001a04068e3d0 .scope function.void, "set_zero_scale" "set_zero_scale" 4 110, 4 110 0, S_000001a03ea9cb60;
 .timescale 0 0;
TD_mx_int8_sum_drv.vector_in.set_zero_scale ;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v000001a04068f940_0, 0, 8;
    %end;
S_000001a03e9fb350 .scope module, "op_negate_int8" "op_negate_int8" 4 135;
 .timescale 0 0;
v000001a040690d40_0 .array/port v000001a040690d40, 0;
L_000001a03ea56720 .functor BUFZ 8, v000001a040690d40_0, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_1 .array/port v000001a040690d40, 1;
L_000001a03ea56db0 .functor BUFZ 8, v000001a040690d40_1, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_2 .array/port v000001a040690d40, 2;
L_000001a03ea565d0 .functor BUFZ 8, v000001a040690d40_2, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_3 .array/port v000001a040690d40, 3;
L_000001a03ea56790 .functor BUFZ 8, v000001a040690d40_3, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_4 .array/port v000001a040690d40, 4;
L_000001a03ea56330 .functor BUFZ 8, v000001a040690d40_4, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_5 .array/port v000001a040690d40, 5;
L_000001a03ea56800 .functor BUFZ 8, v000001a040690d40_5, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_6 .array/port v000001a040690d40, 6;
L_000001a03ea56a30 .functor BUFZ 8, v000001a040690d40_6, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_7 .array/port v000001a040690d40, 7;
L_000001a03ea56bf0 .functor BUFZ 8, v000001a040690d40_7, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_8 .array/port v000001a040690d40, 8;
L_000001a03ea56cd0 .functor BUFZ 8, v000001a040690d40_8, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_9 .array/port v000001a040690d40, 9;
L_000001a03ea568e0 .functor BUFZ 8, v000001a040690d40_9, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_10 .array/port v000001a040690d40, 10;
L_000001a03ea56950 .functor BUFZ 8, v000001a040690d40_10, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_11 .array/port v000001a040690d40, 11;
L_000001a03ea569c0 .functor BUFZ 8, v000001a040690d40_11, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_12 .array/port v000001a040690d40, 12;
L_000001a03ea563a0 .functor BUFZ 8, v000001a040690d40_12, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_13 .array/port v000001a040690d40, 13;
L_000001a03ea56b10 .functor BUFZ 8, v000001a040690d40_13, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_14 .array/port v000001a040690d40, 14;
L_000001a03ea56e20 .functor BUFZ 8, v000001a040690d40_14, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_15 .array/port v000001a040690d40, 15;
L_000001a03ea56fe0 .functor BUFZ 8, v000001a040690d40_15, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_16 .array/port v000001a040690d40, 16;
L_000001a03ea56aa0 .functor BUFZ 8, v000001a040690d40_16, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_17 .array/port v000001a040690d40, 17;
L_000001a03ea57050 .functor BUFZ 8, v000001a040690d40_17, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_18 .array/port v000001a040690d40, 18;
L_000001a03ea56410 .functor BUFZ 8, v000001a040690d40_18, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_19 .array/port v000001a040690d40, 19;
L_000001a03ea56480 .functor BUFZ 8, v000001a040690d40_19, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_20 .array/port v000001a040690d40, 20;
L_000001a04069edd0 .functor BUFZ 8, v000001a040690d40_20, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_21 .array/port v000001a040690d40, 21;
L_000001a04069e7b0 .functor BUFZ 8, v000001a040690d40_21, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_22 .array/port v000001a040690d40, 22;
L_000001a04069ef20 .functor BUFZ 8, v000001a040690d40_22, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_23 .array/port v000001a040690d40, 23;
L_000001a04069eac0 .functor BUFZ 8, v000001a040690d40_23, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_24 .array/port v000001a040690d40, 24;
L_000001a04069e9e0 .functor BUFZ 8, v000001a040690d40_24, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_25 .array/port v000001a040690d40, 25;
L_000001a04069e270 .functor BUFZ 8, v000001a040690d40_25, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_26 .array/port v000001a040690d40, 26;
L_000001a04069eba0 .functor BUFZ 8, v000001a040690d40_26, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_27 .array/port v000001a040690d40, 27;
L_000001a04069e4a0 .functor BUFZ 8, v000001a040690d40_27, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_28 .array/port v000001a040690d40, 28;
L_000001a04069eeb0 .functor BUFZ 8, v000001a040690d40_28, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_29 .array/port v000001a040690d40, 29;
L_000001a04069ee40 .functor BUFZ 8, v000001a040690d40_29, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_30 .array/port v000001a040690d40, 30;
L_000001a04069e2e0 .functor BUFZ 8, v000001a040690d40_30, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040690d40_31 .array/port v000001a040690d40, 31;
L_000001a04069e510 .functor BUFZ 8, v000001a040690d40_31, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_0 .array/port v000001a040699b10, 0;
L_000001a04069e900 .functor BUFZ 8, v000001a040699b10_0, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_1 .array/port v000001a040699b10, 1;
L_000001a04069e890 .functor BUFZ 8, v000001a040699b10_1, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_2 .array/port v000001a040699b10, 2;
L_000001a04069ef90 .functor BUFZ 8, v000001a040699b10_2, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_3 .array/port v000001a040699b10, 3;
L_000001a04069e970 .functor BUFZ 8, v000001a040699b10_3, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_4 .array/port v000001a040699b10, 4;
L_000001a04069f000 .functor BUFZ 8, v000001a040699b10_4, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_5 .array/port v000001a040699b10, 5;
L_000001a04069f150 .functor BUFZ 8, v000001a040699b10_5, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_6 .array/port v000001a040699b10, 6;
L_000001a04069e350 .functor BUFZ 8, v000001a040699b10_6, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_7 .array/port v000001a040699b10, 7;
L_000001a04069e580 .functor BUFZ 8, v000001a040699b10_7, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_8 .array/port v000001a040699b10, 8;
L_000001a04069ea50 .functor BUFZ 8, v000001a040699b10_8, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_9 .array/port v000001a040699b10, 9;
L_000001a04069eb30 .functor BUFZ 8, v000001a040699b10_9, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_10 .array/port v000001a040699b10, 10;
L_000001a04069e660 .functor BUFZ 8, v000001a040699b10_10, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_11 .array/port v000001a040699b10, 11;
L_000001a04069e3c0 .functor BUFZ 8, v000001a040699b10_11, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_12 .array/port v000001a040699b10, 12;
L_000001a04069f070 .functor BUFZ 8, v000001a040699b10_12, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_13 .array/port v000001a040699b10, 13;
L_000001a04069ec10 .functor BUFZ 8, v000001a040699b10_13, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_14 .array/port v000001a040699b10, 14;
L_000001a04069e820 .functor BUFZ 8, v000001a040699b10_14, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_15 .array/port v000001a040699b10, 15;
L_000001a04069e430 .functor BUFZ 8, v000001a040699b10_15, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_16 .array/port v000001a040699b10, 16;
L_000001a04069e5f0 .functor BUFZ 8, v000001a040699b10_16, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_17 .array/port v000001a040699b10, 17;
L_000001a04069e6d0 .functor BUFZ 8, v000001a040699b10_17, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_18 .array/port v000001a040699b10, 18;
L_000001a04069f0e0 .functor BUFZ 8, v000001a040699b10_18, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_19 .array/port v000001a040699b10, 19;
L_000001a04069e740 .functor BUFZ 8, v000001a040699b10_19, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_20 .array/port v000001a040699b10, 20;
L_000001a04069ec80 .functor BUFZ 8, v000001a040699b10_20, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_21 .array/port v000001a040699b10, 21;
L_000001a04069ecf0 .functor BUFZ 8, v000001a040699b10_21, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_22 .array/port v000001a040699b10, 22;
L_000001a04069ed60 .functor BUFZ 8, v000001a040699b10_22, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_23 .array/port v000001a040699b10, 23;
L_000001a0406a1d90 .functor BUFZ 8, v000001a040699b10_23, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_24 .array/port v000001a040699b10, 24;
L_000001a0406a2490 .functor BUFZ 8, v000001a040699b10_24, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_25 .array/port v000001a040699b10, 25;
L_000001a0406a1850 .functor BUFZ 8, v000001a040699b10_25, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_26 .array/port v000001a040699b10, 26;
L_000001a0406a1b60 .functor BUFZ 8, v000001a040699b10_26, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_27 .array/port v000001a040699b10, 27;
L_000001a0406a22d0 .functor BUFZ 8, v000001a040699b10_27, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_28 .array/port v000001a040699b10, 28;
L_000001a0406a1620 .functor BUFZ 8, v000001a040699b10_28, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_29 .array/port v000001a040699b10, 29;
L_000001a0406a17e0 .functor BUFZ 8, v000001a040699b10_29, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_30 .array/port v000001a040699b10, 30;
L_000001a0406a1bd0 .functor BUFZ 8, v000001a040699b10_30, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a040699b10_31 .array/port v000001a040699b10, 31;
L_000001a0406a1700 .functor BUFZ 8, v000001a040699b10_31, C4<00000000>, C4<00000000>, C4<00000000>;
v000001a0406996b0 .array "input_elements", 31 0;
v000001a0406996b0_0 .net v000001a0406996b0 0, 7 0, L_000001a03ea56720; 1 drivers
v000001a0406996b0_1 .net v000001a0406996b0 1, 7 0, L_000001a03ea56db0; 1 drivers
v000001a0406996b0_2 .net v000001a0406996b0 2, 7 0, L_000001a03ea565d0; 1 drivers
v000001a0406996b0_3 .net v000001a0406996b0 3, 7 0, L_000001a03ea56790; 1 drivers
v000001a0406996b0_4 .net v000001a0406996b0 4, 7 0, L_000001a03ea56330; 1 drivers
v000001a0406996b0_5 .net v000001a0406996b0 5, 7 0, L_000001a03ea56800; 1 drivers
v000001a0406996b0_6 .net v000001a0406996b0 6, 7 0, L_000001a03ea56a30; 1 drivers
v000001a0406996b0_7 .net v000001a0406996b0 7, 7 0, L_000001a03ea56bf0; 1 drivers
v000001a0406996b0_8 .net v000001a0406996b0 8, 7 0, L_000001a03ea56cd0; 1 drivers
v000001a0406996b0_9 .net v000001a0406996b0 9, 7 0, L_000001a03ea568e0; 1 drivers
v000001a0406996b0_10 .net v000001a0406996b0 10, 7 0, L_000001a03ea56950; 1 drivers
v000001a0406996b0_11 .net v000001a0406996b0 11, 7 0, L_000001a03ea569c0; 1 drivers
v000001a0406996b0_12 .net v000001a0406996b0 12, 7 0, L_000001a03ea563a0; 1 drivers
v000001a0406996b0_13 .net v000001a0406996b0 13, 7 0, L_000001a03ea56b10; 1 drivers
v000001a0406996b0_14 .net v000001a0406996b0 14, 7 0, L_000001a03ea56e20; 1 drivers
v000001a0406996b0_15 .net v000001a0406996b0 15, 7 0, L_000001a03ea56fe0; 1 drivers
v000001a0406996b0_16 .net v000001a0406996b0 16, 7 0, L_000001a03ea56aa0; 1 drivers
v000001a0406996b0_17 .net v000001a0406996b0 17, 7 0, L_000001a03ea57050; 1 drivers
v000001a0406996b0_18 .net v000001a0406996b0 18, 7 0, L_000001a03ea56410; 1 drivers
v000001a0406996b0_19 .net v000001a0406996b0 19, 7 0, L_000001a03ea56480; 1 drivers
v000001a0406996b0_20 .net v000001a0406996b0 20, 7 0, L_000001a04069edd0; 1 drivers
v000001a0406996b0_21 .net v000001a0406996b0 21, 7 0, L_000001a04069e7b0; 1 drivers
v000001a0406996b0_22 .net v000001a0406996b0 22, 7 0, L_000001a04069ef20; 1 drivers
v000001a0406996b0_23 .net v000001a0406996b0 23, 7 0, L_000001a04069eac0; 1 drivers
v000001a0406996b0_24 .net v000001a0406996b0 24, 7 0, L_000001a04069e9e0; 1 drivers
v000001a0406996b0_25 .net v000001a0406996b0 25, 7 0, L_000001a04069e270; 1 drivers
v000001a0406996b0_26 .net v000001a0406996b0 26, 7 0, L_000001a04069eba0; 1 drivers
v000001a0406996b0_27 .net v000001a0406996b0 27, 7 0, L_000001a04069e4a0; 1 drivers
v000001a0406996b0_28 .net v000001a0406996b0 28, 7 0, L_000001a04069eeb0; 1 drivers
v000001a0406996b0_29 .net v000001a0406996b0 29, 7 0, L_000001a04069ee40; 1 drivers
v000001a0406996b0_30 .net v000001a0406996b0 30, 7 0, L_000001a04069e2e0; 1 drivers
v000001a0406996b0_31 .net v000001a0406996b0 31, 7 0, L_000001a04069e510; 1 drivers
v000001a040699c50_0 .net "input_scale", 7 0, v000001a04068f580_0;  1 drivers
v000001a040698850 .array "output_elements", 31 0;
v000001a040698850_0 .net v000001a040698850 0, 7 0, L_000001a04069e900; 1 drivers
v000001a040698850_1 .net v000001a040698850 1, 7 0, L_000001a04069e890; 1 drivers
v000001a040698850_2 .net v000001a040698850 2, 7 0, L_000001a04069ef90; 1 drivers
v000001a040698850_3 .net v000001a040698850 3, 7 0, L_000001a04069e970; 1 drivers
v000001a040698850_4 .net v000001a040698850 4, 7 0, L_000001a04069f000; 1 drivers
v000001a040698850_5 .net v000001a040698850 5, 7 0, L_000001a04069f150; 1 drivers
v000001a040698850_6 .net v000001a040698850 6, 7 0, L_000001a04069e350; 1 drivers
v000001a040698850_7 .net v000001a040698850 7, 7 0, L_000001a04069e580; 1 drivers
v000001a040698850_8 .net v000001a040698850 8, 7 0, L_000001a04069ea50; 1 drivers
v000001a040698850_9 .net v000001a040698850 9, 7 0, L_000001a04069eb30; 1 drivers
v000001a040698850_10 .net v000001a040698850 10, 7 0, L_000001a04069e660; 1 drivers
v000001a040698850_11 .net v000001a040698850 11, 7 0, L_000001a04069e3c0; 1 drivers
v000001a040698850_12 .net v000001a040698850 12, 7 0, L_000001a04069f070; 1 drivers
v000001a040698850_13 .net v000001a040698850 13, 7 0, L_000001a04069ec10; 1 drivers
v000001a040698850_14 .net v000001a040698850 14, 7 0, L_000001a04069e820; 1 drivers
v000001a040698850_15 .net v000001a040698850 15, 7 0, L_000001a04069e430; 1 drivers
v000001a040698850_16 .net v000001a040698850 16, 7 0, L_000001a04069e5f0; 1 drivers
v000001a040698850_17 .net v000001a040698850 17, 7 0, L_000001a04069e6d0; 1 drivers
v000001a040698850_18 .net v000001a040698850 18, 7 0, L_000001a04069f0e0; 1 drivers
v000001a040698850_19 .net v000001a040698850 19, 7 0, L_000001a04069e740; 1 drivers
v000001a040698850_20 .net v000001a040698850 20, 7 0, L_000001a04069ec80; 1 drivers
v000001a040698850_21 .net v000001a040698850 21, 7 0, L_000001a04069ecf0; 1 drivers
v000001a040698850_22 .net v000001a040698850 22, 7 0, L_000001a04069ed60; 1 drivers
v000001a040698850_23 .net v000001a040698850 23, 7 0, L_000001a0406a1d90; 1 drivers
v000001a040698850_24 .net v000001a040698850 24, 7 0, L_000001a0406a2490; 1 drivers
v000001a040698850_25 .net v000001a040698850 25, 7 0, L_000001a0406a1850; 1 drivers
v000001a040698850_26 .net v000001a040698850 26, 7 0, L_000001a0406a1b60; 1 drivers
v000001a040698850_27 .net v000001a040698850 27, 7 0, L_000001a0406a22d0; 1 drivers
v000001a040698850_28 .net v000001a040698850 28, 7 0, L_000001a0406a1620; 1 drivers
v000001a040698850_29 .net v000001a040698850 29, 7 0, L_000001a0406a17e0; 1 drivers
v000001a040698850_30 .net v000001a040698850 30, 7 0, L_000001a0406a1bd0; 1 drivers
v000001a040698850_31 .net v000001a040698850 31, 7 0, L_000001a0406a1700; 1 drivers
v000001a040699110_0 .net "output_scale", 7 0, v000001a040699250_0;  1 drivers
S_000001a04068d750 .scope module, "a" "t_mx_int8_vector" 4 141, 4 11 0, S_000001a03e9fb350;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scale";
    .port_info 1 /OUTPUT 256 "elements";
P_000001a03ea14c10 .param/l "largest_scale" 1 4 15, C4<11111111>;
P_000001a03ea14c48 .param/l "unused_code" 1 4 14, C4<10000000>;
P_000001a03ea14c80 .param/l "zero_scale" 1 4 16, C4<00000000>;
v000001a040690d40 .array "elements", 31 0, 7 0;
v000001a04068f580_0 .var "scale", 7 0;
v000001a040690e80_0 .var "zero_num", 5 0;
S_000001a04068ea10 .scope function.void, "post_randomize" "post_randomize" 4 20, 4 20 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.post_randomize ;
    %pushi/vec4 0, 0, 6;
    %store/vec4 v000001a040690e80_0, 0, 6;
    %fork t_21, S_000001a04068e6f0;
    %jmp t_20;
    .scope S_000001a04068e6f0;
t_21 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a040690de0_0, 0, 32;
T_42.30 ;
    %load/vec4 v000001a040690de0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_42.31, 5;
    %ix/getv/s 4, v000001a040690de0_0;
    %load/vec4a v000001a040690d40, 4;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_42.32, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a040690e80_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000001a040690e80_0, 0, 6;
T_42.32 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a040690de0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a040690de0_0, 0, 32;
    %jmp T_42.30;
T_42.31 ;
    %end;
    .scope S_000001a04068ea10;
t_20 %join;
    %end;
S_000001a04068e6f0 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 4 22, 4 22 0, S_000001a04068ea10;
 .timescale 0 0;
v000001a040690de0_0 .var/2s "i", 31 0;
S_000001a04068d430 .scope function.void, "randomize" "randomize" 4 29, 4 29 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.randomize ;
    %vpi_func 4 30 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %store/vec4 v000001a04068f580_0, 0, 8;
    %fork t_23, S_000001a04068eba0;
    %jmp t_22;
    .scope S_000001a04068eba0;
t_23 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a040690700_0, 0, 32;
T_43.34 ;
    %load/vec4 v000001a040690700_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_43.35, 5;
    %vpi_func 4 32 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %ix/getv/s 4, v000001a040690700_0;
    %store/vec4a v000001a040690d40, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a040690700_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a040690700_0, 0, 32;
    %jmp T_43.34;
T_43.35 ;
    %end;
    .scope S_000001a04068d430;
t_22 %join;
    %callf/void TD_op_negate_int8.a.post_randomize, S_000001a04068ea10;
    %end;
S_000001a04068eba0 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 4 31, 4 31 0, S_000001a04068d430;
 .timescale 0 0;
v000001a040690700_0 .var/2s "i", 31 0;
S_000001a04068d8e0 .scope function.void, "set_all_big_elements" "set_all_big_elements" 4 63, 4 63 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_big_elements ;
    %fork t_25, S_000001a04068e880;
    %jmp t_24;
    .scope S_000001a04068e880;
t_25 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a0406907a0_0, 0, 32;
T_44.36 ;
    %load/vec4 v000001a0406907a0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_44.37, 5;
    %ix/getv/s 4, v000001a0406907a0_0;
    %load/vec4a v000001a040690d40, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_44.38, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a0406907a0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
    %jmp T_44.39;
T_44.38 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a0406907a0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
T_44.39 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a0406907a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a0406907a0_0, 0, 32;
    %jmp T_44.36;
T_44.37 ;
    %end;
    .scope S_000001a04068d8e0;
t_24 %join;
    %end;
S_000001a04068e880 .scope begin, "$ivl_foreach5" "$ivl_foreach5" 4 64, 4 64 0, S_000001a04068d8e0;
 .timescale 0 0;
v000001a0406907a0_0 .var/2s "i", 31 0;
S_000001a04068ed30 .scope function.void, "set_all_negative" "set_all_negative" 4 41, 4 41 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_negative ;
    %fork t_27, S_000001a04068da70;
    %jmp t_26;
    .scope S_000001a04068da70;
t_27 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a040690b60_0, 0, 32;
T_45.40 ;
    %load/vec4 v000001a040690b60_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_45.41, 5;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a040690b60_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a040690b60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a040690b60_0, 0, 32;
    %jmp T_45.40;
T_45.41 ;
    %end;
    .scope S_000001a04068ed30;
t_26 %join;
    %end;
S_000001a04068da70 .scope begin, "$ivl_foreach3" "$ivl_foreach3" 4 42, 4 42 0, S_000001a04068ed30;
 .timescale 0 0;
v000001a040690b60_0 .var/2s "i", 31 0;
S_000001a04068f050 .scope function.void, "set_all_positive" "set_all_positive" 4 36, 4 36 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_positive ;
    %fork t_29, S_000001a0406923f0;
    %jmp t_28;
    .scope S_000001a0406923f0;
t_29 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a0406905c0_0, 0, 32;
T_46.42 ;
    %load/vec4 v000001a0406905c0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_46.43, 5;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a0406905c0_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a0406905c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a0406905c0_0, 0, 32;
    %jmp T_46.42;
T_46.43 ;
    %end;
    .scope S_000001a04068f050;
t_28 %join;
    %end;
S_000001a0406923f0 .scope begin, "$ivl_foreach2" "$ivl_foreach2" 4 37, 4 37 0, S_000001a04068f050;
 .timescale 0 0;
v000001a0406905c0_0 .var/2s "i", 31 0;
S_000001a040692ee0 .scope function.void, "set_all_small_elements" "set_all_small_elements" 4 54, 4 54 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_small_elements ;
    %fork t_31, S_000001a040692710;
    %jmp t_30;
    .scope S_000001a040692710;
t_31 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a040690840_0, 0, 32;
T_47.44 ;
    %load/vec4 v000001a040690840_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_47.45, 5;
    %ix/getv/s 4, v000001a040690840_0;
    %load/vec4a v000001a040690d40, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_47.46, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a040690840_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
    %jmp T_47.47;
T_47.46 ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a040690840_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
T_47.47 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a040690840_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a040690840_0, 0, 32;
    %jmp T_47.44;
T_47.45 ;
    %end;
    .scope S_000001a040692ee0;
t_30 %join;
    %end;
S_000001a040692710 .scope begin, "$ivl_foreach4" "$ivl_foreach4" 4 55, 4 55 0, S_000001a040692ee0;
 .timescale 0 0;
v000001a040690840_0 .var/2s "i", 31 0;
S_000001a040692bc0 .scope function.void, "set_all_unused_code" "set_all_unused_code" 4 105, 4 105 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_unused_code ;
    %fork t_33, S_000001a040692a30;
    %jmp t_32;
    .scope S_000001a040692a30;
t_33 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a04068fd00_0, 0, 32;
T_48.48 ;
    %load/vec4 v000001a04068fd00_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_48.49, 5;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v000001a04068fd00_0;
    %store/vec4a v000001a040690d40, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a04068fd00_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a04068fd00_0, 0, 32;
    %jmp T_48.48;
T_48.49 ;
    %end;
    .scope S_000001a040692bc0;
t_32 %join;
    %end;
S_000001a040692a30 .scope begin, "$ivl_foreach7" "$ivl_foreach7" 4 106, 4 106 0, S_000001a040692bc0;
 .timescale 0 0;
v000001a04068fd00_0 .var/2s "i", 31 0;
S_000001a040691900 .scope function.void, "set_all_zero" "set_all_zero" 4 96, 4 96 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_zero ;
    %fork t_35, S_000001a040691a90;
    %jmp t_34;
    .scope S_000001a040691a90;
t_35 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a04068f9e0_0, 0, 32;
T_49.50 ;
    %load/vec4 v000001a04068f9e0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_49.51, 5;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v000001a04068f9e0_0;
    %store/vec4a v000001a040690d40, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a04068f9e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a04068f9e0_0, 0, 32;
    %jmp T_49.50;
T_49.51 ;
    %end;
    .scope S_000001a040691900;
t_34 %join;
    %end;
S_000001a040691a90 .scope begin, "$ivl_foreach6" "$ivl_foreach6" 4 97, 4 97 0, S_000001a040691900;
 .timescale 0 0;
v000001a04068f9e0_0 .var/2s "i", 31 0;
S_000001a040692d50 .scope function.void, "set_big_element" "set_big_element" 4 72, 4 72 0, S_000001a04068d750;
 .timescale 0 0;
v000001a040690660_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_big_element ;
    %ix/getv/s 4, v000001a040690660_0;
    %load/vec4a v000001a040690d40, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_50.52, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a040690660_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
    %jmp T_50.53;
T_50.52 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a040690660_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
T_50.53 ;
    %end;
S_000001a040692260 .scope function.void, "set_big_negative" "set_big_negative" 4 84, 4 84 0, S_000001a04068d750;
 .timescale 0 0;
v000001a0406908e0_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_big_negative ;
    %load/vec4 v000001a0406908e0_0;
    %store/vec4 v000001a04068f760_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_negative_element, S_000001a040691c20;
    %load/vec4 v000001a0406908e0_0;
    %store/vec4 v000001a040690660_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_big_element, S_000001a040692d50;
    %end;
S_000001a0406915e0 .scope function.void, "set_big_positive" "set_big_positive" 4 79, 4 79 0, S_000001a04068d750;
 .timescale 0 0;
v000001a04068fa80_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_big_positive ;
    %load/vec4 v000001a04068fa80_0;
    %store/vec4 v000001a040690980_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_positive_element, S_000001a040691f40;
    %load/vec4 v000001a04068fa80_0;
    %store/vec4 v000001a040690660_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_big_element, S_000001a040692d50;
    %end;
S_000001a040692580 .scope function.void, "set_largest_scale" "set_largest_scale" 4 114, 4 114 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.set_largest_scale ;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001a04068f580_0, 0, 8;
    %end;
S_000001a040691c20 .scope function.void, "set_negative_element" "set_negative_element" 4 50, 4 50 0, S_000001a04068d750;
 .timescale 0 0;
v000001a04068f760_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_negative_element ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a04068f760_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
    %end;
S_000001a040691f40 .scope function.void, "set_positive_element" "set_positive_element" 4 46, 4 46 0, S_000001a04068d750;
 .timescale 0 0;
v000001a040690980_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_positive_element ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a040690980_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040690d40, 4, 5;
    %end;
S_000001a040691db0 .scope function.void, "set_sum_negative_carry" "set_sum_negative_carry" 4 126, 4 126 0, S_000001a04068d750;
 .timescale 0 0;
v000001a0406900c0_0 .var/2s "big_negative_num", 31 0;
v000001a040690a20_0 .var/2s "is_small_scale", 31 0;
TD_op_negate_int8.a.set_sum_negative_carry ;
    %callf/void TD_op_negate_int8.a.set_largest_scale, S_000001a040692580;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v000001a04068f580_0;
    %load/vec4 v000001a040690a20_0;
    %pad/u 8;
    %sub;
    %store/vec4 v000001a04068f580_0, 0, 8;
    %callf/void TD_op_negate_int8.a.set_all_small_elements, S_000001a040692ee0;
    %fork t_37, S_000001a040691770;
    %jmp t_36;
    .scope S_000001a040691770;
t_37 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a0406912e0_0, 0, 32;
T_56.54 ;
    %load/vec4 v000001a0406912e0_0;
    %load/vec4 v000001a0406900c0_0;
    %cmp/s;
    %jmp/0xz T_56.55, 5;
    %load/vec4 v000001a0406912e0_0;
    %store/vec4 v000001a0406908e0_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_big_negative, S_000001a040692260;
    %load/vec4 v000001a0406912e0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000001a0406912e0_0, 0, 32;
    %jmp T_56.54;
T_56.55 ;
    %end;
    .scope S_000001a040691db0;
t_36 %join;
    %end;
S_000001a040691770 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 4 130, 4 130 0, S_000001a040691db0;
 .timescale 0 0;
v000001a0406912e0_0 .var/2s "i", 31 0;
S_000001a0406928a0 .scope function.void, "set_sum_positive_carry" "set_sum_positive_carry" 4 118, 4 118 0, S_000001a04068d750;
 .timescale 0 0;
v000001a0406911a0_0 .var/2s "big_positive_num", 31 0;
v000001a040690520_0 .var/2s "is_small_scale", 31 0;
TD_op_negate_int8.a.set_sum_positive_carry ;
    %callf/void TD_op_negate_int8.a.set_largest_scale, S_000001a040692580;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v000001a04068f580_0;
    %load/vec4 v000001a040690520_0;
    %pad/u 8;
    %sub;
    %store/vec4 v000001a04068f580_0, 0, 8;
    %callf/void TD_op_negate_int8.a.set_all_small_elements, S_000001a040692ee0;
    %fork t_39, S_000001a0406920d0;
    %jmp t_38;
    .scope S_000001a0406920d0;
t_39 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a0406902a0_0, 0, 32;
T_57.56 ;
    %load/vec4 v000001a0406902a0_0;
    %load/vec4 v000001a0406911a0_0;
    %cmp/s;
    %jmp/0xz T_57.57, 5;
    %load/vec4 v000001a0406902a0_0;
    %store/vec4 v000001a04068fa80_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_big_positive, S_000001a0406915e0;
    %load/vec4 v000001a0406902a0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000001a0406902a0_0, 0, 32;
    %jmp T_57.56;
T_57.57 ;
    %end;
    .scope S_000001a0406928a0;
t_38 %join;
    %end;
S_000001a0406920d0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 122, 4 122 0, S_000001a0406928a0;
 .timescale 0 0;
v000001a0406902a0_0 .var/2s "i", 31 0;
S_000001a040693070 .scope function.void, "set_unused_encode" "set_unused_encode" 4 101, 4 101 0, S_000001a04068d750;
 .timescale 0 0;
v000001a04068fb20_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.a.set_unused_encode ;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v000001a04068fb20_0;
    %store/vec4a v000001a040690d40, 4, 0;
    %end;
S_000001a040693200 .scope function.void, "set_zero" "set_zero" 4 89, 4 89 0, S_000001a04068d750;
 .timescale 0 0;
v000001a040690c00_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.a.set_zero ;
    %ix/getv/s 4, v000001a040690c00_0;
    %load/vec4a v000001a040690d40, 4;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_59.58, 4;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v000001a040690c00_0;
    %store/vec4a v000001a040690d40, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a040690e80_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000001a040690e80_0, 0, 6;
T_59.58 ;
    %end;
S_000001a040691450 .scope function.void, "set_zero_scale" "set_zero_scale" 4 110, 4 110 0, S_000001a04068d750;
 .timescale 0 0;
TD_op_negate_int8.a.set_zero_scale ;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v000001a04068f580_0, 0, 8;
    %end;
S_000001a040693f50 .scope module, "result" "t_mx_int8_vector" 4 142, 4 11 0, S_000001a03e9fb350;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scale";
    .port_info 1 /OUTPUT 256 "elements";
P_000001a040695420 .param/l "largest_scale" 1 4 15, C4<11111111>;
P_000001a040695458 .param/l "unused_code" 1 4 14, C4<10000000>;
P_000001a040695490 .param/l "zero_scale" 1 4 16, C4<00000000>;
v000001a040699b10 .array "elements", 31 0, 7 0;
v000001a040699250_0 .var "scale", 7 0;
v000001a0406991b0_0 .var "zero_num", 5 0;
S_000001a040694590 .scope function.void, "post_randomize" "post_randomize" 4 20, 4 20 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.post_randomize ;
    %pushi/vec4 0, 0, 6;
    %store/vec4 v000001a0406991b0_0, 0, 6;
    %fork t_41, S_000001a040694720;
    %jmp t_40;
    .scope S_000001a040694720;
t_41 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a0406903e0_0, 0, 32;
T_61.60 ;
    %load/vec4 v000001a0406903e0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_61.61, 5;
    %ix/getv/s 4, v000001a0406903e0_0;
    %load/vec4a v000001a040699b10, 4;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_61.62, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a0406991b0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000001a0406991b0_0, 0, 6;
T_61.62 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a0406903e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a0406903e0_0, 0, 32;
    %jmp T_61.60;
T_61.61 ;
    %end;
    .scope S_000001a040694590;
t_40 %join;
    %end;
S_000001a040694720 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 4 22, 4 22 0, S_000001a040694590;
 .timescale 0 0;
v000001a0406903e0_0 .var/2s "i", 31 0;
S_000001a040693780 .scope function.void, "randomize" "randomize" 4 29, 4 29 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.randomize ;
    %vpi_func 4 30 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %store/vec4 v000001a040699250_0, 0, 8;
    %fork t_43, S_000001a040694270;
    %jmp t_42;
    .scope S_000001a040694270;
t_43 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a040690f20_0, 0, 32;
T_62.64 ;
    %load/vec4 v000001a040690f20_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_62.65, 5;
    %vpi_func 4 32 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %ix/getv/s 4, v000001a040690f20_0;
    %store/vec4a v000001a040699b10, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a040690f20_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a040690f20_0, 0, 32;
    %jmp T_62.64;
T_62.65 ;
    %end;
    .scope S_000001a040693780;
t_42 %join;
    %callf/void TD_op_negate_int8.result.post_randomize, S_000001a040694590;
    %end;
S_000001a040694270 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 4 31, 4 31 0, S_000001a040693780;
 .timescale 0 0;
v000001a040690f20_0 .var/2s "i", 31 0;
S_000001a040693c30 .scope function.void, "set_all_big_elements" "set_all_big_elements" 4 63, 4 63 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_big_elements ;
    %fork t_45, S_000001a0406948b0;
    %jmp t_44;
    .scope S_000001a0406948b0;
t_45 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a04068fbc0_0, 0, 32;
T_63.66 ;
    %load/vec4 v000001a04068fbc0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_63.67, 5;
    %ix/getv/s 4, v000001a04068fbc0_0;
    %load/vec4a v000001a040699b10, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_63.68, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a04068fbc0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
    %jmp T_63.69;
T_63.68 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a04068fbc0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
T_63.69 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a04068fbc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a04068fbc0_0, 0, 32;
    %jmp T_63.66;
T_63.67 ;
    %end;
    .scope S_000001a040693c30;
t_44 %join;
    %end;
S_000001a0406948b0 .scope begin, "$ivl_foreach5" "$ivl_foreach5" 4 64, 4 64 0, S_000001a040693c30;
 .timescale 0 0;
v000001a04068fbc0_0 .var/2s "i", 31 0;
S_000001a0406940e0 .scope function.void, "set_all_negative" "set_all_negative" 4 41, 4 41 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_negative ;
    %fork t_47, S_000001a040695210;
    %jmp t_46;
    .scope S_000001a040695210;
t_47 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a040690fc0_0, 0, 32;
T_64.70 ;
    %load/vec4 v000001a040690fc0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_64.71, 5;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a040690fc0_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a040690fc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a040690fc0_0, 0, 32;
    %jmp T_64.70;
T_64.71 ;
    %end;
    .scope S_000001a0406940e0;
t_46 %join;
    %end;
S_000001a040695210 .scope begin, "$ivl_foreach3" "$ivl_foreach3" 4 42, 4 42 0, S_000001a0406940e0;
 .timescale 0 0;
v000001a040690fc0_0 .var/2s "i", 31 0;
S_000001a040695080 .scope function.void, "set_all_positive" "set_all_positive" 4 36, 4 36 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_positive ;
    %fork t_49, S_000001a040693910;
    %jmp t_48;
    .scope S_000001a040693910;
t_49 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a04068ff80_0, 0, 32;
T_65.72 ;
    %load/vec4 v000001a04068ff80_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_65.73, 5;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a04068ff80_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a04068ff80_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a04068ff80_0, 0, 32;
    %jmp T_65.72;
T_65.73 ;
    %end;
    .scope S_000001a040695080;
t_48 %join;
    %end;
S_000001a040693910 .scope begin, "$ivl_foreach2" "$ivl_foreach2" 4 37, 4 37 0, S_000001a040695080;
 .timescale 0 0;
v000001a04068ff80_0 .var/2s "i", 31 0;
S_000001a040694400 .scope function.void, "set_all_small_elements" "set_all_small_elements" 4 54, 4 54 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_small_elements ;
    %fork t_51, S_000001a040693460;
    %jmp t_50;
    .scope S_000001a040693460;
t_51 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a040690480_0, 0, 32;
T_66.74 ;
    %load/vec4 v000001a040690480_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_66.75, 5;
    %ix/getv/s 4, v000001a040690480_0;
    %load/vec4a v000001a040699b10, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_66.76, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a040690480_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
    %jmp T_66.77;
T_66.76 ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a040690480_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
T_66.77 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a040690480_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a040690480_0, 0, 32;
    %jmp T_66.74;
T_66.75 ;
    %end;
    .scope S_000001a040694400;
t_50 %join;
    %end;
S_000001a040693460 .scope begin, "$ivl_foreach4" "$ivl_foreach4" 4 55, 4 55 0, S_000001a040694400;
 .timescale 0 0;
v000001a040690480_0 .var/2s "i", 31 0;
S_000001a0406935f0 .scope function.void, "set_all_unused_code" "set_all_unused_code" 4 105, 4 105 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_unused_code ;
    %fork t_53, S_000001a040694a40;
    %jmp t_52;
    .scope S_000001a040694a40;
t_53 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a04068fda0_0, 0, 32;
T_67.78 ;
    %load/vec4 v000001a04068fda0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_67.79, 5;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v000001a04068fda0_0;
    %store/vec4a v000001a040699b10, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a04068fda0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a04068fda0_0, 0, 32;
    %jmp T_67.78;
T_67.79 ;
    %end;
    .scope S_000001a0406935f0;
t_52 %join;
    %end;
S_000001a040694a40 .scope begin, "$ivl_foreach7" "$ivl_foreach7" 4 106, 4 106 0, S_000001a0406935f0;
 .timescale 0 0;
v000001a04068fda0_0 .var/2s "i", 31 0;
S_000001a040694d60 .scope function.void, "set_all_zero" "set_all_zero" 4 96, 4 96 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_zero ;
    %fork t_55, S_000001a040694ef0;
    %jmp t_54;
    .scope S_000001a040694ef0;
t_55 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a04068fe40_0, 0, 32;
T_68.80 ;
    %load/vec4 v000001a04068fe40_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_68.81, 5;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v000001a04068fe40_0;
    %store/vec4a v000001a040699b10, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a04068fe40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000001a04068fe40_0, 0, 32;
    %jmp T_68.80;
T_68.81 ;
    %end;
    .scope S_000001a040694d60;
t_54 %join;
    %end;
S_000001a040694ef0 .scope begin, "$ivl_foreach6" "$ivl_foreach6" 4 97, 4 97 0, S_000001a040694d60;
 .timescale 0 0;
v000001a04068fe40_0 .var/2s "i", 31 0;
S_000001a040693aa0 .scope function.void, "set_big_element" "set_big_element" 4 72, 4 72 0, S_000001a040693f50;
 .timescale 0 0;
v000001a040691060_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_big_element ;
    %ix/getv/s 4, v000001a040691060_0;
    %load/vec4a v000001a040699b10, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_69.82, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a040691060_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
    %jmp T_69.83;
T_69.82 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a040691060_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
T_69.83 ;
    %end;
S_000001a040693dc0 .scope function.void, "set_big_negative" "set_big_negative" 4 84, 4 84 0, S_000001a040693f50;
 .timescale 0 0;
v000001a04068f440_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_big_negative ;
    %load/vec4 v000001a04068f440_0;
    %store/vec4 v000001a040691100_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_negative_element, S_000001a040696fb0;
    %load/vec4 v000001a04068f440_0;
    %store/vec4 v000001a040691060_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_big_element, S_000001a040693aa0;
    %end;
S_000001a040694bd0 .scope function.void, "set_big_positive" "set_big_positive" 4 79, 4 79 0, S_000001a040693f50;
 .timescale 0 0;
v000001a04068fee0_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_big_positive ;
    %load/vec4 v000001a04068fee0_0;
    %store/vec4 v000001a040690160_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_positive_element, S_000001a0406956b0;
    %load/vec4 v000001a04068fee0_0;
    %store/vec4 v000001a040691060_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_big_element, S_000001a040693aa0;
    %end;
S_000001a040695520 .scope function.void, "set_largest_scale" "set_largest_scale" 4 114, 4 114 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.set_largest_scale ;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001a040699250_0, 0, 8;
    %end;
S_000001a040696fb0 .scope function.void, "set_negative_element" "set_negative_element" 4 50, 4 50 0, S_000001a040693f50;
 .timescale 0 0;
v000001a040691100_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_negative_element ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v000001a040691100_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
    %end;
S_000001a0406956b0 .scope function.void, "set_positive_element" "set_positive_element" 4 46, 4 46 0, S_000001a040693f50;
 .timescale 0 0;
v000001a040690160_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_positive_element ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v000001a040690160_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v000001a040699b10, 4, 5;
    %end;
S_000001a040696e20 .scope function.void, "set_sum_negative_carry" "set_sum_negative_carry" 4 126, 4 126 0, S_000001a040693f50;
 .timescale 0 0;
v000001a040691240_0 .var/2s "big_negative_num", 31 0;
v000001a04068f800_0 .var/2s "is_small_scale", 31 0;
TD_op_negate_int8.result.set_sum_negative_carry ;
    %callf/void TD_op_negate_int8.result.set_largest_scale, S_000001a040695520;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v000001a040699250_0;
    %load/vec4 v000001a04068f800_0;
    %pad/u 8;
    %sub;
    %store/vec4 v000001a040699250_0, 0, 8;
    %callf/void TD_op_negate_int8.result.set_all_small_elements, S_000001a040694400;
    %fork t_57, S_000001a040696330;
    %jmp t_56;
    .scope S_000001a040696330;
t_57 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a04068f6c0_0, 0, 32;
T_75.84 ;
    %load/vec4 v000001a04068f6c0_0;
    %load/vec4 v000001a040691240_0;
    %cmp/s;
    %jmp/0xz T_75.85, 5;
    %load/vec4 v000001a04068f6c0_0;
    %store/vec4 v000001a04068f440_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_big_negative, S_000001a040693dc0;
    %load/vec4 v000001a04068f6c0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000001a04068f6c0_0, 0, 32;
    %jmp T_75.84;
T_75.85 ;
    %end;
    .scope S_000001a040696e20;
t_56 %join;
    %end;
S_000001a040696330 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 4 130, 4 130 0, S_000001a040696e20;
 .timescale 0 0;
v000001a04068f6c0_0 .var/2s "i", 31 0;
S_000001a040695840 .scope function.void, "set_sum_positive_carry" "set_sum_positive_carry" 4 118, 4 118 0, S_000001a040693f50;
 .timescale 0 0;
v000001a040690200_0 .var/2s "big_positive_num", 31 0;
v000001a040690340_0 .var/2s "is_small_scale", 31 0;
TD_op_negate_int8.result.set_sum_positive_carry ;
    %callf/void TD_op_negate_int8.result.set_largest_scale, S_000001a040695520;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v000001a040699250_0;
    %load/vec4 v000001a040690340_0;
    %pad/u 8;
    %sub;
    %store/vec4 v000001a040699250_0, 0, 8;
    %callf/void TD_op_negate_int8.result.set_all_small_elements, S_000001a040694400;
    %fork t_59, S_000001a040697140;
    %jmp t_58;
    .scope S_000001a040697140;
t_59 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a04068f620_0, 0, 32;
T_76.86 ;
    %load/vec4 v000001a04068f620_0;
    %load/vec4 v000001a040690200_0;
    %cmp/s;
    %jmp/0xz T_76.87, 5;
    %load/vec4 v000001a04068f620_0;
    %store/vec4 v000001a04068fee0_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_big_positive, S_000001a040694bd0;
    %load/vec4 v000001a04068f620_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000001a04068f620_0, 0, 32;
    %jmp T_76.86;
T_76.87 ;
    %end;
    .scope S_000001a040695840;
t_58 %join;
    %end;
S_000001a040697140 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 122, 4 122 0, S_000001a040695840;
 .timescale 0 0;
v000001a04068f620_0 .var/2s "i", 31 0;
S_000001a040695cf0 .scope function.void, "set_unused_encode" "set_unused_encode" 4 101, 4 101 0, S_000001a040693f50;
 .timescale 0 0;
v000001a040697ef0_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.result.set_unused_encode ;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v000001a040697ef0_0;
    %store/vec4a v000001a040699b10, 4, 0;
    %end;
S_000001a0406959d0 .scope function.void, "set_zero" "set_zero" 4 89, 4 89 0, S_000001a040693f50;
 .timescale 0 0;
v000001a0406983f0_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.result.set_zero ;
    %ix/getv/s 4, v000001a0406983f0_0;
    %load/vec4a v000001a040699b10, 4;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_78.88, 4;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v000001a0406983f0_0;
    %store/vec4a v000001a040699b10, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000001a0406991b0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v000001a0406991b0_0, 0, 6;
T_78.88 ;
    %end;
S_000001a040695b60 .scope function.void, "set_zero_scale" "set_zero_scale" 4 110, 4 110 0, S_000001a040693f50;
 .timescale 0 0;
TD_op_negate_int8.result.set_zero_scale ;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v000001a040699250_0, 0, 8;
    %end;
S_000001a03e9fb4e0 .scope module, "t_fp32_scale" "t_fp32_scale" 4 146;
 .timescale 0 0;
    .port_info 0 /OUTPUT 32 "f";
v000001a040697e50_0 .var "NaN", 0 0;
v000001a040699390_0 .var "carry", 0 0;
v000001a0406980d0_0 .net "f", 31 0, L_000001a0406982b0;  1 drivers
v000001a040698ad0_0 .var "mantissa_high", 5 0;
v000001a0406992f0_0 .var "mantissa_low", 15 0;
v000001a040698f30_0 .var "mantissa_low_msb", 0 0;
v000001a040699570_0 .var "overflow", 0 0;
v000001a040698030_0 .var "scale", 7 0;
v000001a0406997f0_0 .var "scale_overflow", 0 0;
v000001a040698490_0 .var "sign", 0 0;
v000001a0406985d0_0 .var "sub_normal", 0 0;
v000001a040698670_0 .var "tie2even", 1 0;
LS_000001a0406982b0_0_0 .concat [ 16 1 6 8], v000001a0406992f0_0, v000001a040698f30_0, v000001a040698ad0_0, v000001a040698030_0;
LS_000001a0406982b0_0_4 .concat [ 1 0 0 0], v000001a040698490_0;
L_000001a0406982b0 .concat [ 31 1 0 0], LS_000001a0406982b0_0_0, LS_000001a0406982b0_0_4;
S_000001a040696970 .scope function.vec4.s1, "random_bit" "random_bit" 4 181, 4 181 0, S_000001a03e9fb4e0;
 .timescale 0 0;
; Variable random_bit is vec4 return value of scope S_000001a040696970
TD_t_fp32_scale.random_bit ;
    %vpi_func 4 182 "$urandom" 32 {0 0 0};
    %pushi/vec4 2, 0, 32;
    %mod;
    %pad/u 1;
    %ret/vec4 0, 0, 1;  Assign to random_bit (store_vec4_to_lval)
    %disable/flow S_000001a040696970;
    %end;
S_000001a040695e80 .scope function.vec4.s6, "random_high" "random_high" 4 175, 4 175 0, S_000001a03e9fb4e0;
 .timescale 0 0;
; Variable random_high is vec4 return value of scope S_000001a040695e80
TD_t_fp32_scale.random_high ;
    %vpi_func 4 176 "$urandom" 32 {0 0 0};
    %pushi/vec4 64, 0, 32;
    %mod;
    %pad/u 6;
    %ret/vec4 0, 0, 6;  Assign to random_high (store_vec4_to_lval)
    %disable/flow S_000001a040695e80;
    %end;
S_000001a040696b00 .scope function.vec4.s16, "random_low" "random_low" 4 178, 4 178 0, S_000001a03e9fb4e0;
 .timescale 0 0;
; Variable random_low is vec4 return value of scope S_000001a040696b00
TD_t_fp32_scale.random_low ;
    %vpi_func 4 179 "$urandom" 32 {0 0 0};
    %pushi/vec4 65536, 0, 32;
    %mod;
    %pad/u 16;
    %ret/vec4 0, 0, 16;  Assign to random_low (store_vec4_to_lval)
    %disable/flow S_000001a040696b00;
    %end;
S_000001a040696010 .scope function.void, "randomize" "randomize" 4 209, 4 209 0, S_000001a03e9fb4e0;
 .timescale 0 0;
TD_t_fp32_scale.randomize ;
    %load/vec4 v000001a0406985d0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_83.90, 8;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v000001a040698030_0, 0, 8;
    %jmp T_83.91;
T_83.90 ;
    %load/vec4 v000001a040697e50_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_83.92, 8;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v000001a040698030_0, 0, 8;
    %jmp T_83.93;
T_83.92 ;
    %vpi_func 4 215 "$urandom" 32 {0 0 0};
    %pushi/vec4 128, 0, 32;
    %mod;
    %addi 1, 0, 32;
    %pad/u 8;
    %store/vec4 v000001a040698030_0, 0, 8;
T_83.93 ;
T_83.91 ;
    %load/vec4 v000001a0406997f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_83.94, 8;
    %pushi/vec4 254, 0, 8;
    %store/vec4 v000001a040698030_0, 0, 8;
T_83.94 ;
    %callf/vec4 TD_t_fp32_scale.random_high, S_000001a040695e80;
    %store/vec4 v000001a040698ad0_0, 0, 6;
    %callf/vec4 TD_t_fp32_scale.random_low, S_000001a040696b00;
    %store/vec4 v000001a0406992f0_0, 0, 16;
    %callf/vec4 TD_t_fp32_scale.random_bit, S_000001a040696970;
    %store/vec4 v000001a040698f30_0, 0, 1;
    %load/vec4 v000001a040699390_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_83.96, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001a040698f30_0, 0, 1;
T_83.98 ;
    %load/vec4 v000001a0406992f0_0;
    %and/r;
    %flag_set/vec4 8;
    %jmp/0xz T_83.99, 8;
    %callf/vec4 TD_t_fp32_scale.random_low, S_000001a040696b00;
    %store/vec4 v000001a0406992f0_0, 0, 16;
    %jmp T_83.98;
T_83.99 ;
    %load/vec4 v000001a040698670_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/0xz  T_83.100, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001a040698f30_0, 0, 1;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v000001a0406992f0_0, 0, 16;
    %load/vec4 v000001a040698670_0;
    %parti/s 1, 1, 2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v000001a040698ad0_0, 4, 1;
T_83.100 ;
T_83.96 ;
    %load/vec4 v000001a040699570_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_83.102, 8;
    %pushi/vec4 63, 0, 6;
    %store/vec4 v000001a040698ad0_0, 0, 6;
T_83.102 ;
    %end;
S_000001a040696c90 .scope function.void, "set_NaN" "set_NaN" 4 194, 4 194 0, S_000001a03e9fb4e0;
 .timescale 0 0;
v000001a040699bb0_0 .var "NaN_i", 0 0;
TD_t_fp32_scale.set_NaN ;
    %load/vec4 v000001a040699bb0_0;
    %store/vec4 v000001a040697e50_0, 0, 1;
    %end;
S_000001a0406972d0 .scope function.void, "set_carry" "set_carry" 4 187, 4 187 0, S_000001a03e9fb4e0;
 .timescale 0 0;
v000001a040697f90_0 .var "c_i", 0 0;
TD_t_fp32_scale.set_carry ;
    %load/vec4 v000001a040697f90_0;
    %store/vec4 v000001a040699390_0, 0, 1;
    %end;
S_000001a0406961a0 .scope function.void, "set_clean" "set_clean" 4 166, 4 166 0, S_000001a03e9fb4e0;
 .timescale 0 0;
TD_t_fp32_scale.set_clean ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001a040698490_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001a0406985d0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001a040697e50_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001a040699390_0, 0, 1;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v000001a040698670_0, 0, 2;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001a040699570_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001a0406997f0_0, 0, 1;
    %end;
S_000001a0406964c0 .scope function.void, "set_overflow" "set_overflow" 4 190, 4 190 0, S_000001a03e9fb4e0;
 .timescale 0 0;
v000001a040698990_0 .var "o_i", 0 0;
TD_t_fp32_scale.set_overflow ;
    %load/vec4 v000001a040698990_0;
    %store/vec4 v000001a040699570_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001a040699390_0, 0, 1;
    %end;
S_000001a040696650 .scope function.void, "set_scale_overflow" "set_scale_overflow" 4 201, 4 201 0, S_000001a03e9fb4e0;
 .timescale 0 0;
v000001a040699cf0_0 .var "overflow_i", 0 0;
TD_t_fp32_scale.set_scale_overflow ;
    %load/vec4 v000001a040699cf0_0;
    %store/vec4 v000001a0406997f0_0, 0, 1;
    %load/vec4 v000001a0406997f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_88.104, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001a040699390_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001a040699570_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000001a040697e50_0, 0, 1;
T_88.104 ;
    %end;
S_000001a0406967e0 .scope function.void, "set_sign" "set_sign" 4 184, 4 184 0, S_000001a03e9fb4e0;
 .timescale 0 0;
v000001a040698a30_0 .var "sign_i", 0 0;
TD_t_fp32_scale.set_sign ;
    %load/vec4 v000001a040698a30_0;
    %store/vec4 v000001a040698490_0, 0, 1;
    %end;
S_000001a04069cb20 .scope function.void, "set_tie2even" "set_tie2even" 4 197, 4 197 0, S_000001a03e9fb4e0;
 .timescale 0 0;
TD_t_fp32_scale.set_tie2even ;
    %callf/vec4 TD_t_fp32_scale.random_bit, S_000001a040696970;
    %concati/vec4 1, 0, 1;
    %store/vec4 v000001a040698670_0, 0, 2;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000001a040699390_0, 0, 1;
    %end;
S_000001a04069bea0 .scope function.void, "set_zero" "set_zero" 4 163, 4 163 0, S_000001a03e9fb4e0;
 .timescale 0 0;
TD_t_fp32_scale.set_zero ;
    %pushi/vec4 0, 0, 23;
    %split/vec4 16;
    %store/vec4 v000001a0406992f0_0, 0, 16;
    %split/vec4 1;
    %store/vec4 v000001a040698f30_0, 0, 1;
    %store/vec4 v000001a040698ad0_0, 0, 6;
    %end;
    .scope S_000001a03e9fd7b0;
T_92 ;
    %pushi/vec4 5, 0, 32;
T_92.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.1, 5;
    %jmp/1 T_92.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.normal_case, S_000001a03ea5d950;
    %jmp T_92.0;
T_92.1 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.2 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.3, 5;
    %jmp/1 T_92.3, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.positive_case, S_000001a03ea9b380;
    %jmp T_92.2;
T_92.3 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.4 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.5, 5;
    %jmp/1 T_92.5, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.negative_case, S_000001a03ea5d310;
    %jmp T_92.4;
T_92.5 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.7, 5;
    %jmp/1 T_92.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.small_case, S_000001a03ea9b060;
    %jmp T_92.6;
T_92.7 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.8 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.9, 5;
    %jmp/1 T_92.9, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.big_case, S_000001a03e9e5380;
    %jmp T_92.8;
T_92.9 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.11, 5;
    %jmp/1 T_92.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.all_zero_case, S_000001a03ea149d0;
    %jmp T_92.10;
T_92.11 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.12 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.13, 5;
    %jmp/1 T_92.13, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.single_zero_case, S_000001a03ea9be70;
    %jmp T_92.12;
T_92.13 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.14 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.15, 5;
    %jmp/1 T_92.15, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.all_nan_case, S_000001a03ea14840;
    %jmp T_92.14;
T_92.15 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.16 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.17, 5;
    %jmp/1 T_92.17, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.single_nan_case, S_000001a03ea9bce0;
    %jmp T_92.16;
T_92.17 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.18 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.19, 5;
    %jmp/1 T_92.19, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.positive_carry_case, S_000001a0406810a0;
    %jmp T_92.18;
T_92.19 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.20 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.21, 5;
    %jmp/1 T_92.21, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.positive_carry_max_case, S_000001a03ea9b1f0;
    %jmp T_92.20;
T_92.21 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.22 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.23, 5;
    %jmp/1 T_92.23, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.positive_overflow_case, S_000001a03ea9b9c0;
    %jmp T_92.22;
T_92.23 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.24 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.25, 5;
    %jmp/1 T_92.25, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.positive_overflow_max_case, S_000001a03ea9b510;
    %jmp T_92.24;
T_92.25 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.26 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.27, 5;
    %jmp/1 T_92.27, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.positive_overflow_scale_nan, S_000001a03ea9bb50;
    %jmp T_92.26;
T_92.27 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.28 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.29, 5;
    %jmp/1 T_92.29, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.negative_carry_case, S_000001a03e9e5510;
    %jmp T_92.28;
T_92.29 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.30 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.31, 5;
    %jmp/1 T_92.31, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.negative_carry_max_case, S_000001a03ea5d180;
    %jmp T_92.30;
T_92.31 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.32 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.33, 5;
    %jmp/1 T_92.33, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.negative_overflow_case, S_000001a03ea5d4a0;
    %jmp T_92.32;
T_92.33 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.34 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.35, 5;
    %jmp/1 T_92.35, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.negative_overflow_max_case, S_000001a03ea5d630;
    %jmp T_92.34;
T_92.35 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.36 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.37, 5;
    %jmp/1 T_92.37, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.negative_overflow_scale_nan, S_000001a03ea5d7c0;
    %jmp T_92.36;
T_92.37 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.38 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.39, 5;
    %jmp/1 T_92.39, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.scale_nan_case, S_000001a03ea9b6a0;
    %jmp T_92.38;
T_92.39 ;
    %pop/vec4 1;
    %pushi/vec4 5, 0, 32;
T_92.40 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_92.41, 5;
    %jmp/1 T_92.41, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_000001a03ea69ac0;
    %callf/void TD_mx_int8_sum_drv.scale_nan_unusedcode_case, S_000001a03ea9b830;
    %jmp T_92.40;
T_92.41 ;
    %pop/vec4 1;
    %end;
    .thread T_92;
    .scope S_000001a03e9fb4e0;
T_93 ;
    %callf/void TD_t_fp32_scale.set_clean, S_000001a0406961a0;
    %callf/void TD_t_fp32_scale.randomize, S_000001a040696010;
    %end;
    .thread T_93;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    ".\mx_int8_sum_drv.sv";
    "../transection.sv";
