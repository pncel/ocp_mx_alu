#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_00000259d11bddd0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_00000259d11a2c30 .scope module, "op_negate_int8" "op_negate_int8" 3 136;
 .timescale 0 0;
v00000259d11a4ff0_0 .array/port v00000259d11a4ff0, 0;
L_00000259d11be750 .functor BUFZ 8, v00000259d11a4ff0_0, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_1 .array/port v00000259d11a4ff0, 1;
L_00000259d11bec90 .functor BUFZ 8, v00000259d11a4ff0_1, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_2 .array/port v00000259d11a4ff0, 2;
L_00000259d11bfcc0 .functor BUFZ 8, v00000259d11a4ff0_2, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_3 .array/port v00000259d11a4ff0, 3;
L_00000259d11bed00 .functor BUFZ 8, v00000259d11a4ff0_3, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_4 .array/port v00000259d11a4ff0, 4;
L_00000259d11bf9b0 .functor BUFZ 8, v00000259d11a4ff0_4, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_5 .array/port v00000259d11a4ff0, 5;
L_00000259d11bf940 .functor BUFZ 8, v00000259d11a4ff0_5, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_6 .array/port v00000259d11a4ff0, 6;
L_00000259d11bede0 .functor BUFZ 8, v00000259d11a4ff0_6, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_7 .array/port v00000259d11a4ff0, 7;
L_00000259d11bf400 .functor BUFZ 8, v00000259d11a4ff0_7, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_8 .array/port v00000259d11a4ff0, 8;
L_00000259d11bf6a0 .functor BUFZ 8, v00000259d11a4ff0_8, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_9 .array/port v00000259d11a4ff0, 9;
L_00000259d11bfbe0 .functor BUFZ 8, v00000259d11a4ff0_9, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_10 .array/port v00000259d11a4ff0, 10;
L_00000259d11bee50 .functor BUFZ 8, v00000259d11a4ff0_10, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_11 .array/port v00000259d11a4ff0, 11;
L_00000259d11be6e0 .functor BUFZ 8, v00000259d11a4ff0_11, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_12 .array/port v00000259d11a4ff0, 12;
L_00000259d11bf320 .functor BUFZ 8, v00000259d11a4ff0_12, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_13 .array/port v00000259d11a4ff0, 13;
L_00000259d11bf080 .functor BUFZ 8, v00000259d11a4ff0_13, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_14 .array/port v00000259d11a4ff0, 14;
L_00000259d11beec0 .functor BUFZ 8, v00000259d11a4ff0_14, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_15 .array/port v00000259d11a4ff0, 15;
L_00000259d11befa0 .functor BUFZ 8, v00000259d11a4ff0_15, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_16 .array/port v00000259d11a4ff0, 16;
L_00000259d11bf710 .functor BUFZ 8, v00000259d11a4ff0_16, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_17 .array/port v00000259d11a4ff0, 17;
L_00000259d11be9f0 .functor BUFZ 8, v00000259d11a4ff0_17, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_18 .array/port v00000259d11a4ff0, 18;
L_00000259d11be980 .functor BUFZ 8, v00000259d11a4ff0_18, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_19 .array/port v00000259d11a4ff0, 19;
L_00000259d11bf550 .functor BUFZ 8, v00000259d11a4ff0_19, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_20 .array/port v00000259d11a4ff0, 20;
L_00000259d11bfe10 .functor BUFZ 8, v00000259d11a4ff0_20, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_21 .array/port v00000259d11a4ff0, 21;
L_00000259d11bfb70 .functor BUFZ 8, v00000259d11a4ff0_21, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_22 .array/port v00000259d11a4ff0, 22;
L_00000259d11bf780 .functor BUFZ 8, v00000259d11a4ff0_22, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_23 .array/port v00000259d11a4ff0, 23;
L_00000259d11bea60 .functor BUFZ 8, v00000259d11a4ff0_23, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_24 .array/port v00000259d11a4ff0, 24;
L_00000259d11bead0 .functor BUFZ 8, v00000259d11a4ff0_24, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_25 .array/port v00000259d11a4ff0, 25;
L_00000259d11be7c0 .functor BUFZ 8, v00000259d11a4ff0_25, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_26 .array/port v00000259d11a4ff0, 26;
L_00000259d11bfd30 .functor BUFZ 8, v00000259d11a4ff0_26, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_27 .array/port v00000259d11a4ff0, 27;
L_00000259d11bf860 .functor BUFZ 8, v00000259d11a4ff0_27, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_28 .array/port v00000259d11a4ff0, 28;
L_00000259d11bfe80 .functor BUFZ 8, v00000259d11a4ff0_28, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_29 .array/port v00000259d11a4ff0, 29;
L_00000259d11bef30 .functor BUFZ 8, v00000259d11a4ff0_29, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_30 .array/port v00000259d11a4ff0, 30;
L_00000259d11bfda0 .functor BUFZ 8, v00000259d11a4ff0_30, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d11a4ff0_31 .array/port v00000259d11a4ff0, 31;
L_00000259d11bfb00 .functor BUFZ 8, v00000259d11a4ff0_31, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_0 .array/port v00000259d12208a0, 0;
L_00000259d11bf1d0 .functor BUFZ 8, v00000259d12208a0_0, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_1 .array/port v00000259d12208a0, 1;
L_00000259d11beb40 .functor BUFZ 8, v00000259d12208a0_1, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_2 .array/port v00000259d12208a0, 2;
L_00000259d11bfc50 .functor BUFZ 8, v00000259d12208a0_2, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_3 .array/port v00000259d12208a0, 3;
L_00000259d11bf010 .functor BUFZ 8, v00000259d12208a0_3, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_4 .array/port v00000259d12208a0, 4;
L_00000259d11bffd0 .functor BUFZ 8, v00000259d12208a0_4, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_5 .array/port v00000259d12208a0, 5;
L_00000259d11bfa90 .functor BUFZ 8, v00000259d12208a0_5, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_6 .array/port v00000259d12208a0, 6;
L_00000259d11bf7f0 .functor BUFZ 8, v00000259d12208a0_6, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_7 .array/port v00000259d12208a0, 7;
L_00000259d11bf240 .functor BUFZ 8, v00000259d12208a0_7, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_8 .array/port v00000259d12208a0, 8;
L_00000259d11bf0f0 .functor BUFZ 8, v00000259d12208a0_8, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_9 .array/port v00000259d12208a0, 9;
L_00000259d11bf8d0 .functor BUFZ 8, v00000259d12208a0_9, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_10 .array/port v00000259d12208a0, 10;
L_00000259d11bfef0 .functor BUFZ 8, v00000259d12208a0_10, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_11 .array/port v00000259d12208a0, 11;
L_00000259d11bff60 .functor BUFZ 8, v00000259d12208a0_11, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_12 .array/port v00000259d12208a0, 12;
L_00000259d11bfa20 .functor BUFZ 8, v00000259d12208a0_12, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_13 .array/port v00000259d12208a0, 13;
L_00000259d11c0040 .functor BUFZ 8, v00000259d12208a0_13, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_14 .array/port v00000259d12208a0, 14;
L_00000259d11bf390 .functor BUFZ 8, v00000259d12208a0_14, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_15 .array/port v00000259d12208a0, 15;
L_00000259d11c00b0 .functor BUFZ 8, v00000259d12208a0_15, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_16 .array/port v00000259d12208a0, 16;
L_00000259d11bf470 .functor BUFZ 8, v00000259d12208a0_16, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_17 .array/port v00000259d12208a0, 17;
L_00000259d11be830 .functor BUFZ 8, v00000259d12208a0_17, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_18 .array/port v00000259d12208a0, 18;
L_00000259d11bf4e0 .functor BUFZ 8, v00000259d12208a0_18, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_19 .array/port v00000259d12208a0, 19;
L_00000259d11be8a0 .functor BUFZ 8, v00000259d12208a0_19, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_20 .array/port v00000259d12208a0, 20;
L_00000259d11be590 .functor BUFZ 8, v00000259d12208a0_20, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_21 .array/port v00000259d12208a0, 21;
L_00000259d11be600 .functor BUFZ 8, v00000259d12208a0_21, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_22 .array/port v00000259d12208a0, 22;
L_00000259d11be670 .functor BUFZ 8, v00000259d12208a0_22, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_23 .array/port v00000259d12208a0, 23;
L_00000259d11bebb0 .functor BUFZ 8, v00000259d12208a0_23, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_24 .array/port v00000259d12208a0, 24;
L_00000259d11be910 .functor BUFZ 8, v00000259d12208a0_24, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_25 .array/port v00000259d12208a0, 25;
L_00000259d11bf5c0 .functor BUFZ 8, v00000259d12208a0_25, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_26 .array/port v00000259d12208a0, 26;
L_00000259d11bec20 .functor BUFZ 8, v00000259d12208a0_26, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_27 .array/port v00000259d12208a0, 27;
L_00000259d11c0270 .functor BUFZ 8, v00000259d12208a0_27, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_28 .array/port v00000259d12208a0, 28;
L_00000259d11c0350 .functor BUFZ 8, v00000259d12208a0_28, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_29 .array/port v00000259d12208a0, 29;
L_00000259d11c04a0 .functor BUFZ 8, v00000259d12208a0_29, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_30 .array/port v00000259d12208a0, 30;
L_00000259d11c03c0 .functor BUFZ 8, v00000259d12208a0_30, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12208a0_31 .array/port v00000259d12208a0, 31;
L_00000259d11c02e0 .functor BUFZ 8, v00000259d12208a0_31, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12215c0 .array "input_elements", 31 0;
v00000259d12215c0_0 .net v00000259d12215c0 0, 7 0, L_00000259d11be750; 1 drivers
v00000259d12215c0_1 .net v00000259d12215c0 1, 7 0, L_00000259d11bec90; 1 drivers
v00000259d12215c0_2 .net v00000259d12215c0 2, 7 0, L_00000259d11bfcc0; 1 drivers
v00000259d12215c0_3 .net v00000259d12215c0 3, 7 0, L_00000259d11bed00; 1 drivers
v00000259d12215c0_4 .net v00000259d12215c0 4, 7 0, L_00000259d11bf9b0; 1 drivers
v00000259d12215c0_5 .net v00000259d12215c0 5, 7 0, L_00000259d11bf940; 1 drivers
v00000259d12215c0_6 .net v00000259d12215c0 6, 7 0, L_00000259d11bede0; 1 drivers
v00000259d12215c0_7 .net v00000259d12215c0 7, 7 0, L_00000259d11bf400; 1 drivers
v00000259d12215c0_8 .net v00000259d12215c0 8, 7 0, L_00000259d11bf6a0; 1 drivers
v00000259d12215c0_9 .net v00000259d12215c0 9, 7 0, L_00000259d11bfbe0; 1 drivers
v00000259d12215c0_10 .net v00000259d12215c0 10, 7 0, L_00000259d11bee50; 1 drivers
v00000259d12215c0_11 .net v00000259d12215c0 11, 7 0, L_00000259d11be6e0; 1 drivers
v00000259d12215c0_12 .net v00000259d12215c0 12, 7 0, L_00000259d11bf320; 1 drivers
v00000259d12215c0_13 .net v00000259d12215c0 13, 7 0, L_00000259d11bf080; 1 drivers
v00000259d12215c0_14 .net v00000259d12215c0 14, 7 0, L_00000259d11beec0; 1 drivers
v00000259d12215c0_15 .net v00000259d12215c0 15, 7 0, L_00000259d11befa0; 1 drivers
v00000259d12215c0_16 .net v00000259d12215c0 16, 7 0, L_00000259d11bf710; 1 drivers
v00000259d12215c0_17 .net v00000259d12215c0 17, 7 0, L_00000259d11be9f0; 1 drivers
v00000259d12215c0_18 .net v00000259d12215c0 18, 7 0, L_00000259d11be980; 1 drivers
v00000259d12215c0_19 .net v00000259d12215c0 19, 7 0, L_00000259d11bf550; 1 drivers
v00000259d12215c0_20 .net v00000259d12215c0 20, 7 0, L_00000259d11bfe10; 1 drivers
v00000259d12215c0_21 .net v00000259d12215c0 21, 7 0, L_00000259d11bfb70; 1 drivers
v00000259d12215c0_22 .net v00000259d12215c0 22, 7 0, L_00000259d11bf780; 1 drivers
v00000259d12215c0_23 .net v00000259d12215c0 23, 7 0, L_00000259d11bea60; 1 drivers
v00000259d12215c0_24 .net v00000259d12215c0 24, 7 0, L_00000259d11bead0; 1 drivers
v00000259d12215c0_25 .net v00000259d12215c0 25, 7 0, L_00000259d11be7c0; 1 drivers
v00000259d12215c0_26 .net v00000259d12215c0 26, 7 0, L_00000259d11bfd30; 1 drivers
v00000259d12215c0_27 .net v00000259d12215c0 27, 7 0, L_00000259d11bf860; 1 drivers
v00000259d12215c0_28 .net v00000259d12215c0 28, 7 0, L_00000259d11bfe80; 1 drivers
v00000259d12215c0_29 .net v00000259d12215c0 29, 7 0, L_00000259d11bef30; 1 drivers
v00000259d12215c0_30 .net v00000259d12215c0 30, 7 0, L_00000259d11bfda0; 1 drivers
v00000259d12215c0_31 .net v00000259d12215c0 31, 7 0, L_00000259d11bfb00; 1 drivers
v00000259d1220da0_0 .net "input_scale", 7 0, v00000259d11a5130_0;  1 drivers
v00000259d1220440 .array "output_elements", 31 0;
v00000259d1220440_0 .net v00000259d1220440 0, 7 0, L_00000259d11bf1d0; 1 drivers
v00000259d1220440_1 .net v00000259d1220440 1, 7 0, L_00000259d11beb40; 1 drivers
v00000259d1220440_2 .net v00000259d1220440 2, 7 0, L_00000259d11bfc50; 1 drivers
v00000259d1220440_3 .net v00000259d1220440 3, 7 0, L_00000259d11bf010; 1 drivers
v00000259d1220440_4 .net v00000259d1220440 4, 7 0, L_00000259d11bffd0; 1 drivers
v00000259d1220440_5 .net v00000259d1220440 5, 7 0, L_00000259d11bfa90; 1 drivers
v00000259d1220440_6 .net v00000259d1220440 6, 7 0, L_00000259d11bf7f0; 1 drivers
v00000259d1220440_7 .net v00000259d1220440 7, 7 0, L_00000259d11bf240; 1 drivers
v00000259d1220440_8 .net v00000259d1220440 8, 7 0, L_00000259d11bf0f0; 1 drivers
v00000259d1220440_9 .net v00000259d1220440 9, 7 0, L_00000259d11bf8d0; 1 drivers
v00000259d1220440_10 .net v00000259d1220440 10, 7 0, L_00000259d11bfef0; 1 drivers
v00000259d1220440_11 .net v00000259d1220440 11, 7 0, L_00000259d11bff60; 1 drivers
v00000259d1220440_12 .net v00000259d1220440 12, 7 0, L_00000259d11bfa20; 1 drivers
v00000259d1220440_13 .net v00000259d1220440 13, 7 0, L_00000259d11c0040; 1 drivers
v00000259d1220440_14 .net v00000259d1220440 14, 7 0, L_00000259d11bf390; 1 drivers
v00000259d1220440_15 .net v00000259d1220440 15, 7 0, L_00000259d11c00b0; 1 drivers
v00000259d1220440_16 .net v00000259d1220440 16, 7 0, L_00000259d11bf470; 1 drivers
v00000259d1220440_17 .net v00000259d1220440 17, 7 0, L_00000259d11be830; 1 drivers
v00000259d1220440_18 .net v00000259d1220440 18, 7 0, L_00000259d11bf4e0; 1 drivers
v00000259d1220440_19 .net v00000259d1220440 19, 7 0, L_00000259d11be8a0; 1 drivers
v00000259d1220440_20 .net v00000259d1220440 20, 7 0, L_00000259d11be590; 1 drivers
v00000259d1220440_21 .net v00000259d1220440 21, 7 0, L_00000259d11be600; 1 drivers
v00000259d1220440_22 .net v00000259d1220440 22, 7 0, L_00000259d11be670; 1 drivers
v00000259d1220440_23 .net v00000259d1220440 23, 7 0, L_00000259d11bebb0; 1 drivers
v00000259d1220440_24 .net v00000259d1220440 24, 7 0, L_00000259d11be910; 1 drivers
v00000259d1220440_25 .net v00000259d1220440 25, 7 0, L_00000259d11bf5c0; 1 drivers
v00000259d1220440_26 .net v00000259d1220440 26, 7 0, L_00000259d11bec20; 1 drivers
v00000259d1220440_27 .net v00000259d1220440 27, 7 0, L_00000259d11c0270; 1 drivers
v00000259d1220440_28 .net v00000259d1220440 28, 7 0, L_00000259d11c0350; 1 drivers
v00000259d1220440_29 .net v00000259d1220440 29, 7 0, L_00000259d11c04a0; 1 drivers
v00000259d1220440_30 .net v00000259d1220440 30, 7 0, L_00000259d11c03c0; 1 drivers
v00000259d1220440_31 .net v00000259d1220440 31, 7 0, L_00000259d11c02e0; 1 drivers
v00000259d1221200_0 .net "output_scale", 7 0, v00000259d1221160_0;  1 drivers
S_00000259d11a3780 .scope module, "a" "t_mx_int8_vector" 3 142, 3 11 0, S_00000259d11a2c30;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scale";
    .port_info 1 /OUTPUT 256 "elements";
P_00000259d11bdf60 .param/l "largest_scale" 1 3 15, C4<11111111>;
P_00000259d11bdf98 .param/l "unused_code" 1 3 14, C4<10000000>;
P_00000259d11bdfd0 .param/l "zero_scale" 1 3 16, C4<00000000>;
v00000259d11a4ff0 .array "elements", 0 31, 7 0;
v00000259d11a5130_0 .var "scale", 7 0;
v00000259d1221660_0 .var "zero_num", 5 0;
S_00000259d11a3910 .scope function.void, "post_randomize" "post_randomize" 3 20, 3 20 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.post_randomize ;
    %pushi/vec4 0, 0, 6;
    %store/vec4 v00000259d1221660_0, 0, 6;
    %fork t_1, S_00000259cf58ce40;
    %jmp t_0;
    .scope S_00000259cf58ce40;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a5590_0, 0, 32;
T_0.0 ;
    %load/vec4 v00000259d11a5590_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_0.1, 5;
    %ix/getv/s 4, v00000259d11a5590_0;
    %load/vec4a v00000259d11a4ff0, 4;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_0.2, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1221660_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v00000259d1221660_0, 0, 6;
T_0.2 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d11a5590_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d11a5590_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .scope S_00000259d11a3910;
t_0 %join;
    %end;
S_00000259cf58ce40 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 3 22, 3 22 0, S_00000259d11a3910;
 .timescale 0 0;
v00000259d11a5590_0 .var/2s "i", 31 0;
S_00000259cf58cfd0 .scope function.void, "randomize" "randomize" 3 29, 3 29 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.randomize ;
    %vpi_func 3 30 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %store/vec4 v00000259d11a5130_0, 0, 8;
    %fork t_3, S_00000259cf52d360;
    %jmp t_2;
    .scope S_00000259cf52d360;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a4d70_0, 0, 32;
T_1.4 ;
    %load/vec4 v00000259d11a4d70_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_1.5, 5;
    %vpi_func 3 32 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %ix/getv/s 4, v00000259d11a4d70_0;
    %store/vec4a v00000259d11a4ff0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d11a4d70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d11a4d70_0, 0, 32;
    %jmp T_1.4;
T_1.5 ;
    %end;
    .scope S_00000259cf58cfd0;
t_2 %join;
    %callf/void TD_op_negate_int8.a.post_randomize, S_00000259d11a3910;
    %end;
S_00000259cf52d360 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 3 31, 3 31 0, S_00000259cf58cfd0;
 .timescale 0 0;
v00000259d11a4d70_0 .var/2s "i", 31 0;
S_00000259cf52d4f0 .scope function.void, "set_all_big_elements" "set_all_big_elements" 3 64, 3 64 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_big_elements ;
    %fork t_5, S_00000259cf52b090;
    %jmp t_4;
    .scope S_00000259cf52b090;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a58b0_0, 0, 32;
T_2.6 ;
    %load/vec4 v00000259d11a58b0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_2.7, 5;
    %ix/getv/s 4, v00000259d11a58b0_0;
    %load/vec4a v00000259d11a4ff0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.8, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d11a58b0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
    %jmp T_2.9;
T_2.8 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d11a58b0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
T_2.9 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d11a58b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d11a58b0_0, 0, 32;
    %jmp T_2.6;
T_2.7 ;
    %end;
    .scope S_00000259cf52d4f0;
t_4 %join;
    %end;
S_00000259cf52b090 .scope begin, "$ivl_foreach5" "$ivl_foreach5" 3 65, 3 65 0, S_00000259cf52d4f0;
 .timescale 0 0;
v00000259d11a58b0_0 .var/2s "i", 31 0;
S_00000259cf52b220 .scope function.void, "set_all_negative" "set_all_negative" 3 42, 3 42 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_negative ;
    %fork t_7, S_00000259cf57b9c0;
    %jmp t_6;
    .scope S_00000259cf57b9c0;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a5630_0, 0, 32;
T_3.10 ;
    %load/vec4 v00000259d11a5630_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_3.11, 5;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d11a5630_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d11a5630_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d11a5630_0, 0, 32;
    %jmp T_3.10;
T_3.11 ;
    %end;
    .scope S_00000259cf52b220;
t_6 %join;
    %end;
S_00000259cf57b9c0 .scope begin, "$ivl_foreach3" "$ivl_foreach3" 3 43, 3 43 0, S_00000259cf52b220;
 .timescale 0 0;
v00000259d11a5630_0 .var/2s "i", 31 0;
S_00000259cf57bb50 .scope function.void, "set_all_positive" "set_all_positive" 3 37, 3 37 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_positive ;
    %fork t_9, S_00000259cf55e020;
    %jmp t_8;
    .scope S_00000259cf55e020;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a4eb0_0, 0, 32;
T_4.12 ;
    %load/vec4 v00000259d11a4eb0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_4.13, 5;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d11a4eb0_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d11a4eb0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d11a4eb0_0, 0, 32;
    %jmp T_4.12;
T_4.13 ;
    %end;
    .scope S_00000259cf57bb50;
t_8 %join;
    %end;
S_00000259cf55e020 .scope begin, "$ivl_foreach2" "$ivl_foreach2" 3 38, 3 38 0, S_00000259cf57bb50;
 .timescale 0 0;
v00000259d11a4eb0_0 .var/2s "i", 31 0;
S_00000259cf55e1b0 .scope function.void, "set_all_small_elements" "set_all_small_elements" 3 55, 3 55 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_small_elements ;
    %fork t_11, S_00000259cf544580;
    %jmp t_10;
    .scope S_00000259cf544580;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a56d0_0, 0, 32;
T_5.14 ;
    %load/vec4 v00000259d11a56d0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_5.15, 5;
    %ix/getv/s 4, v00000259d11a56d0_0;
    %load/vec4a v00000259d11a4ff0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.16, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d11a56d0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
    %jmp T_5.17;
T_5.16 ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d11a56d0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
T_5.17 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d11a56d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d11a56d0_0, 0, 32;
    %jmp T_5.14;
T_5.15 ;
    %end;
    .scope S_00000259cf55e1b0;
t_10 %join;
    %end;
S_00000259cf544580 .scope begin, "$ivl_foreach4" "$ivl_foreach4" 3 56, 3 56 0, S_00000259cf55e1b0;
 .timescale 0 0;
v00000259d11a56d0_0 .var/2s "i", 31 0;
S_00000259d121dce0 .scope function.void, "set_all_unused_code" "set_all_unused_code" 3 106, 3 106 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_unused_code ;
    %fork t_13, S_00000259d121d510;
    %jmp t_12;
    .scope S_00000259d121d510;
t_13 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a5bd0_0, 0, 32;
T_6.18 ;
    %load/vec4 v00000259d11a5bd0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_6.19, 5;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v00000259d11a5bd0_0;
    %store/vec4a v00000259d11a4ff0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d11a5bd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d11a5bd0_0, 0, 32;
    %jmp T_6.18;
T_6.19 ;
    %end;
    .scope S_00000259d121dce0;
t_12 %join;
    %end;
S_00000259d121d510 .scope begin, "$ivl_foreach7" "$ivl_foreach7" 3 107, 3 107 0, S_00000259d121dce0;
 .timescale 0 0;
v00000259d11a5bd0_0 .var/2s "i", 31 0;
S_00000259d121d830 .scope function.void, "set_all_zero" "set_all_zero" 3 97, 3 97 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.set_all_zero ;
    %fork t_15, S_00000259d121d380;
    %jmp t_14;
    .scope S_00000259d121d380;
t_15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a5270_0, 0, 32;
T_7.20 ;
    %load/vec4 v00000259d11a5270_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_7.21, 5;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v00000259d11a5270_0;
    %store/vec4a v00000259d11a4ff0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d11a5270_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d11a5270_0, 0, 32;
    %jmp T_7.20;
T_7.21 ;
    %end;
    .scope S_00000259d121d830;
t_14 %join;
    %end;
S_00000259d121d380 .scope begin, "$ivl_foreach6" "$ivl_foreach6" 3 98, 3 98 0, S_00000259d121d830;
 .timescale 0 0;
v00000259d11a5270_0 .var/2s "i", 31 0;
S_00000259d121de70 .scope function.void, "set_big_element" "set_big_element" 3 73, 3 73 0, S_00000259d11a3780;
 .timescale 0 0;
v00000259d11a5770_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_big_element ;
    %ix/getv/s 4, v00000259d11a5770_0;
    %load/vec4a v00000259d11a4ff0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_8.22, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d11a5770_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
    %jmp T_8.23;
T_8.22 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d11a5770_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
T_8.23 ;
    %end;
S_00000259d121d6a0 .scope function.void, "set_big_negative" "set_big_negative" 3 85, 3 85 0, S_00000259d11a3780;
 .timescale 0 0;
v00000259d11a5450_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_big_negative ;
    %load/vec4 v00000259d11a5450_0;
    %store/vec4 v00000259d11a5950_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_negative_element, S_00000259d121d060;
    %load/vec4 v00000259d11a5450_0;
    %store/vec4 v00000259d11a5770_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_big_element, S_00000259d121de70;
    %end;
S_00000259d121db50 .scope function.void, "set_big_positive" "set_big_positive" 3 80, 3 80 0, S_00000259d11a3780;
 .timescale 0 0;
v00000259d11a5810_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_big_positive ;
    %load/vec4 v00000259d11a5810_0;
    %store/vec4 v00000259d11a51d0_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_positive_element, S_00000259d121d1f0;
    %load/vec4 v00000259d11a5810_0;
    %store/vec4 v00000259d11a5770_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_big_element, S_00000259d121de70;
    %end;
S_00000259d121d9c0 .scope function.void, "set_largest_scale" "set_largest_scale" 3 115, 3 115 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.set_largest_scale ;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v00000259d11a5130_0, 0, 8;
    %end;
S_00000259d121d060 .scope function.void, "set_negative_element" "set_negative_element" 3 51, 3 51 0, S_00000259d11a3780;
 .timescale 0 0;
v00000259d11a5950_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_negative_element ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d11a5950_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
    %end;
S_00000259d121d1f0 .scope function.void, "set_positive_element" "set_positive_element" 3 47, 3 47 0, S_00000259d11a3780;
 .timescale 0 0;
v00000259d11a51d0_0 .var/2s "index", 31 0;
TD_op_negate_int8.a.set_positive_element ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d11a51d0_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d11a4ff0, 4, 5;
    %end;
S_00000259d121e070 .scope function.void, "set_sum_negative_carry" "set_sum_negative_carry" 3 127, 3 127 0, S_00000259d11a3780;
 .timescale 0 0;
v00000259d11a5090_0 .var/2s "big_negative_num", 31 0;
v00000259d11a59f0_0 .var/2s "is_small_scale", 31 0;
TD_op_negate_int8.a.set_sum_negative_carry ;
    %callf/void TD_op_negate_int8.a.set_largest_scale, S_00000259d121d9c0;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d11a5130_0;
    %load/vec4 v00000259d11a59f0_0;
    %pad/u 8;
    %sub;
    %store/vec4 v00000259d11a5130_0, 0, 8;
    %callf/void TD_op_negate_int8.a.set_all_small_elements, S_00000259cf55e1b0;
    %fork t_17, S_00000259d121f1a0;
    %jmp t_16;
    .scope S_00000259d121f1a0;
t_17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a4f50_0, 0, 32;
T_14.24 ;
    %load/vec4 v00000259d11a4f50_0;
    %load/vec4 v00000259d11a5090_0;
    %cmp/s;
    %jmp/0xz T_14.25, 5;
    %load/vec4 v00000259d11a4f50_0;
    %store/vec4 v00000259d11a5450_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_big_negative, S_00000259d121d6a0;
    %load/vec4 v00000259d11a4f50_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d11a4f50_0, 0, 32;
    %jmp T_14.24;
T_14.25 ;
    %end;
    .scope S_00000259d121e070;
t_16 %join;
    %end;
S_00000259d121f1a0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 131, 3 131 0, S_00000259d121e070;
 .timescale 0 0;
v00000259d11a4f50_0 .var/2s "i", 31 0;
S_00000259d121f7e0 .scope function.void, "set_sum_positive_carry" "set_sum_positive_carry" 3 119, 3 119 0, S_00000259d11a3780;
 .timescale 0 0;
v00000259d11a5a90_0 .var/2s "big_positive_num", 31 0;
v00000259d11a5b30_0 .var/2s "is_small_scale", 31 0;
TD_op_negate_int8.a.set_sum_positive_carry ;
    %callf/void TD_op_negate_int8.a.set_largest_scale, S_00000259d121d9c0;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d11a5130_0;
    %load/vec4 v00000259d11a5b30_0;
    %pad/u 8;
    %sub;
    %store/vec4 v00000259d11a5130_0, 0, 8;
    %callf/void TD_op_negate_int8.a.set_all_small_elements, S_00000259cf55e1b0;
    %fork t_19, S_00000259d121ee80;
    %jmp t_18;
    .scope S_00000259d121ee80;
t_19 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d11a5310_0, 0, 32;
T_15.26 ;
    %load/vec4 v00000259d11a5310_0;
    %load/vec4 v00000259d11a5a90_0;
    %cmp/s;
    %jmp/0xz T_15.27, 5;
    %load/vec4 v00000259d11a5310_0;
    %store/vec4 v00000259d11a5810_0, 0, 32;
    %callf/void TD_op_negate_int8.a.set_big_positive, S_00000259d121db50;
    %load/vec4 v00000259d11a5310_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d11a5310_0, 0, 32;
    %jmp T_15.26;
T_15.27 ;
    %end;
    .scope S_00000259d121f7e0;
t_18 %join;
    %end;
S_00000259d121ee80 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 123, 3 123 0, S_00000259d121f7e0;
 .timescale 0 0;
v00000259d11a5310_0 .var/2s "i", 31 0;
S_00000259d121e200 .scope function.void, "set_unused_encode" "set_unused_encode" 3 102, 3 102 0, S_00000259d11a3780;
 .timescale 0 0;
v00000259d11a53b0_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.a.set_unused_encode ;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v00000259d11a53b0_0;
    %store/vec4a v00000259d11a4ff0, 4, 0;
    %end;
S_00000259d121f010 .scope function.void, "set_zero" "set_zero" 3 90, 3 90 0, S_00000259d11a3780;
 .timescale 0 0;
v00000259d11a4cd0_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.a.set_zero ;
    %ix/getv/s 4, v00000259d11a4cd0_0;
    %load/vec4a v00000259d11a4ff0, 4;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_17.28, 4;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v00000259d11a4cd0_0;
    %store/vec4a v00000259d11a4ff0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1221660_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v00000259d1221660_0, 0, 6;
T_17.28 ;
    %end;
S_00000259d121f4c0 .scope function.void, "set_zero_scale" "set_zero_scale" 3 111, 3 111 0, S_00000259d11a3780;
 .timescale 0 0;
TD_op_negate_int8.a.set_zero_scale ;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v00000259d11a5130_0, 0, 8;
    %end;
S_00000259d121f330 .scope module, "result" "t_mx_int8_vector" 3 143, 3 11 0, S_00000259d11a2c30;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scale";
    .port_info 1 /OUTPUT 256 "elements";
P_00000259d11a30b0 .param/l "largest_scale" 1 3 15, C4<11111111>;
P_00000259d11a30e8 .param/l "unused_code" 1 3 14, C4<10000000>;
P_00000259d11a3120 .param/l "zero_scale" 1 3 16, C4<00000000>;
v00000259d12208a0 .array "elements", 0 31, 7 0;
v00000259d1221160_0 .var "scale", 7 0;
v00000259d1220bc0_0 .var "zero_num", 5 0;
S_00000259d121e520 .scope function.void, "post_randomize" "post_randomize" 3 20, 3 20 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.post_randomize ;
    %pushi/vec4 0, 0, 6;
    %store/vec4 v00000259d1220bc0_0, 0, 6;
    %fork t_21, S_00000259d121f650;
    %jmp t_20;
    .scope S_00000259d121f650;
t_21 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1221520_0, 0, 32;
T_19.30 ;
    %load/vec4 v00000259d1221520_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_19.31, 5;
    %ix/getv/s 4, v00000259d1221520_0;
    %load/vec4a v00000259d12208a0, 4;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_19.32, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1220bc0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v00000259d1220bc0_0, 0, 6;
T_19.32 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1221520_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1221520_0, 0, 32;
    %jmp T_19.30;
T_19.31 ;
    %end;
    .scope S_00000259d121e520;
t_20 %join;
    %end;
S_00000259d121f650 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 3 22, 3 22 0, S_00000259d121e520;
 .timescale 0 0;
v00000259d1221520_0 .var/2s "i", 31 0;
S_00000259d121eb60 .scope function.void, "randomize" "randomize" 3 29, 3 29 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.randomize ;
    %vpi_func 3 30 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %store/vec4 v00000259d1221160_0, 0, 8;
    %fork t_23, S_00000259d121f970;
    %jmp t_22;
    .scope S_00000259d121f970;
t_23 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12210c0_0, 0, 32;
T_20.34 ;
    %load/vec4 v00000259d12210c0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_20.35, 5;
    %vpi_func 3 32 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %ix/getv/s 4, v00000259d12210c0_0;
    %store/vec4a v00000259d12208a0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d12210c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d12210c0_0, 0, 32;
    %jmp T_20.34;
T_20.35 ;
    %end;
    .scope S_00000259d121eb60;
t_22 %join;
    %callf/void TD_op_negate_int8.result.post_randomize, S_00000259d121e520;
    %end;
S_00000259d121f970 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 3 31, 3 31 0, S_00000259d121eb60;
 .timescale 0 0;
v00000259d12210c0_0 .var/2s "i", 31 0;
S_00000259d121e9d0 .scope function.void, "set_all_big_elements" "set_all_big_elements" 3 64, 3 64 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_big_elements ;
    %fork t_25, S_00000259d121fc90;
    %jmp t_24;
    .scope S_00000259d121fc90;
t_25 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1220a80_0, 0, 32;
T_21.36 ;
    %load/vec4 v00000259d1220a80_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_21.37, 5;
    %ix/getv/s 4, v00000259d1220a80_0;
    %load/vec4a v00000259d12208a0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_21.38, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d1220a80_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
    %jmp T_21.39;
T_21.38 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d1220a80_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
T_21.39 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1220a80_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1220a80_0, 0, 32;
    %jmp T_21.36;
T_21.37 ;
    %end;
    .scope S_00000259d121e9d0;
t_24 %join;
    %end;
S_00000259d121fc90 .scope begin, "$ivl_foreach5" "$ivl_foreach5" 3 65, 3 65 0, S_00000259d121e9d0;
 .timescale 0 0;
v00000259d1220a80_0 .var/2s "i", 31 0;
S_00000259d121e6b0 .scope function.void, "set_all_negative" "set_all_negative" 3 42, 3 42 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_negative ;
    %fork t_27, S_00000259d121fe20;
    %jmp t_26;
    .scope S_00000259d121fe20;
t_27 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1220580_0, 0, 32;
T_22.40 ;
    %load/vec4 v00000259d1220580_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_22.41, 5;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d1220580_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1220580_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1220580_0, 0, 32;
    %jmp T_22.40;
T_22.41 ;
    %end;
    .scope S_00000259d121e6b0;
t_26 %join;
    %end;
S_00000259d121fe20 .scope begin, "$ivl_foreach3" "$ivl_foreach3" 3 43, 3 43 0, S_00000259d121e6b0;
 .timescale 0 0;
v00000259d1220580_0 .var/2s "i", 31 0;
S_00000259d121fb00 .scope function.void, "set_all_positive" "set_all_positive" 3 37, 3 37 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_positive ;
    %fork t_29, S_00000259d121e840;
    %jmp t_28;
    .scope S_00000259d121e840;
t_29 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1220940_0, 0, 32;
T_23.42 ;
    %load/vec4 v00000259d1220940_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_23.43, 5;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d1220940_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1220940_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1220940_0, 0, 32;
    %jmp T_23.42;
T_23.43 ;
    %end;
    .scope S_00000259d121fb00;
t_28 %join;
    %end;
S_00000259d121e840 .scope begin, "$ivl_foreach2" "$ivl_foreach2" 3 38, 3 38 0, S_00000259d121fb00;
 .timescale 0 0;
v00000259d1220940_0 .var/2s "i", 31 0;
S_00000259d121ecf0 .scope function.void, "set_all_small_elements" "set_all_small_elements" 3 55, 3 55 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_small_elements ;
    %fork t_31, S_00000259d121e390;
    %jmp t_30;
    .scope S_00000259d121e390;
t_31 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12204e0_0, 0, 32;
T_24.44 ;
    %load/vec4 v00000259d12204e0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_24.45, 5;
    %ix/getv/s 4, v00000259d12204e0_0;
    %load/vec4a v00000259d12208a0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_24.46, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d12204e0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
    %jmp T_24.47;
T_24.46 ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d12204e0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
T_24.47 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d12204e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d12204e0_0, 0, 32;
    %jmp T_24.44;
T_24.45 ;
    %end;
    .scope S_00000259d121ecf0;
t_30 %join;
    %end;
S_00000259d121e390 .scope begin, "$ivl_foreach4" "$ivl_foreach4" 3 56, 3 56 0, S_00000259d121ecf0;
 .timescale 0 0;
v00000259d12204e0_0 .var/2s "i", 31 0;
S_00000259d12231c0 .scope function.void, "set_all_unused_code" "set_all_unused_code" 3 106, 3 106 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_unused_code ;
    %fork t_33, S_00000259d1222860;
    %jmp t_32;
    .scope S_00000259d1222860;
t_33 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12217a0_0, 0, 32;
T_25.48 ;
    %load/vec4 v00000259d12217a0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_25.49, 5;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v00000259d12217a0_0;
    %store/vec4a v00000259d12208a0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d12217a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d12217a0_0, 0, 32;
    %jmp T_25.48;
T_25.49 ;
    %end;
    .scope S_00000259d12231c0;
t_32 %join;
    %end;
S_00000259d1222860 .scope begin, "$ivl_foreach7" "$ivl_foreach7" 3 107, 3 107 0, S_00000259d12231c0;
 .timescale 0 0;
v00000259d12217a0_0 .var/2s "i", 31 0;
S_00000259d1222090 .scope function.void, "set_all_zero" "set_all_zero" 3 97, 3 97 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.set_all_zero ;
    %fork t_35, S_00000259d1222ea0;
    %jmp t_34;
    .scope S_00000259d1222ea0;
t_35 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1221020_0, 0, 32;
T_26.50 ;
    %load/vec4 v00000259d1221020_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_26.51, 5;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v00000259d1221020_0;
    %store/vec4a v00000259d12208a0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1221020_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1221020_0, 0, 32;
    %jmp T_26.50;
T_26.51 ;
    %end;
    .scope S_00000259d1222090;
t_34 %join;
    %end;
S_00000259d1222ea0 .scope begin, "$ivl_foreach6" "$ivl_foreach6" 3 98, 3 98 0, S_00000259d1222090;
 .timescale 0 0;
v00000259d1221020_0 .var/2s "i", 31 0;
S_00000259d1222b80 .scope function.void, "set_big_element" "set_big_element" 3 73, 3 73 0, S_00000259d121f330;
 .timescale 0 0;
v00000259d1221980_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_big_element ;
    %ix/getv/s 4, v00000259d1221980_0;
    %load/vec4a v00000259d12208a0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.52, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d1221980_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
    %jmp T_27.53;
T_27.52 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d1221980_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
T_27.53 ;
    %end;
S_00000259d1223030 .scope function.void, "set_big_negative" "set_big_negative" 3 85, 3 85 0, S_00000259d121f330;
 .timescale 0 0;
v00000259d1220120_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_big_negative ;
    %load/vec4 v00000259d1220120_0;
    %store/vec4 v00000259d1221700_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_negative_element, S_00000259d1223990;
    %load/vec4 v00000259d1220120_0;
    %store/vec4 v00000259d1221980_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_big_element, S_00000259d1222b80;
    %end;
S_00000259d1223800 .scope function.void, "set_big_positive" "set_big_positive" 3 80, 3 80 0, S_00000259d121f330;
 .timescale 0 0;
v00000259d1220f80_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_big_positive ;
    %load/vec4 v00000259d1220f80_0;
    %store/vec4 v00000259d1221a20_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_positive_element, S_00000259d12234e0;
    %load/vec4 v00000259d1220f80_0;
    %store/vec4 v00000259d1221980_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_big_element, S_00000259d1222b80;
    %end;
S_00000259d1223350 .scope function.void, "set_largest_scale" "set_largest_scale" 3 115, 3 115 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.set_largest_scale ;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v00000259d1221160_0, 0, 8;
    %end;
S_00000259d1223990 .scope function.void, "set_negative_element" "set_negative_element" 3 51, 3 51 0, S_00000259d121f330;
 .timescale 0 0;
v00000259d1221700_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_negative_element ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d1221700_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
    %end;
S_00000259d12234e0 .scope function.void, "set_positive_element" "set_positive_element" 3 47, 3 47 0, S_00000259d121f330;
 .timescale 0 0;
v00000259d1221a20_0 .var/2s "index", 31 0;
TD_op_negate_int8.result.set_positive_element ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d1221a20_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12208a0, 4, 5;
    %end;
S_00000259d1222220 .scope function.void, "set_sum_negative_carry" "set_sum_negative_carry" 3 127, 3 127 0, S_00000259d121f330;
 .timescale 0 0;
v00000259d1221ac0_0 .var/2s "big_negative_num", 31 0;
v00000259d1220b20_0 .var/2s "is_small_scale", 31 0;
TD_op_negate_int8.result.set_sum_negative_carry ;
    %callf/void TD_op_negate_int8.result.set_largest_scale, S_00000259d1223350;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d1221160_0;
    %load/vec4 v00000259d1220b20_0;
    %pad/u 8;
    %sub;
    %store/vec4 v00000259d1221160_0, 0, 8;
    %callf/void TD_op_negate_int8.result.set_all_small_elements, S_00000259d121ecf0;
    %fork t_37, S_00000259d12223b0;
    %jmp t_36;
    .scope S_00000259d12223b0;
t_37 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1221480_0, 0, 32;
T_33.54 ;
    %load/vec4 v00000259d1221480_0;
    %load/vec4 v00000259d1221ac0_0;
    %cmp/s;
    %jmp/0xz T_33.55, 5;
    %load/vec4 v00000259d1221480_0;
    %store/vec4 v00000259d1220120_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_big_negative, S_00000259d1223030;
    %load/vec4 v00000259d1221480_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d1221480_0, 0, 32;
    %jmp T_33.54;
T_33.55 ;
    %end;
    .scope S_00000259d1222220;
t_36 %join;
    %end;
S_00000259d12223b0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 131, 3 131 0, S_00000259d1222220;
 .timescale 0 0;
v00000259d1221480_0 .var/2s "i", 31 0;
S_00000259d1223670 .scope function.void, "set_sum_positive_carry" "set_sum_positive_carry" 3 119, 3 119 0, S_00000259d121f330;
 .timescale 0 0;
v00000259d1221840_0 .var/2s "big_positive_num", 31 0;
v00000259d12209e0_0 .var/2s "is_small_scale", 31 0;
TD_op_negate_int8.result.set_sum_positive_carry ;
    %callf/void TD_op_negate_int8.result.set_largest_scale, S_00000259d1223350;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d1221160_0;
    %load/vec4 v00000259d12209e0_0;
    %pad/u 8;
    %sub;
    %store/vec4 v00000259d1221160_0, 0, 8;
    %callf/void TD_op_negate_int8.result.set_all_small_elements, S_00000259d121ecf0;
    %fork t_39, S_00000259d1222540;
    %jmp t_38;
    .scope S_00000259d1222540;
t_39 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12206c0_0, 0, 32;
T_34.56 ;
    %load/vec4 v00000259d12206c0_0;
    %load/vec4 v00000259d1221840_0;
    %cmp/s;
    %jmp/0xz T_34.57, 5;
    %load/vec4 v00000259d12206c0_0;
    %store/vec4 v00000259d1220f80_0, 0, 32;
    %callf/void TD_op_negate_int8.result.set_big_positive, S_00000259d1223800;
    %load/vec4 v00000259d12206c0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d12206c0_0, 0, 32;
    %jmp T_34.56;
T_34.57 ;
    %end;
    .scope S_00000259d1223670;
t_38 %join;
    %end;
S_00000259d1222540 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 123, 3 123 0, S_00000259d1223670;
 .timescale 0 0;
v00000259d12206c0_0 .var/2s "i", 31 0;
S_00000259d12226d0 .scope function.void, "set_unused_encode" "set_unused_encode" 3 102, 3 102 0, S_00000259d121f330;
 .timescale 0 0;
v00000259d1220800_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.result.set_unused_encode ;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v00000259d1220800_0;
    %store/vec4a v00000259d12208a0, 4, 0;
    %end;
S_00000259d12229f0 .scope function.void, "set_zero" "set_zero" 3 90, 3 90 0, S_00000259d121f330;
 .timescale 0 0;
v00000259d12218e0_0 .var/2s "elem_index", 31 0;
TD_op_negate_int8.result.set_zero ;
    %ix/getv/s 4, v00000259d12218e0_0;
    %load/vec4a v00000259d12208a0, 4;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_36.58, 4;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v00000259d12218e0_0;
    %store/vec4a v00000259d12208a0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1220bc0_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v00000259d1220bc0_0, 0, 6;
T_36.58 ;
    %end;
S_00000259d1222d10 .scope function.void, "set_zero_scale" "set_zero_scale" 3 111, 3 111 0, S_00000259d121f330;
 .timescale 0 0;
TD_op_negate_int8.result.set_zero_scale ;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v00000259d1221160_0, 0, 8;
    %end;
S_00000259d11c0d90 .scope module, "t_fp32_scale" "t_fp32_scale" 3 147;
 .timescale 0 0;
    .port_info 0 /OUTPUT 32 "f";
v00000259d1221de0_0 .var "NaN", 0 0;
v00000259d1220620_0 .var "carry", 0 0;
v00000259d1221340_0 .net "f", 31 0, L_00000259d1234d10;  1 drivers
v00000259d1220c60_0 .var "mantissa_high", 5 0;
v00000259d1220e40_0 .var "mantissa_low", 15 0;
v00000259d1221e80_0 .var "mantissa_low_msb", 0 0;
v00000259d1221f20_0 .var "overflow", 0 0;
v00000259d1220080_0 .var "scale", 7 0;
v00000259d12201c0_0 .var "scale_overflow", 0 0;
v00000259d1220ee0_0 .var "sign", 0 0;
v00000259d12203a0_0 .var "sub_normal", 0 0;
v00000259d1220760_0 .var "tie2even", 1 0;
LS_00000259d1234d10_0_0 .concat [ 16 1 6 8], v00000259d1220e40_0, v00000259d1221e80_0, v00000259d1220c60_0, v00000259d1220080_0;
LS_00000259d1234d10_0_4 .concat [ 1 0 0 0], v00000259d1220ee0_0;
L_00000259d1234d10 .concat [ 31 1 0 0], LS_00000259d1234d10_0_0, LS_00000259d1234d10_0_4;
S_00000259d1223b20 .scope function.vec4.s1, "random_bit" "random_bit" 3 182, 3 182 0, S_00000259d11c0d90;
 .timescale 0 0;
; Variable random_bit is vec4 return value of scope S_00000259d1223b20
TD_t_fp32_scale.random_bit ;
    %vpi_func 3 183 "$urandom" 32 {0 0 0};
    %pushi/vec4 2, 0, 32;
    %mod;
    %pad/u 1;
    %ret/vec4 0, 0, 1;  Assign to random_bit (store_vec4_to_lval)
    %disable/flow S_00000259d1223b20;
    %end;
S_00000259d1223cb0 .scope function.vec4.s6, "random_high" "random_high" 3 176, 3 176 0, S_00000259d11c0d90;
 .timescale 0 0;
; Variable random_high is vec4 return value of scope S_00000259d1223cb0
TD_t_fp32_scale.random_high ;
    %vpi_func 3 177 "$urandom" 32 {0 0 0};
    %pushi/vec4 64, 0, 32;
    %mod;
    %pad/u 6;
    %ret/vec4 0, 0, 6;  Assign to random_high (store_vec4_to_lval)
    %disable/flow S_00000259d1223cb0;
    %end;
S_00000259d1223e40 .scope function.vec4.s16, "random_low" "random_low" 3 179, 3 179 0, S_00000259d11c0d90;
 .timescale 0 0;
; Variable random_low is vec4 return value of scope S_00000259d1223e40
TD_t_fp32_scale.random_low ;
    %vpi_func 3 180 "$urandom" 32 {0 0 0};
    %pushi/vec4 65536, 0, 32;
    %mod;
    %pad/u 16;
    %ret/vec4 0, 0, 16;  Assign to random_low (store_vec4_to_lval)
    %disable/flow S_00000259d1223e40;
    %end;
S_00000259d1225880 .scope function.void, "randomize" "randomize" 3 210, 3 210 0, S_00000259d11c0d90;
 .timescale 0 0;
TD_t_fp32_scale.randomize ;
    %load/vec4 v00000259d12203a0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_41.60, 8;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v00000259d1220080_0, 0, 8;
    %jmp T_41.61;
T_41.60 ;
    %load/vec4 v00000259d1221de0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_41.62, 8;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v00000259d1220080_0, 0, 8;
    %jmp T_41.63;
T_41.62 ;
    %vpi_func 3 216 "$urandom" 32 {0 0 0};
    %pushi/vec4 128, 0, 32;
    %mod;
    %addi 1, 0, 32;
    %pad/u 8;
    %store/vec4 v00000259d1220080_0, 0, 8;
T_41.63 ;
T_41.61 ;
    %load/vec4 v00000259d12201c0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_41.64, 8;
    %pushi/vec4 254, 0, 8;
    %store/vec4 v00000259d1220080_0, 0, 8;
T_41.64 ;
    %callf/vec4 TD_t_fp32_scale.random_high, S_00000259d1223cb0;
    %store/vec4 v00000259d1220c60_0, 0, 6;
    %callf/vec4 TD_t_fp32_scale.random_low, S_00000259d1223e40;
    %store/vec4 v00000259d1220e40_0, 0, 16;
    %callf/vec4 TD_t_fp32_scale.random_bit, S_00000259d1223b20;
    %store/vec4 v00000259d1221e80_0, 0, 1;
    %load/vec4 v00000259d1220620_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_41.66, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000259d1221e80_0, 0, 1;
T_41.68 ;
    %load/vec4 v00000259d1220e40_0;
    %and/r;
    %flag_set/vec4 8;
    %jmp/0xz T_41.69, 8;
    %callf/vec4 TD_t_fp32_scale.random_low, S_00000259d1223e40;
    %store/vec4 v00000259d1220e40_0, 0, 16;
    %jmp T_41.68;
T_41.69 ;
    %load/vec4 v00000259d1220760_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/0xz  T_41.70, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000259d1221e80_0, 0, 1;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v00000259d1220e40_0, 0, 16;
    %load/vec4 v00000259d1220760_0;
    %parti/s 1, 1, 2;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v00000259d1220c60_0, 4, 1;
T_41.70 ;
T_41.66 ;
    %load/vec4 v00000259d1221f20_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_41.72, 8;
    %pushi/vec4 63, 0, 6;
    %store/vec4 v00000259d1220c60_0, 0, 6;
T_41.72 ;
    %end;
S_00000259d1225d30 .scope function.void, "set_NaN" "set_NaN" 3 195, 3 195 0, S_00000259d11c0d90;
 .timescale 0 0;
v00000259d1220260_0 .var "NaN_i", 0 0;
TD_t_fp32_scale.set_NaN ;
    %load/vec4 v00000259d1220260_0;
    %store/vec4 v00000259d1221de0_0, 0, 1;
    %end;
S_00000259d12250b0 .scope function.void, "set_carry" "set_carry" 3 188, 3 188 0, S_00000259d11c0d90;
 .timescale 0 0;
v00000259d1221c00_0 .var "c_i", 0 0;
TD_t_fp32_scale.set_carry ;
    %load/vec4 v00000259d1221c00_0;
    %store/vec4 v00000259d1220620_0, 0, 1;
    %end;
S_00000259d1226e60 .scope function.void, "set_clean" "set_clean" 3 167, 3 167 0, S_00000259d11c0d90;
 .timescale 0 0;
TD_t_fp32_scale.set_clean ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d1220ee0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d12203a0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d1221de0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d1220620_0, 0, 1;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000259d1220760_0, 0, 2;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d1221f20_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d12201c0_0, 0, 1;
    %end;
S_00000259d1225240 .scope function.void, "set_overflow" "set_overflow" 3 191, 3 191 0, S_00000259d11c0d90;
 .timescale 0 0;
v00000259d1221ca0_0 .var "o_i", 0 0;
TD_t_fp32_scale.set_overflow ;
    %load/vec4 v00000259d1221ca0_0;
    %store/vec4 v00000259d1221f20_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000259d1220620_0, 0, 1;
    %end;
S_00000259d1225a10 .scope function.void, "set_scale_overflow" "set_scale_overflow" 3 202, 3 202 0, S_00000259d11c0d90;
 .timescale 0 0;
v00000259d1221d40_0 .var "overflow_i", 0 0;
TD_t_fp32_scale.set_scale_overflow ;
    %load/vec4 v00000259d1221d40_0;
    %store/vec4 v00000259d12201c0_0, 0, 1;
    %load/vec4 v00000259d12201c0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_46.74, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000259d1220620_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000259d1221f20_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d1221de0_0, 0, 1;
T_46.74 ;
    %end;
S_00000259d1225ba0 .scope function.void, "set_sign" "set_sign" 3 185, 3 185 0, S_00000259d11c0d90;
 .timescale 0 0;
v00000259d1220300_0 .var "sign_i", 0 0;
TD_t_fp32_scale.set_sign ;
    %load/vec4 v00000259d1220300_0;
    %store/vec4 v00000259d1220ee0_0, 0, 1;
    %end;
S_00000259d12256f0 .scope function.void, "set_tie2even" "set_tie2even" 3 198, 3 198 0, S_00000259d11c0d90;
 .timescale 0 0;
TD_t_fp32_scale.set_tie2even ;
    %callf/vec4 TD_t_fp32_scale.random_bit, S_00000259d1223b20;
    %concati/vec4 1, 0, 1;
    %store/vec4 v00000259d1220760_0, 0, 2;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000259d1220620_0, 0, 1;
    %end;
S_00000259d1226050 .scope function.void, "set_zero" "set_zero" 3 164, 3 164 0, S_00000259d11c0d90;
 .timescale 0 0;
TD_t_fp32_scale.set_zero ;
    %pushi/vec4 0, 0, 23;
    %split/vec4 16;
    %store/vec4 v00000259d1220e40_0, 0, 16;
    %split/vec4 1;
    %store/vec4 v00000259d1221e80_0, 0, 1;
    %store/vec4 v00000259d1220c60_0, 0, 6;
    %end;
S_00000259d11c0f20 .scope module, "tb_mx_int8_sum" "tb_mx_int8_sum" 4 5;
 .timescale -9 -12;
P_00000259cf5099e0 .param/l "CYCLE" 1 4 6, +C4<00000000000000000000000001100100>;
P_00000259cf509a18 .param/l "N" 1 4 7, +C4<00000000000000000000000000000101>;
L_00000259d11c0200 .functor BUFZ 8, L_00000259d1291750, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118e300 .functor BUFZ 8, L_00000259d1291050, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118da40 .functor BUFZ 8, L_00000259d1290c60, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118d810 .functor BUFZ 8, L_00000259d1290b80, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118e370 .functor BUFZ 8, L_00000259d12917c0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118dc00 .functor BUFZ 8, L_00000259d1290e90, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118dc70 .functor BUFZ 8, L_00000259d1290a30, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118e0d0 .functor BUFZ 8, L_00000259d1291210, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118e060 .functor BUFZ 8, L_00000259d12903a0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118dce0 .functor BUFZ 8, L_00000259d12913d0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118e4c0 .functor BUFZ 8, L_00000259d12910c0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118e6f0 .functor BUFZ 8, L_00000259d1291280, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118dd50 .functor BUFZ 8, L_00000259d12909c0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118ddc0 .functor BUFZ 8, L_00000259d1291360, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118d960 .functor BUFZ 8, L_00000259d1290790, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118e140 .functor BUFZ 8, L_00000259d12908e0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118e1b0 .functor BUFZ 8, L_00000259d12904f0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118d880 .functor BUFZ 8, L_00000259d1290410, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118d9d0 .functor BUFZ 8, L_00000259d1291440, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118dab0 .functor BUFZ 8, L_00000259d1291830, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d118db20 .functor BUFZ 8, L_00000259d1290aa0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259cf58d8c0 .functor BUFZ 8, L_00000259d1290bf0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1290170 .functor BUFZ 8, L_00000259d1291fa0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1291910 .functor BUFZ 8, L_00000259d1291de0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1290cd0 .functor BUFZ 8, L_00000259d1291f30, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1291670 .functor BUFZ 8, L_00000259d1291ec0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1290f00 .functor BUFZ 8, L_00000259d1291d70, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1290d40 .functor BUFZ 8, L_00000259d1292010, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1291520 .functor BUFZ 8, L_00000259d1292080, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1291130 .functor BUFZ 8, L_00000259d1291e50, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1290870 .functor BUFZ 8, L_00000259d129c9c0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d1290250 .functor BUFZ 8, L_00000259d129d440, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_0 .array/port v00000259d12281a0, 0;
L_00000259d1291750 .functor BUFZ 8, v00000259d12281a0_0, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_1 .array/port v00000259d12281a0, 1;
L_00000259d1291050 .functor BUFZ 8, v00000259d12281a0_1, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_2 .array/port v00000259d12281a0, 2;
L_00000259d1290c60 .functor BUFZ 8, v00000259d12281a0_2, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_3 .array/port v00000259d12281a0, 3;
L_00000259d1290b80 .functor BUFZ 8, v00000259d12281a0_3, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_4 .array/port v00000259d12281a0, 4;
L_00000259d12917c0 .functor BUFZ 8, v00000259d12281a0_4, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_5 .array/port v00000259d12281a0, 5;
L_00000259d1290e90 .functor BUFZ 8, v00000259d12281a0_5, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_6 .array/port v00000259d12281a0, 6;
L_00000259d1290a30 .functor BUFZ 8, v00000259d12281a0_6, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_7 .array/port v00000259d12281a0, 7;
L_00000259d1291210 .functor BUFZ 8, v00000259d12281a0_7, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_8 .array/port v00000259d12281a0, 8;
L_00000259d12903a0 .functor BUFZ 8, v00000259d12281a0_8, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_9 .array/port v00000259d12281a0, 9;
L_00000259d12913d0 .functor BUFZ 8, v00000259d12281a0_9, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_10 .array/port v00000259d12281a0, 10;
L_00000259d12910c0 .functor BUFZ 8, v00000259d12281a0_10, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_11 .array/port v00000259d12281a0, 11;
L_00000259d1291280 .functor BUFZ 8, v00000259d12281a0_11, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_12 .array/port v00000259d12281a0, 12;
L_00000259d12909c0 .functor BUFZ 8, v00000259d12281a0_12, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_13 .array/port v00000259d12281a0, 13;
L_00000259d1291360 .functor BUFZ 8, v00000259d12281a0_13, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_14 .array/port v00000259d12281a0, 14;
L_00000259d1290790 .functor BUFZ 8, v00000259d12281a0_14, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_15 .array/port v00000259d12281a0, 15;
L_00000259d12908e0 .functor BUFZ 8, v00000259d12281a0_15, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_16 .array/port v00000259d12281a0, 16;
L_00000259d12904f0 .functor BUFZ 8, v00000259d12281a0_16, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_17 .array/port v00000259d12281a0, 17;
L_00000259d1290410 .functor BUFZ 8, v00000259d12281a0_17, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_18 .array/port v00000259d12281a0, 18;
L_00000259d1291440 .functor BUFZ 8, v00000259d12281a0_18, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_19 .array/port v00000259d12281a0, 19;
L_00000259d1291830 .functor BUFZ 8, v00000259d12281a0_19, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_20 .array/port v00000259d12281a0, 20;
L_00000259d1290aa0 .functor BUFZ 8, v00000259d12281a0_20, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_21 .array/port v00000259d12281a0, 21;
L_00000259d1290bf0 .functor BUFZ 8, v00000259d12281a0_21, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_22 .array/port v00000259d12281a0, 22;
L_00000259d1291fa0 .functor BUFZ 8, v00000259d12281a0_22, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_23 .array/port v00000259d12281a0, 23;
L_00000259d1291de0 .functor BUFZ 8, v00000259d12281a0_23, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_24 .array/port v00000259d12281a0, 24;
L_00000259d1291f30 .functor BUFZ 8, v00000259d12281a0_24, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_25 .array/port v00000259d12281a0, 25;
L_00000259d1291ec0 .functor BUFZ 8, v00000259d12281a0_25, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_26 .array/port v00000259d12281a0, 26;
L_00000259d1291d70 .functor BUFZ 8, v00000259d12281a0_26, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_27 .array/port v00000259d12281a0, 27;
L_00000259d1292010 .functor BUFZ 8, v00000259d12281a0_27, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_28 .array/port v00000259d12281a0, 28;
L_00000259d1292080 .functor BUFZ 8, v00000259d12281a0_28, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_29 .array/port v00000259d12281a0, 29;
L_00000259d1291e50 .functor BUFZ 8, v00000259d12281a0_29, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_30 .array/port v00000259d12281a0, 30;
L_00000259d129c9c0 .functor BUFZ 8, v00000259d12281a0_30, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d12281a0_31 .array/port v00000259d12281a0, 31;
L_00000259d129d440 .functor BUFZ 8, v00000259d12281a0_31, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129cf70 .functor BUFZ 8, L_00000259d1291750, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129c5d0 .functor BUFZ 8, L_00000259d1291050, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129c3a0 .functor BUFZ 8, L_00000259d1290c60, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129caa0 .functor BUFZ 8, L_00000259d1290b80, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129df30 .functor BUFZ 8, L_00000259d12917c0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d8a0 .functor BUFZ 8, L_00000259d1290e90, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129c8e0 .functor BUFZ 8, L_00000259d1290a30, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129dd00 .functor BUFZ 8, L_00000259d1291210, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d050 .functor BUFZ 8, L_00000259d12903a0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d830 .functor BUFZ 8, L_00000259d12913d0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d2f0 .functor BUFZ 8, L_00000259d12910c0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129cf00 .functor BUFZ 8, L_00000259d1291280, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129cb10 .functor BUFZ 8, L_00000259d12909c0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d910 .functor BUFZ 8, L_00000259d1291360, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d980 .functor BUFZ 8, L_00000259d1290790, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129cfe0 .functor BUFZ 8, L_00000259d12908e0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d210 .functor BUFZ 8, L_00000259d12904f0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129dc90 .functor BUFZ 8, L_00000259d1290410, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129c800 .functor BUFZ 8, L_00000259d1291440, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129cb80 .functor BUFZ 8, L_00000259d1291830, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d0c0 .functor BUFZ 8, L_00000259d1290aa0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129cdb0 .functor BUFZ 8, L_00000259d1290bf0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d670 .functor BUFZ 8, L_00000259d1291fa0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129c950 .functor BUFZ 8, L_00000259d1291de0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129ccd0 .functor BUFZ 8, L_00000259d1291f30, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129c410 .functor BUFZ 8, L_00000259d1291ec0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129dbb0 .functor BUFZ 8, L_00000259d1291d70, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129ca30 .functor BUFZ 8, L_00000259d1292010, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129ce90 .functor BUFZ 8, L_00000259d1292080, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129d360 .functor BUFZ 8, L_00000259d1291e50, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129cbf0 .functor BUFZ 8, L_00000259d129c9c0, C4<00000000>, C4<00000000>, C4<00000000>;
L_00000259d129c480 .functor BUFZ 8, L_00000259d129d440, C4<00000000>, C4<00000000>, C4<00000000>;
v00000259d1235f30_0 .var/2u "clk", 0 0;
v00000259d1234b30 .array "i_mxint8_elements", 0 31;
v00000259d1234b30_0 .net v00000259d1234b30 0, 7 0, L_00000259d1291750; 1 drivers
v00000259d1234b30_1 .net v00000259d1234b30 1, 7 0, L_00000259d1291050; 1 drivers
v00000259d1234b30_2 .net v00000259d1234b30 2, 7 0, L_00000259d1290c60; 1 drivers
v00000259d1234b30_3 .net v00000259d1234b30 3, 7 0, L_00000259d1290b80; 1 drivers
v00000259d1234b30_4 .net v00000259d1234b30 4, 7 0, L_00000259d12917c0; 1 drivers
v00000259d1234b30_5 .net v00000259d1234b30 5, 7 0, L_00000259d1290e90; 1 drivers
v00000259d1234b30_6 .net v00000259d1234b30 6, 7 0, L_00000259d1290a30; 1 drivers
v00000259d1234b30_7 .net v00000259d1234b30 7, 7 0, L_00000259d1291210; 1 drivers
v00000259d1234b30_8 .net v00000259d1234b30 8, 7 0, L_00000259d12903a0; 1 drivers
v00000259d1234b30_9 .net v00000259d1234b30 9, 7 0, L_00000259d12913d0; 1 drivers
v00000259d1234b30_10 .net v00000259d1234b30 10, 7 0, L_00000259d12910c0; 1 drivers
v00000259d1234b30_11 .net v00000259d1234b30 11, 7 0, L_00000259d1291280; 1 drivers
v00000259d1234b30_12 .net v00000259d1234b30 12, 7 0, L_00000259d12909c0; 1 drivers
v00000259d1234b30_13 .net v00000259d1234b30 13, 7 0, L_00000259d1291360; 1 drivers
v00000259d1234b30_14 .net v00000259d1234b30 14, 7 0, L_00000259d1290790; 1 drivers
v00000259d1234b30_15 .net v00000259d1234b30 15, 7 0, L_00000259d12908e0; 1 drivers
v00000259d1234b30_16 .net v00000259d1234b30 16, 7 0, L_00000259d12904f0; 1 drivers
v00000259d1234b30_17 .net v00000259d1234b30 17, 7 0, L_00000259d1290410; 1 drivers
v00000259d1234b30_18 .net v00000259d1234b30 18, 7 0, L_00000259d1291440; 1 drivers
v00000259d1234b30_19 .net v00000259d1234b30 19, 7 0, L_00000259d1291830; 1 drivers
v00000259d1234b30_20 .net v00000259d1234b30 20, 7 0, L_00000259d1290aa0; 1 drivers
v00000259d1234b30_21 .net v00000259d1234b30 21, 7 0, L_00000259d1290bf0; 1 drivers
v00000259d1234b30_22 .net v00000259d1234b30 22, 7 0, L_00000259d1291fa0; 1 drivers
v00000259d1234b30_23 .net v00000259d1234b30 23, 7 0, L_00000259d1291de0; 1 drivers
v00000259d1234b30_24 .net v00000259d1234b30 24, 7 0, L_00000259d1291f30; 1 drivers
v00000259d1234b30_25 .net v00000259d1234b30 25, 7 0, L_00000259d1291ec0; 1 drivers
v00000259d1234b30_26 .net v00000259d1234b30 26, 7 0, L_00000259d1291d70; 1 drivers
v00000259d1234b30_27 .net v00000259d1234b30 27, 7 0, L_00000259d1292010; 1 drivers
v00000259d1234b30_28 .net v00000259d1234b30 28, 7 0, L_00000259d1292080; 1 drivers
v00000259d1234b30_29 .net v00000259d1234b30 29, 7 0, L_00000259d1291e50; 1 drivers
v00000259d1234b30_30 .net v00000259d1234b30 30, 7 0, L_00000259d129c9c0; 1 drivers
v00000259d1234b30_31 .net v00000259d1234b30 31, 7 0, L_00000259d129d440; 1 drivers
v00000259d1234310_0 .net "i_scale", 7 0, v00000259d1227f20_0;  1 drivers
o00000259d11c58b8 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v00000259d1235e90_0 .net "o_float32_dut", 31 0, o00000259d11c58b8;  0 drivers
v00000259d1234770_0 .net "o_float32_ref", 31 0, L_00000259d1235c10;  1 drivers
o00000259d11c5f18 .functor BUFZ 1, C4<z>; HiZ drive
v00000259d1234450_0 .net "o_overflow_dut", 0 0, o00000259d11c5f18;  0 drivers
v00000259d12344f0_0 .net "o_overflow_ref", 0 0, L_00000259d11c0190;  1 drivers
S_00000259d12261e0 .scope module, "drv" "mx_int8_sum_drv" 4 30, 5 2 0, S_00000259d11c0f20;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 8 "scale_drv";
    .port_info 1 /OUTPUT 256 "mxint8_elements_drv";
    .port_info 2 /INPUT 1 "clk";
P_00000259d11b0a40 .param/l "CYCLE" 0 5 4, +C4<00000000000000000000000001100100>;
P_00000259d11b0a78 .param/l "N" 0 5 3, +C4<00000000000000000000000000000101>;
P_00000259d11b0ab0 .param/l "half" 1 5 10, +C4<00000000000000000000000000110010>;
v00000259d1228f60_0 .net "clk", 0 0, v00000259d1235f30_0;  1 drivers
v00000259d1228c40 .array "mxint8_elements_drv", 0 31;
v00000259d1228c40_0 .net v00000259d1228c40 0, 7 0, v00000259d12281a0_0; 1 drivers
v00000259d1228c40_1 .net v00000259d1228c40 1, 7 0, v00000259d12281a0_1; 1 drivers
v00000259d1228c40_2 .net v00000259d1228c40 2, 7 0, v00000259d12281a0_2; 1 drivers
v00000259d1228c40_3 .net v00000259d1228c40 3, 7 0, v00000259d12281a0_3; 1 drivers
v00000259d1228c40_4 .net v00000259d1228c40 4, 7 0, v00000259d12281a0_4; 1 drivers
v00000259d1228c40_5 .net v00000259d1228c40 5, 7 0, v00000259d12281a0_5; 1 drivers
v00000259d1228c40_6 .net v00000259d1228c40 6, 7 0, v00000259d12281a0_6; 1 drivers
v00000259d1228c40_7 .net v00000259d1228c40 7, 7 0, v00000259d12281a0_7; 1 drivers
v00000259d1228c40_8 .net v00000259d1228c40 8, 7 0, v00000259d12281a0_8; 1 drivers
v00000259d1228c40_9 .net v00000259d1228c40 9, 7 0, v00000259d12281a0_9; 1 drivers
v00000259d1228c40_10 .net v00000259d1228c40 10, 7 0, v00000259d12281a0_10; 1 drivers
v00000259d1228c40_11 .net v00000259d1228c40 11, 7 0, v00000259d12281a0_11; 1 drivers
v00000259d1228c40_12 .net v00000259d1228c40 12, 7 0, v00000259d12281a0_12; 1 drivers
v00000259d1228c40_13 .net v00000259d1228c40 13, 7 0, v00000259d12281a0_13; 1 drivers
v00000259d1228c40_14 .net v00000259d1228c40 14, 7 0, v00000259d12281a0_14; 1 drivers
v00000259d1228c40_15 .net v00000259d1228c40 15, 7 0, v00000259d12281a0_15; 1 drivers
v00000259d1228c40_16 .net v00000259d1228c40 16, 7 0, v00000259d12281a0_16; 1 drivers
v00000259d1228c40_17 .net v00000259d1228c40 17, 7 0, v00000259d12281a0_17; 1 drivers
v00000259d1228c40_18 .net v00000259d1228c40 18, 7 0, v00000259d12281a0_18; 1 drivers
v00000259d1228c40_19 .net v00000259d1228c40 19, 7 0, v00000259d12281a0_19; 1 drivers
v00000259d1228c40_20 .net v00000259d1228c40 20, 7 0, v00000259d12281a0_20; 1 drivers
v00000259d1228c40_21 .net v00000259d1228c40 21, 7 0, v00000259d12281a0_21; 1 drivers
v00000259d1228c40_22 .net v00000259d1228c40 22, 7 0, v00000259d12281a0_22; 1 drivers
v00000259d1228c40_23 .net v00000259d1228c40 23, 7 0, v00000259d12281a0_23; 1 drivers
v00000259d1228c40_24 .net v00000259d1228c40 24, 7 0, v00000259d12281a0_24; 1 drivers
v00000259d1228c40_25 .net v00000259d1228c40 25, 7 0, v00000259d12281a0_25; 1 drivers
v00000259d1228c40_26 .net v00000259d1228c40 26, 7 0, v00000259d12281a0_26; 1 drivers
v00000259d1228c40_27 .net v00000259d1228c40 27, 7 0, v00000259d12281a0_27; 1 drivers
v00000259d1228c40_28 .net v00000259d1228c40 28, 7 0, v00000259d12281a0_28; 1 drivers
v00000259d1228c40_29 .net v00000259d1228c40 29, 7 0, v00000259d12281a0_29; 1 drivers
v00000259d1228c40_30 .net v00000259d1228c40 30, 7 0, v00000259d12281a0_30; 1 drivers
v00000259d1228c40_31 .net v00000259d1228c40 31, 7 0, v00000259d12281a0_31; 1 drivers
v00000259d1227ca0_0 .net "scale_drv", 7 0, v00000259d1227f20_0;  alias, 1 drivers
E_00000259d119c110 .event posedge, v00000259d1228f60_0;
S_00000259d12253d0 .scope function.void, "all_nan_case" "all_nan_case" 5 53, 5 53 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.all_nan_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_all_unused_code, S_00000259d122c280;
    %end;
S_00000259d1226500 .scope function.void, "all_zero_case" "all_zero_case" 5 45, 5 45 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.all_zero_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_all_zero, S_00000259d122d860;
    %end;
S_00000259d1226b40 .scope function.void, "big_case" "big_case" 5 41, 5 41 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.big_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_all_big_elements, S_00000259d122a9d0;
    %end;
S_00000259d1225ec0 .scope function.void, "negative_carry_case" "negative_carry_case" 5 86, 5 86 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.negative_carry_case ;
    %pushi/vec4 15, 0, 32;
    %store/vec4 v00000259d12213e0_0, 0, 32;
    %pushi/vec4 40, 0, 32;
    %store/vec4 v00000259d1227840_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.negative_carry_case_p, S_00000259d1226cd0;
    %end;
S_00000259d1226cd0 .scope function.void, "negative_carry_case_p" "negative_carry_case_p" 5 82, 5 82 0, S_00000259d12261e0;
 .timescale -9 -12;
v00000259d12213e0_0 .var/2s "big_positive_num", 31 0;
v00000259d1227840_0 .var/2s "is_small_scale", 31 0;
TD_tb_mx_int8_sum.drv.negative_carry_case_p ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %load/vec4 v00000259d12213e0_0;
    %store/vec4 v00000259d1228100_0, 0, 32;
    %load/vec4 v00000259d1227840_0;
    %store/vec4 v00000259d12272a0_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_sum_negative_carry, S_00000259d122c0f0;
    %end;
S_00000259d1225560 .scope function.void, "negative_carry_max_case" "negative_carry_max_case" 5 98, 5 98 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.negative_carry_max_case ;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v00000259d12213e0_0, 0, 32;
    %pushi/vec4 120, 0, 32;
    %store/vec4 v00000259d1227840_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.negative_carry_case_p, S_00000259d1226cd0;
    %end;
S_00000259d1226370 .scope function.void, "negative_case" "negative_case" 5 34, 5 34 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.negative_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_all_negative, S_00000259d122d6d0;
    %end;
S_00000259d1226690 .scope function.void, "negative_overflow_case" "negative_overflow_case" 5 89, 5 89 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.negative_overflow_case ;
    %pushi/vec4 25, 0, 32;
    %store/vec4 v00000259d12213e0_0, 0, 32;
    %pushi/vec4 3, 0, 32;
    %store/vec4 v00000259d1227840_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.negative_carry_case_p, S_00000259d1226cd0;
    %end;
S_00000259d1226820 .scope function.void, "negative_overflow_max_case" "negative_overflow_max_case" 5 92, 5 92 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.negative_overflow_max_case ;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v00000259d12213e0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v00000259d1227840_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.negative_carry_case_p, S_00000259d1226cd0;
    %end;
S_00000259d12269b0 .scope function.void, "negative_overflow_scale_nan" "negative_overflow_scale_nan" 5 95, 5 95 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.negative_overflow_scale_nan ;
    %pushi/vec4 21, 0, 32;
    %store/vec4 v00000259d12213e0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1227840_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.negative_carry_case_p, S_00000259d1226cd0;
    %end;
S_00000259d122a390 .scope function.void, "normal_case" "normal_case" 5 27, 5 27 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.normal_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %end;
S_00000259d12290d0 .scope function.void, "positive_carry_case" "positive_carry_case" 5 66, 5 66 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.positive_carry_case ;
    %pushi/vec4 10, 0, 32;
    %store/vec4 v00000259d1228ec0_0, 0, 32;
    %pushi/vec4 20, 0, 32;
    %store/vec4 v00000259d1227de0_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.positive_carry_case_p, S_00000259d1229260;
    %end;
S_00000259d1229260 .scope function.void, "positive_carry_case_p" "positive_carry_case_p" 5 62, 5 62 0, S_00000259d12261e0;
 .timescale -9 -12;
v00000259d1228ec0_0 .var/2s "big_positive_num", 31 0;
v00000259d1227de0_0 .var/2s "is_small_scale", 31 0;
TD_tb_mx_int8_sum.drv.positive_carry_case_p ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %load/vec4 v00000259d1228ec0_0;
    %store/vec4 v00000259d1228ba0_0, 0, 32;
    %load/vec4 v00000259d1227de0_0;
    %store/vec4 v00000259d12284c0_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_sum_positive_carry, S_00000259d122d3b0;
    %end;
S_00000259d1229bc0 .scope function.void, "positive_carry_max_case" "positive_carry_max_case" 5 78, 5 78 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.positive_carry_max_case ;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v00000259d1228ec0_0, 0, 32;
    %pushi/vec4 100, 0, 32;
    %store/vec4 v00000259d1227de0_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.positive_carry_case_p, S_00000259d1229260;
    %end;
S_00000259d12298a0 .scope function.void, "positive_case" "positive_case" 5 30, 5 30 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.positive_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_all_positive, S_00000259d122dd10;
    %end;
S_00000259d122a6b0 .scope function.void, "positive_overflow_case" "positive_overflow_case" 5 69, 5 69 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.positive_overflow_case ;
    %pushi/vec4 20, 0, 32;
    %store/vec4 v00000259d1228ec0_0, 0, 32;
    %pushi/vec4 2, 0, 32;
    %store/vec4 v00000259d1227de0_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.positive_carry_case_p, S_00000259d1229260;
    %end;
S_00000259d122ab60 .scope function.void, "positive_overflow_max_case" "positive_overflow_max_case" 5 72, 5 72 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.positive_overflow_max_case ;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v00000259d1228ec0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v00000259d1227de0_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.positive_carry_case_p, S_00000259d1229260;
    %end;
S_00000259d12293f0 .scope function.void, "positive_overflow_scale_nan" "positive_overflow_scale_nan" 5 75, 5 75 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.positive_overflow_scale_nan ;
    %pushi/vec4 11, 0, 32;
    %store/vec4 v00000259d1228ec0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1227de0_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.positive_carry_case_p, S_00000259d1229260;
    %end;
S_00000259d1229580 .scope function.void, "scale_nan_case" "scale_nan_case" 5 102, 5 102 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.scale_nan_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_largest_scale, S_00000259d122c730;
    %end;
S_00000259d122a200 .scope function.void, "scale_nan_unusedcode_case" "scale_nan_unusedcode_case" 5 106, 5 106 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.scale_nan_unusedcode_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_largest_scale, S_00000259d122c730;
    %vpi_func 5 109 "$random" 32 {0 0 0};
    %pushi/vec4 32, 0, 32;
    %mod/s;
    %cast2;
    %store/vec4 v00000259d12282e0_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_unused_encode, S_00000259d122ea60;
    %end;
S_00000259d1229710 .scope function.void, "single_nan_case" "single_nan_case" 5 57, 5 57 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.single_nan_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %vpi_func 5 59 "$random" 32 {0 0 0};
    %pushi/vec4 32, 0, 32;
    %mod/s;
    %cast2;
    %store/vec4 v00000259d12282e0_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_unused_encode, S_00000259d122ea60;
    %end;
S_00000259d122acf0 .scope function.void, "single_zero_case" "single_zero_case" 5 49, 5 49 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.single_zero_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %vpi_func 5 51 "$random" 32 {0 0 0};
    %pushi/vec4 32, 0, 32;
    %mod/s;
    %cast2;
    %store/vec4 v00000259d1227700_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_zero, S_00000259d122e8d0;
    %end;
S_00000259d122ae80 .scope function.void, "small_case" "small_case" 5 37, 5 37 0, S_00000259d12261e0;
 .timescale -9 -12;
TD_tb_mx_int8_sum.drv.small_case ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.randomize, S_00000259d122a840;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_all_small_elements, S_00000259d122cbe0;
    %end;
S_00000259d122a070 .scope module, "vector_in" "t_mx_int8_vector" 5 17, 3 11 0, S_00000259d12261e0;
 .timescale 0 0;
    .port_info 0 /OUTPUT 8 "scale";
    .port_info 1 /OUTPUT 256 "elements";
P_00000259d11872a0 .param/l "largest_scale" 1 3 15, C4<11111111>;
P_00000259d11872d8 .param/l "unused_code" 1 3 14, C4<10000000>;
P_00000259d1187310 .param/l "zero_scale" 1 3 16, C4<00000000>;
v00000259d12281a0 .array "elements", 0 31, 7 0;
v00000259d1227f20_0 .var "scale", 7 0;
v00000259d1227160_0 .var "zero_num", 5 0;
S_00000259d1229a30 .scope function.void, "post_randomize" "post_randomize" 3 20, 3 20 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.post_randomize ;
    %pushi/vec4 0, 0, 6;
    %store/vec4 v00000259d1227160_0, 0, 6;
    %fork t_41, S_00000259d122a520;
    %jmp t_40;
    .scope S_00000259d122a520;
t_41 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1227e80_0, 0, 32;
T_73.76 ;
    %load/vec4 v00000259d1227e80_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_73.77, 5;
    %ix/getv/s 4, v00000259d1227e80_0;
    %load/vec4a v00000259d12281a0, 4;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_73.78, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1227160_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v00000259d1227160_0, 0, 6;
T_73.78 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1227e80_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1227e80_0, 0, 32;
    %jmp T_73.76;
T_73.77 ;
    %end;
    .scope S_00000259d1229a30;
t_40 %join;
    %end;
S_00000259d122a520 .scope begin, "$ivl_foreach0" "$ivl_foreach0" 3 22, 3 22 0, S_00000259d1229a30;
 .timescale 0 0;
v00000259d1227e80_0 .var/2s "i", 31 0;
S_00000259d122a840 .scope function.void, "randomize" "randomize" 3 29, 3 29 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.randomize ;
    %vpi_func 3 30 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %store/vec4 v00000259d1227f20_0, 0, 8;
    %fork t_43, S_00000259d1229d50;
    %jmp t_42;
    .scope S_00000259d1229d50;
t_43 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12278e0_0, 0, 32;
T_74.80 ;
    %load/vec4 v00000259d12278e0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_74.81, 5;
    %vpi_func 3 32 "$random" 32 {0 0 0};
    %pushi/vec4 256, 0, 32;
    %mod/s;
    %pad/s 8;
    %ix/getv/s 4, v00000259d12278e0_0;
    %store/vec4a v00000259d12281a0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d12278e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d12278e0_0, 0, 32;
    %jmp T_74.80;
T_74.81 ;
    %end;
    .scope S_00000259d122a840;
t_42 %join;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.post_randomize, S_00000259d1229a30;
    %end;
S_00000259d1229d50 .scope begin, "$ivl_foreach1" "$ivl_foreach1" 3 31, 3 31 0, S_00000259d122a840;
 .timescale 0 0;
v00000259d12278e0_0 .var/2s "i", 31 0;
S_00000259d122a9d0 .scope function.void, "set_all_big_elements" "set_all_big_elements" 3 64, 3 64 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.set_all_big_elements ;
    %fork t_45, S_00000259d1229ee0;
    %jmp t_44;
    .scope S_00000259d1229ee0;
t_45 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12286a0_0, 0, 32;
T_75.82 ;
    %load/vec4 v00000259d12286a0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_75.83, 5;
    %ix/getv/s 4, v00000259d12286a0_0;
    %load/vec4a v00000259d12281a0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_75.84, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d12286a0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
    %jmp T_75.85;
T_75.84 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d12286a0_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
T_75.85 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d12286a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d12286a0_0, 0, 32;
    %jmp T_75.82;
T_75.83 ;
    %end;
    .scope S_00000259d122a9d0;
t_44 %join;
    %end;
S_00000259d1229ee0 .scope begin, "$ivl_foreach5" "$ivl_foreach5" 3 65, 3 65 0, S_00000259d122a9d0;
 .timescale 0 0;
v00000259d12286a0_0 .var/2s "i", 31 0;
S_00000259d122d6d0 .scope function.void, "set_all_negative" "set_all_negative" 3 42, 3 42 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.set_all_negative ;
    %fork t_47, S_00000259d122d090;
    %jmp t_46;
    .scope S_00000259d122d090;
t_47 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1228740_0, 0, 32;
T_76.86 ;
    %load/vec4 v00000259d1228740_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_76.87, 5;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d1228740_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1228740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1228740_0, 0, 32;
    %jmp T_76.86;
T_76.87 ;
    %end;
    .scope S_00000259d122d6d0;
t_46 %join;
    %end;
S_00000259d122d090 .scope begin, "$ivl_foreach3" "$ivl_foreach3" 3 43, 3 43 0, S_00000259d122d6d0;
 .timescale 0 0;
v00000259d1228740_0 .var/2s "i", 31 0;
S_00000259d122dd10 .scope function.void, "set_all_positive" "set_all_positive" 3 37, 3 37 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.set_all_positive ;
    %fork t_49, S_00000259d122db80;
    %jmp t_48;
    .scope S_00000259d122db80;
t_49 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1228060_0, 0, 32;
T_77.88 ;
    %load/vec4 v00000259d1228060_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_77.89, 5;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d1228060_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1228060_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1228060_0, 0, 32;
    %jmp T_77.88;
T_77.89 ;
    %end;
    .scope S_00000259d122dd10;
t_48 %join;
    %end;
S_00000259d122db80 .scope begin, "$ivl_foreach2" "$ivl_foreach2" 3 38, 3 38 0, S_00000259d122dd10;
 .timescale 0 0;
v00000259d1228060_0 .var/2s "i", 31 0;
S_00000259d122cbe0 .scope function.void, "set_all_small_elements" "set_all_small_elements" 3 55, 3 55 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.set_all_small_elements ;
    %fork t_51, S_00000259d122d9f0;
    %jmp t_50;
    .scope S_00000259d122d9f0;
t_51 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1227660_0, 0, 32;
T_78.90 ;
    %load/vec4 v00000259d1227660_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_78.91, 5;
    %ix/getv/s 4, v00000259d1227660_0;
    %load/vec4a v00000259d12281a0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_78.92, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d1227660_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
    %jmp T_78.93;
T_78.92 ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d1227660_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
T_78.93 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1227660_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1227660_0, 0, 32;
    %jmp T_78.90;
T_78.91 ;
    %end;
    .scope S_00000259d122cbe0;
t_50 %join;
    %end;
S_00000259d122d9f0 .scope begin, "$ivl_foreach4" "$ivl_foreach4" 3 56, 3 56 0, S_00000259d122cbe0;
 .timescale 0 0;
v00000259d1227660_0 .var/2s "i", 31 0;
S_00000259d122c280 .scope function.void, "set_all_unused_code" "set_all_unused_code" 3 106, 3 106 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.set_all_unused_code ;
    %fork t_53, S_00000259d122ca50;
    %jmp t_52;
    .scope S_00000259d122ca50;
t_53 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1227ac0_0, 0, 32;
T_79.94 ;
    %load/vec4 v00000259d1227ac0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_79.95, 5;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v00000259d1227ac0_0;
    %store/vec4a v00000259d12281a0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1227ac0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1227ac0_0, 0, 32;
    %jmp T_79.94;
T_79.95 ;
    %end;
    .scope S_00000259d122c280;
t_52 %join;
    %end;
S_00000259d122ca50 .scope begin, "$ivl_foreach7" "$ivl_foreach7" 3 107, 3 107 0, S_00000259d122c280;
 .timescale 0 0;
v00000259d1227ac0_0 .var/2s "i", 31 0;
S_00000259d122d860 .scope function.void, "set_all_zero" "set_all_zero" 3 97, 3 97 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.set_all_zero ;
    %fork t_55, S_00000259d122c8c0;
    %jmp t_54;
    .scope S_00000259d122c8c0;
t_55 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1227b60_0, 0, 32;
T_80.96 ;
    %load/vec4 v00000259d1227b60_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_80.97, 5;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v00000259d1227b60_0;
    %store/vec4a v00000259d12281a0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1227b60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1227b60_0, 0, 32;
    %jmp T_80.96;
T_80.97 ;
    %end;
    .scope S_00000259d122d860;
t_54 %join;
    %end;
S_00000259d122c8c0 .scope begin, "$ivl_foreach6" "$ivl_foreach6" 3 98, 3 98 0, S_00000259d122d860;
 .timescale 0 0;
v00000259d1227b60_0 .var/2s "i", 31 0;
S_00000259d122c410 .scope function.void, "set_big_element" "set_big_element" 3 73, 3 73 0, S_00000259d122a070;
 .timescale 0 0;
v00000259d1228560_0 .var/2s "index", 31 0;
TD_tb_mx_int8_sum.drv.vector_in.set_big_element ;
    %ix/getv/s 4, v00000259d1228560_0;
    %load/vec4a v00000259d12281a0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_81.98, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d1228560_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
    %jmp T_81.99;
T_81.98 ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d1228560_0;
    %flag_mov 8, 4;
    %ix/load 5, 6, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
T_81.99 ;
    %end;
S_00000259d122dea0 .scope function.void, "set_big_negative" "set_big_negative" 3 85, 3 85 0, S_00000259d122a070;
 .timescale 0 0;
v00000259d1227c00_0 .var/2s "index", 31 0;
TD_tb_mx_int8_sum.drv.vector_in.set_big_negative ;
    %load/vec4 v00000259d1227c00_0;
    %store/vec4 v00000259d1227d40_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_negative_element, S_00000259d122cd70;
    %load/vec4 v00000259d1227c00_0;
    %store/vec4 v00000259d1228560_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_big_element, S_00000259d122c410;
    %end;
S_00000259d122c5a0 .scope function.void, "set_big_positive" "set_big_positive" 3 80, 3 80 0, S_00000259d122a070;
 .timescale 0 0;
v00000259d1227980_0 .var/2s "index", 31 0;
TD_tb_mx_int8_sum.drv.vector_in.set_big_positive ;
    %load/vec4 v00000259d1227980_0;
    %store/vec4 v00000259d1228240_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_positive_element, S_00000259d122cf00;
    %load/vec4 v00000259d1227980_0;
    %store/vec4 v00000259d1228560_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_big_element, S_00000259d122c410;
    %end;
S_00000259d122c730 .scope function.void, "set_largest_scale" "set_largest_scale" 3 115, 3 115 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.set_largest_scale ;
    %pushi/vec4 255, 0, 8;
    %store/vec4 v00000259d1227f20_0, 0, 8;
    %end;
S_00000259d122cd70 .scope function.void, "set_negative_element" "set_negative_element" 3 51, 3 51 0, S_00000259d122a070;
 .timescale 0 0;
v00000259d1227d40_0 .var/2s "index", 31 0;
TD_tb_mx_int8_sum.drv.vector_in.set_negative_element ;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v00000259d1227d40_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
    %end;
S_00000259d122cf00 .scope function.void, "set_positive_element" "set_positive_element" 3 47, 3 47 0, S_00000259d122a070;
 .timescale 0 0;
v00000259d1228240_0 .var/2s "index", 31 0;
TD_tb_mx_int8_sum.drv.vector_in.set_positive_element ;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v00000259d1228240_0;
    %flag_mov 8, 4;
    %ix/load 5, 7, 0;
    %flag_set/imm 4, 0;
    %flag_or 4, 8;
    %store/vec4a v00000259d12281a0, 4, 5;
    %end;
S_00000259d122c0f0 .scope function.void, "set_sum_negative_carry" "set_sum_negative_carry" 3 127, 3 127 0, S_00000259d122a070;
 .timescale 0 0;
v00000259d1228100_0 .var/2s "big_negative_num", 31 0;
v00000259d12272a0_0 .var/2s "is_small_scale", 31 0;
TD_tb_mx_int8_sum.drv.vector_in.set_sum_negative_carry ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_largest_scale, S_00000259d122c730;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d1227f20_0;
    %load/vec4 v00000259d12272a0_0;
    %pad/u 8;
    %sub;
    %store/vec4 v00000259d1227f20_0, 0, 8;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_all_small_elements, S_00000259d122cbe0;
    %fork t_57, S_00000259d122d220;
    %jmp t_56;
    .scope S_00000259d122d220;
t_57 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12270c0_0, 0, 32;
T_87.100 ;
    %load/vec4 v00000259d12270c0_0;
    %load/vec4 v00000259d1228100_0;
    %cmp/s;
    %jmp/0xz T_87.101, 5;
    %load/vec4 v00000259d12270c0_0;
    %store/vec4 v00000259d1227c00_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_big_negative, S_00000259d122dea0;
    %load/vec4 v00000259d12270c0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d12270c0_0, 0, 32;
    %jmp T_87.100;
T_87.101 ;
    %end;
    .scope S_00000259d122c0f0;
t_56 %join;
    %end;
S_00000259d122d220 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 131, 3 131 0, S_00000259d122c0f0;
 .timescale 0 0;
v00000259d12270c0_0 .var/2s "i", 31 0;
S_00000259d122d3b0 .scope function.void, "set_sum_positive_carry" "set_sum_positive_carry" 3 119, 3 119 0, S_00000259d122a070;
 .timescale 0 0;
v00000259d1228ba0_0 .var/2s "big_positive_num", 31 0;
v00000259d12284c0_0 .var/2s "is_small_scale", 31 0;
TD_tb_mx_int8_sum.drv.vector_in.set_sum_positive_carry ;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_largest_scale, S_00000259d122c730;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d1227f20_0;
    %load/vec4 v00000259d12284c0_0;
    %pad/u 8;
    %sub;
    %store/vec4 v00000259d1227f20_0, 0, 8;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_all_small_elements, S_00000259d122cbe0;
    %fork t_59, S_00000259d122d540;
    %jmp t_58;
    .scope S_00000259d122d540;
t_59 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1227520_0, 0, 32;
T_88.102 ;
    %load/vec4 v00000259d1227520_0;
    %load/vec4 v00000259d1228ba0_0;
    %cmp/s;
    %jmp/0xz T_88.103, 5;
    %load/vec4 v00000259d1227520_0;
    %store/vec4 v00000259d1227980_0, 0, 32;
    %callf/void TD_tb_mx_int8_sum.drv.vector_in.set_big_positive, S_00000259d122c5a0;
    %load/vec4 v00000259d1227520_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d1227520_0, 0, 32;
    %jmp T_88.102;
T_88.103 ;
    %end;
    .scope S_00000259d122d3b0;
t_58 %join;
    %end;
S_00000259d122d540 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 123, 3 123 0, S_00000259d122d3b0;
 .timescale 0 0;
v00000259d1227520_0 .var/2s "i", 31 0;
S_00000259d122ea60 .scope function.void, "set_unused_encode" "set_unused_encode" 3 102, 3 102 0, S_00000259d122a070;
 .timescale 0 0;
v00000259d12282e0_0 .var/2s "elem_index", 31 0;
TD_tb_mx_int8_sum.drv.vector_in.set_unused_encode ;
    %pushi/vec4 128, 0, 8;
    %ix/getv/s 4, v00000259d12282e0_0;
    %store/vec4a v00000259d12281a0, 4, 0;
    %end;
S_00000259d122e8d0 .scope function.void, "set_zero" "set_zero" 3 90, 3 90 0, S_00000259d122a070;
 .timescale 0 0;
v00000259d1227700_0 .var/2s "elem_index", 31 0;
TD_tb_mx_int8_sum.drv.vector_in.set_zero ;
    %ix/getv/s 4, v00000259d1227700_0;
    %load/vec4a v00000259d12281a0, 4;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_90.104, 4;
    %pushi/vec4 0, 0, 8;
    %ix/getv/s 4, v00000259d1227700_0;
    %store/vec4a v00000259d12281a0, 4, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1227160_0;
    %pushi/vec4 1, 0, 6;
    %add;
    %store/vec4 v00000259d1227160_0, 0, 6;
T_90.104 ;
    %end;
S_00000259d122f6e0 .scope function.void, "set_zero_scale" "set_zero_scale" 3 111, 3 111 0, S_00000259d122a070;
 .timescale 0 0;
TD_tb_mx_int8_sum.drv.vector_in.set_zero_scale ;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v00000259d1227f20_0, 0, 8;
    %end;
S_00000259d122ed80 .scope module, "mon" "mx_int8_sum_mon" 4 36, 6 2 0, S_00000259d11c0f20;
 .timescale -9 -12;
    .port_info 0 /INPUT 8 "i_scale";
    .port_info 1 /INPUT 256 "i_mxint8_elements";
    .port_info 2 /INPUT 32 "i_float32_dut";
    .port_info 3 /INPUT 1 "i_overflow_dut";
    .port_info 4 /INPUT 32 "i_float32_ref";
    .port_info 5 /INPUT 1 "i_overflow_ref";
    .port_info 6 /INPUT 1 "clk";
v00000259d1230ed0_0 .net "clk", 0 0, v00000259d1235f30_0;  alias, 1 drivers
v00000259d1231290_0 .var "float32_conv", 31 0;
v00000259d1230f70_0 .net "i_float32_dut", 31 0, o00000259d11c58b8;  alias, 0 drivers
v00000259d1230a70_0 .net "i_float32_ref", 31 0, L_00000259d1235c10;  alias, 1 drivers
v00000259d1230430 .array "i_mxint8_elements", 0 31;
v00000259d1230430_0 .net v00000259d1230430 0, 7 0, L_00000259d129cf70; 1 drivers
v00000259d1230430_1 .net v00000259d1230430 1, 7 0, L_00000259d129c5d0; 1 drivers
v00000259d1230430_2 .net v00000259d1230430 2, 7 0, L_00000259d129c3a0; 1 drivers
v00000259d1230430_3 .net v00000259d1230430 3, 7 0, L_00000259d129caa0; 1 drivers
v00000259d1230430_4 .net v00000259d1230430 4, 7 0, L_00000259d129df30; 1 drivers
v00000259d1230430_5 .net v00000259d1230430 5, 7 0, L_00000259d129d8a0; 1 drivers
v00000259d1230430_6 .net v00000259d1230430 6, 7 0, L_00000259d129c8e0; 1 drivers
v00000259d1230430_7 .net v00000259d1230430 7, 7 0, L_00000259d129dd00; 1 drivers
v00000259d1230430_8 .net v00000259d1230430 8, 7 0, L_00000259d129d050; 1 drivers
v00000259d1230430_9 .net v00000259d1230430 9, 7 0, L_00000259d129d830; 1 drivers
v00000259d1230430_10 .net v00000259d1230430 10, 7 0, L_00000259d129d2f0; 1 drivers
v00000259d1230430_11 .net v00000259d1230430 11, 7 0, L_00000259d129cf00; 1 drivers
v00000259d1230430_12 .net v00000259d1230430 12, 7 0, L_00000259d129cb10; 1 drivers
v00000259d1230430_13 .net v00000259d1230430 13, 7 0, L_00000259d129d910; 1 drivers
v00000259d1230430_14 .net v00000259d1230430 14, 7 0, L_00000259d129d980; 1 drivers
v00000259d1230430_15 .net v00000259d1230430 15, 7 0, L_00000259d129cfe0; 1 drivers
v00000259d1230430_16 .net v00000259d1230430 16, 7 0, L_00000259d129d210; 1 drivers
v00000259d1230430_17 .net v00000259d1230430 17, 7 0, L_00000259d129dc90; 1 drivers
v00000259d1230430_18 .net v00000259d1230430 18, 7 0, L_00000259d129c800; 1 drivers
v00000259d1230430_19 .net v00000259d1230430 19, 7 0, L_00000259d129cb80; 1 drivers
v00000259d1230430_20 .net v00000259d1230430 20, 7 0, L_00000259d129d0c0; 1 drivers
v00000259d1230430_21 .net v00000259d1230430 21, 7 0, L_00000259d129cdb0; 1 drivers
v00000259d1230430_22 .net v00000259d1230430 22, 7 0, L_00000259d129d670; 1 drivers
v00000259d1230430_23 .net v00000259d1230430 23, 7 0, L_00000259d129c950; 1 drivers
v00000259d1230430_24 .net v00000259d1230430 24, 7 0, L_00000259d129ccd0; 1 drivers
v00000259d1230430_25 .net v00000259d1230430 25, 7 0, L_00000259d129c410; 1 drivers
v00000259d1230430_26 .net v00000259d1230430 26, 7 0, L_00000259d129dbb0; 1 drivers
v00000259d1230430_27 .net v00000259d1230430 27, 7 0, L_00000259d129ca30; 1 drivers
v00000259d1230430_28 .net v00000259d1230430 28, 7 0, L_00000259d129ce90; 1 drivers
v00000259d1230430_29 .net v00000259d1230430 29, 7 0, L_00000259d129d360; 1 drivers
v00000259d1230430_30 .net v00000259d1230430 30, 7 0, L_00000259d129cbf0; 1 drivers
v00000259d1230430_31 .net v00000259d1230430 31, 7 0, L_00000259d129c480; 1 drivers
v00000259d1231650_0 .net "i_overflow_dut", 0 0, o00000259d11c5f18;  alias, 0 drivers
v00000259d1230750_0 .net "i_overflow_ref", 0 0, L_00000259d11c0190;  alias, 1 drivers
v00000259d1231fb0_0 .net "i_scale", 7 0, v00000259d1227f20_0;  alias, 1 drivers
v00000259d12318d0_0 .var/2s "transection_id", 31 0;
E_00000259d119c810 .event negedge, v00000259d1228f60_0;
S_00000259d122fa00 .scope autofunction.real, "INT8_to_shortreal" "INT8_to_shortreal" 6 217, 6 217 0, S_00000259d122ed80;
 .timescale -9 -12;
; Variable INT8_to_shortreal is REAL return value of scope S_00000259d122fa00
v00000259d1227fc0_0 .var/real "decimal_data", 0 0;
v00000259d1228380_0 .var "element", 7 0;
v00000259d1227200_0 .var/real "scale", 0 0;
TD_tb_mx_int8_sum.mon.INT8_to_shortreal ;
    %pushi/real 1073741824, 4066; load=1.00000
    %store/real v00000259d1227200_0;
    %pushi/real 0, 4065; load=0.00000
    %store/real v00000259d1227fc0_0;
    %fork t_61, S_00000259d122f3c0;
    %jmp t_60;
    .scope S_00000259d122f3c0;
t_61 ;
    %pushi/vec4 6, 0, 32;
    %store/vec4 v00000259d1227a20_0, 0, 32;
T_92.106 ;
    %load/vec4 v00000259d1227a20_0;
    %cmpi/s 0, 0, 32;
    %flag_inv 5; GE is !LT
    %jmp/0xz T_92.107, 5;
    %load/vec4 v00000259d1228380_0;
    %load/vec4 v00000259d1227a20_0;
    %part/s 1;
    %cmpi/e 1, 0, 1;
    %jmp/0xz  T_92.108, 4;
    ; show_stmt_assign_real: Get l-value for compressed += operand
    %load/real v00000259d1227fc0_0;
    %load/real v00000259d1227200_0;
    %add/wr;
    %store/real v00000259d1227fc0_0;
T_92.108 ;
    %load/real v00000259d1227200_0;
    %pushi/vec4 2, 0, 32;
    %cvt/rv/s;
    %div/wr;
    %store/real v00000259d1227200_0;
    %load/vec4 v00000259d1227a20_0;
    %subi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d1227a20_0, 0, 32;
    %jmp T_92.106;
T_92.107 ;
    %end;
    .scope S_00000259d122fa00;
t_60 %join;
    %load/vec4 v00000259d1228380_0;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_92.110, 8;
    ; show_stmt_assign_real: Get l-value for compressed -= operand
    %load/real v00000259d1227fc0_0;
    %pushi/real 1073741824, 4067; load=2.00000
    %sub/wr;
    %store/real v00000259d1227fc0_0;
T_92.110 ;
    %load/real v00000259d1227fc0_0;
    %ret/real 0; Assign to INT8_to_shortreal
    %disable/flow S_00000259d122fa00;
    %end;
S_00000259d122f3c0 .scope autobegin, "$ivl_for_loop4" "$ivl_for_loop4" 6 223, 6 223 0, S_00000259d122fa00;
 .timescale -9 -12;
v00000259d1227a20_0 .var/2s "i", 31 0;
S_00000259d122e740 .scope autofunction.vec2.u32, "abs_int" "abs_int" 6 160, 6 160 0, S_00000259d122ed80;
 .timescale -9 -12;
; Variable abs_int is bool return value of scope S_00000259d122e740
v00000259d1228420_0 .var/2s "d_in", 31 0;
TD_tb_mx_int8_sum.mon.abs_int ;
    %load/vec4 v00000259d1228420_0;
    %cmpi/s 0, 0, 32;
    %flag_inv 5; GE is !LT
    %jmp/0xz  T_93.112, 5;
    %load/vec4 v00000259d1228420_0;
    %ret/vec4 0, 0, 32;  Assign to abs_int (store_vec4_to_lval)
    %disable/flow S_00000259d122e740;
    %jmp T_93.113;
T_93.112 ;
    %load/vec4 v00000259d1228420_0;
    %muli 4294967295, 0, 32;
    %cast2;
    %ret/vec4 0, 0, 32;  Assign to abs_int (store_vec4_to_lval)
    %disable/flow S_00000259d122e740;
T_93.113 ;
    %end;
S_00000259d122f870 .scope autofunction.real, "abs_shortreal" "abs_shortreal" 6 166, 6 166 0, S_00000259d122ed80;
 .timescale -9 -12;
; Variable abs_shortreal is REAL return value of scope S_00000259d122f870
v00000259d12287e0_0 .var/real "d_in", 0 0;
TD_tb_mx_int8_sum.mon.abs_shortreal ;
    %pushi/real 0, 4065; load=0.00000
    %load/real v00000259d12287e0_0;
    %cmp/wr;
    %flag_or 5, 4;
    %jmp/0xz  T_94.114, 5;
    %load/real v00000259d12287e0_0;
    %ret/real 0; Assign to abs_shortreal
    %disable/flow S_00000259d122f870;
    %jmp T_94.115;
T_94.114 ;
    %pushi/real 1073741824, 20450; load=-1.00000
    %load/real v00000259d12287e0_0;
    %mul/wr;
    %ret/real 0; Assign to abs_shortreal
    %disable/flow S_00000259d122f870;
T_94.115 ;
    %end;
S_00000259d122fb90 .scope autofunction.vec2.s1, "is_overflow" "is_overflow" 6 154, 6 154 0, S_00000259d122ed80;
 .timescale -9 -12;
; Variable is_overflow is bool return value of scope S_00000259d122fb90
v00000259d1228880_0 .var/real "scale", 0 0;
TD_tb_mx_int8_sum.mon.is_overflow ;
    %pushi/real 1073741824, 4073; load=128.000
    %load/real v00000259d1228880_0;
    %cmp/wr;
    %flag_or 5, 4;
    %jmp/0xz  T_95.116, 5;
    %pushi/vec4 1, 0, 1;
    %ret/vec4 0, 0, 1;  Assign to is_overflow (store_vec4_to_lval)
    %disable/flow S_00000259d122fb90;
    %jmp T_95.117;
T_95.116 ;
    %pushi/vec4 0, 0, 1;
    %ret/vec4 0, 0, 1;  Assign to is_overflow (store_vec4_to_lval)
    %disable/flow S_00000259d122fb90;
T_95.117 ;
    %end;
S_00000259d122f550 .scope autofunction.real, "itoshortreal" "itoshortreal" 6 123, 6 123 0, S_00000259d122ed80;
 .timescale -9 -12;
v00000259d1228920_0 .var/2s "int_i", 31 0;
; Variable itoshortreal is REAL return value of scope S_00000259d122f550
v00000259d1228a60_0 .var/real "sr_o", 0 0;
TD_tb_mx_int8_sum.mon.itoshortreal ;
    %pushi/real 0, 4065; load=0.00000
    %store/real v00000259d1228a60_0;
T_96.118 ;
    %load/vec4 v00000259d1228920_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz T_96.119, 4;
    %load/vec4 v00000259d1228920_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz  T_96.120, 5;
    ; show_stmt_assign_real: Get l-value for compressed += operand
    %load/real v00000259d1228a60_0;
    %pushi/real 1073741824, 4066; load=1.00000
    %add/wr;
    %store/real v00000259d1228a60_0;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d1228920_0;
    %pushi/vec4 1, 0, 32;
    %sub;
    %cast2;
    %store/vec4 v00000259d1228920_0, 0, 32;
    %jmp T_96.121;
T_96.120 ;
    ; show_stmt_assign_real: Get l-value for compressed -= operand
    %load/real v00000259d1228a60_0;
    %pushi/real 1073741824, 4066; load=1.00000
    %sub/wr;
    %store/real v00000259d1228a60_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1228920_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1228920_0, 0, 32;
T_96.121 ;
    %jmp T_96.118;
T_96.119 ;
    %load/real v00000259d1228a60_0;
    %ret/real 0; Assign to itoshortreal
    %disable/flow S_00000259d122f550;
    %end;
S_00000259d122ebf0 .scope autofunction.real, "pow2" "pow2" 6 139, 6 139 0, S_00000259d122ed80;
 .timescale -9 -12;
v00000259d12277a0_0 .var/real "exp_i", 0 0;
; Variable pow2 is REAL return value of scope S_00000259d122ebf0
v00000259d1227340_0 .var/real "pow_o", 0 0;
TD_tb_mx_int8_sum.mon.pow2 ;
    %pushi/real 1073741824, 4066; load=1.00000
    %store/real v00000259d1227340_0;
T_97.122 ;
    %load/real v00000259d12277a0_0;
    %pushi/vec4 0, 0, 32;
    %cvt/rv/s;
    %cmp/wr;
    %flag_inv 4;
    %flag_get/vec4 4;
    %flag_set/vec4 8;
    %jmp/0xz T_97.123, 8;
    %pushi/vec4 0, 0, 32;
    %cvt/rv/s;
    %load/real v00000259d12277a0_0;
    %cmp/wr;
    %jmp/0xz  T_97.124, 5;
    ; show_stmt_assign_real: Get l-value for compressed *= operand
    %load/real v00000259d1227340_0;
    %pushi/real 1073741824, 4067; load=2.00000
    %mul/wr;
    %store/real v00000259d1227340_0;
    ; show_stmt_assign_real: Get l-value for compressed -= operand
    %load/real v00000259d12277a0_0;
    %pushi/real 1073741824, 4066; load=1.00000
    %sub/wr;
    %store/real v00000259d12277a0_0;
    %jmp T_97.125;
T_97.124 ;
    ; show_stmt_assign_real: Get l-value for compressed /= operand
    %load/real v00000259d1227340_0;
    %pushi/real 1073741824, 4067; load=2.00000
    %div/wr;
    %store/real v00000259d1227340_0;
    ; show_stmt_assign_real: Get l-value for compressed += operand
    %load/real v00000259d12277a0_0;
    %pushi/real 1073741824, 4066; load=1.00000
    %add/wr;
    %store/real v00000259d12277a0_0;
T_97.125 ;
    %jmp T_97.122;
T_97.123 ;
    %load/real v00000259d1227340_0;
    %ret/real 0; Assign to pow2
    %disable/flow S_00000259d122ebf0;
    %end;
S_00000259d122ef10 .scope function.void, "print_dut_out" "print_dut_out" 6 52, 6 52 0, S_00000259d122ed80;
 .timescale -9 -12;
TD_tb_mx_int8_sum.mon.print_dut_out ;
    %vpi_call/w 6 53 "$display", "FP32 DUT SUM OUTPUT:\012%b   %f", v00000259d1230f70_0, v00000259d1230f70_0 {0 0 0};
    %end;
S_00000259d122f0a0 .scope function.vec4.s32, "print_input_vector" "print_input_vector" 6 58, 6 58 0, S_00000259d122ed80;
 .timescale -9 -12;
v00000259d12275c0_0 .var/2s "carry_neg", 31 0;
v00000259d1231a10_0 .var/2s "carry_num", 31 0;
v00000259d1231330_0 .var/2s "ceil_sum", 31 0;
v00000259d1230570_0 .var/real "ideal_sum", 0 0;
v00000259d12310b0_0 .var/real "mantissa_sum", 0 0;
v00000259d1231470_0 .var/real "mantissa_sum_dec", 0 0;
v00000259d1231830_0 .var/real "mantissa_sum_raw", 0 0;
v00000259d1230890_0 .var/2u "overflow", 0 0;
; Variable print_input_vector is vec4 return value of scope S_00000259d122f0a0
v00000259d1231970_0 .var "scale_E8", 7 0;
v00000259d1231f10_0 .var/real "scale_dec", 0 0;
v00000259d1230cf0_0 .var/real "scale_r", 0 0;
TD_tb_mx_int8_sum.mon.print_input_vector ;
    %pushi/real 0, 4065; load=0.00000
    %store/real v00000259d12310b0_0;
    %alloc S_00000259d122e100;
    %load/vec4 v00000259d1231fb0_0;
    %store/vec4 v00000259d1231510_0, 0, 8;
    %callf/real TD_tb_mx_int8_sum.mon.scale_to_shortreal, S_00000259d122e100;
    %free S_00000259d122e100;
    %store/real v00000259d1230cf0_0;
    %alloc S_00000259d122fb90;
    %load/real v00000259d1230cf0_0;
    %store/real v00000259d1228880_0;
    %callf/vec4 TD_tb_mx_int8_sum.mon.is_overflow, S_00000259d122fb90;
    %free S_00000259d122fb90;
    %store/vec4 v00000259d1230890_0, 0, 1;
    %pushi/real 1073741824, 4067; load=2.00000
    %vpi_func/r 6 76 "$pow", W<0,r>, v00000259d1230cf0_0 {0 1 0};
    %store/real v00000259d1231f10_0;
    %vpi_call/w 6 77 "$display", "INPUT DATA: \012scale:\012%b   %f\012%f    NaN: %b", v00000259d1231fb0_0, v00000259d1230cf0_0, v00000259d1231f10_0, v00000259d1230890_0 {0 0 0};
    %vpi_call/w 6 78 "$display", "elements:" {0 0 0};
    %fork t_63, S_00000259d122f230;
    %jmp t_62;
    .scope S_00000259d122f230;
t_63 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1227480_0, 0, 32;
T_99.126 ;
    %load/vec4 v00000259d1227480_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_99.127, 5;
    %fork t_65, S_00000259d122fd20;
    %jmp t_64;
    .scope S_00000259d122fd20;
t_65 ;
    %alloc S_00000259d122fa00;
    %ix/getv/s 4, v00000259d1227480_0;
    %load/vec4a v00000259d1230430, 4;
    %store/vec4 v00000259d1228380_0, 0, 8;
    %callf/real TD_tb_mx_int8_sum.mon.INT8_to_shortreal, S_00000259d122fa00;
    %free S_00000259d122fa00;
    %store/real v00000259d1228e20_0;
    ; show_stmt_assign_real: Get l-value for compressed += operand
    %load/real v00000259d12310b0_0;
    %load/real v00000259d1228e20_0;
    %add/wr;
    %store/real v00000259d12310b0_0;
    %load/real v00000259d1231f10_0;
    %load/real v00000259d1228e20_0;
    %mul/wr;
    %vpi_call/w 6 83 "$display", "%b ,  %f  ,  %f", &A<v00000259d1230430, v00000259d1227480_0 >, v00000259d1228e20_0, W<0,r> {0 1 0};
    %end;
    .scope S_00000259d122f230;
t_64 %join;
    %load/vec4 v00000259d1227480_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d1227480_0, 0, 32;
    %jmp T_99.126;
T_99.127 ;
    %end;
    .scope S_00000259d122f0a0;
t_62 %join;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12275c0_0, 0, 32;
    %load/real v00000259d12310b0_0;
    %store/real v00000259d1231830_0;
T_99.128 ;
    %alloc S_00000259d122f870;
    %load/real v00000259d12310b0_0;
    %store/real v00000259d12287e0_0;
    %callf/real TD_tb_mx_int8_sum.mon.abs_shortreal, S_00000259d122f870;
    %free S_00000259d122f870;
    %pushi/real 2130706432, 4065; load=0.992188
    %cmp/wr;
    %flag_or 5, 4;
    %flag_get/vec4 5;
    %jmp/0 T_99.130, 5;
    %load/real v00000259d12310b0_0;
    %pushi/real 0, 4065; load=0.00000
    %cmp/wr;
    %flag_inv 4;
    %flag_get/vec4 4;
    %and;
T_99.130;
    %flag_set/vec4 8;
    %jmp/0xz T_99.129, 8;
    ; show_stmt_assign_real: Get l-value for compressed *= operand
    %load/real v00000259d12310b0_0;
    %pushi/real 1073741824, 4067; load=2.00000
    %mul/wr;
    %store/real v00000259d12310b0_0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d12275c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d12275c0_0, 0, 32;
    %jmp T_99.128;
T_99.129 ;
    %alloc S_00000259d122e420;
    %load/real v00000259d12310b0_0;
    %store/real v00000259d1230d90_0;
    %callf/vec4 TD_tb_mx_int8_sum.mon.shortreal_ceil_to_int, S_00000259d122e420;
    %free S_00000259d122e420;
    %store/vec4 v00000259d1231330_0, 0, 32;
    %alloc S_00000259d122e740;
    %load/vec4 v00000259d1231330_0;
    %store/vec4 v00000259d1228420_0, 0, 32;
    %callf/vec4 TD_tb_mx_int8_sum.mon.abs_int, S_00000259d122e740;
    %free S_00000259d122e740;
    %vpi_func 6 92 "$clog2" 32, S<0,vec4,s32> {1 0 0};
    %subi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d1231a10_0, 0, 32;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d1231a10_0;
    %load/vec4 v00000259d12275c0_0;
    %sub;
    %cast2;
    %store/vec4 v00000259d1231a10_0, 0, 32;
    ; show_stmt_assign_real: Get l-value for compressed += operand
    %load/real v00000259d1230cf0_0;
    %alloc S_00000259d122f550;
    %load/vec4 v00000259d1231a10_0;
    %store/vec4 v00000259d1228920_0, 0, 32;
    %callf/real TD_tb_mx_int8_sum.mon.itoshortreal, S_00000259d122f550;
    %free S_00000259d122f550;
    %add/wr;
    %store/real v00000259d1230cf0_0;
    %load/vec4 v00000259d1231fb0_0;
    %pad/u 32;
    %load/vec4 v00000259d1231a10_0;
    %add;
    %pad/u 8;
    %store/vec4 v00000259d1231970_0, 0, 8;
    %alloc S_00000259d122fb90;
    %load/real v00000259d1230cf0_0;
    %store/real v00000259d1228880_0;
    %callf/vec4 TD_tb_mx_int8_sum.mon.is_overflow, S_00000259d122fb90;
    %free S_00000259d122fb90;
    %store/vec4 v00000259d1230890_0, 0, 1;
    %pushi/real 1073741824, 4067; load=2.00000
    %vpi_func/r 6 98 "$pow", W<0,r>, v00000259d1230cf0_0 {0 1 0};
    %store/real v00000259d1231f10_0;
    %alloc S_00000259d122e5b0;
    %load/real v00000259d12310b0_0;
    %pushi/real 1073741824, 20450; load=-1.00000
    %load/vec4 v00000259d1231a10_0;
    %load/vec4 v00000259d12275c0_0;
    %add;
    %cvt/rv/s;
    %mul/wr;
    %cvt/vr 32;
    %store/vec4 v00000259d12309d0_0, 0, 32;
    %store/real v00000259d1231ab0_0;
    %callf/real TD_tb_mx_int8_sum.mon.shortreal_shift, S_00000259d122e5b0;
    %free S_00000259d122e5b0;
    %store/real v00000259d1231470_0;
    %load/real v00000259d12310b0_0;
    %load/real v00000259d1231f10_0;
    %mul/wr;
    %store/real v00000259d1230570_0;
    %vpi_call/w 6 104 "$display", "%e  ideal sum. %b:NaN  %f:raw sum dec", v00000259d1230570_0, v00000259d1230890_0, v00000259d1231830_0 {0 0 0};
    %vpi_call/w 6 105 "$display", "%b  :scale,  %f:mantissa_dec_ideal,  %f:scale,  %d:carry_num", v00000259d1231970_0, v00000259d1231470_0, v00000259d1230cf0_0, v00000259d1231a10_0 {0 0 0};
    %load/real v00000259d1230570_0;
    %cvt/vr 32;
    %ret/vec4 0, 0, 32;  Assign to print_input_vector (store_vec4_to_lval)
    %disable/flow S_00000259d122f0a0;
    %end;
S_00000259d122f230 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 6 79, 6 79 0, S_00000259d122f0a0;
 .timescale -9 -12;
v00000259d1227480_0 .var/2s "i", 31 0;
S_00000259d122fd20 .scope begin, "$unm_blk_55" "$unm_blk_55" 6 79, 6 79 0, S_00000259d122f230;
 .timescale -9 -12;
v00000259d1228e20_0 .var/real "element_r", 0 0;
S_00000259d122feb0 .scope function.void, "print_ref_out" "print_ref_out" 6 55, 6 55 0, S_00000259d122ed80;
 .timescale -9 -12;
TD_tb_mx_int8_sum.mon.print_ref_out ;
    %vpi_call/w 6 56 "$display", "FP32 REF SUM OUTPUT:\012%b   %f", v00000259d1230a70_0, v00000259d1230a70_0 {0 0 0};
    %end;
S_00000259d122e100 .scope autofunction.real, "scale_to_shortreal" "scale_to_shortreal" 6 204, 6 204 0, S_00000259d122ed80;
 .timescale -9 -12;
v00000259d1231150_0 .var/real "scale", 0 0;
v00000259d1231510_0 .var "scale_int", 7 0;
v00000259d12311f0_0 .var/real "scale_r", 0 0;
; Variable scale_to_shortreal is REAL return value of scope S_00000259d122e100
TD_tb_mx_int8_sum.mon.scale_to_shortreal ;
    %pushi/real 1073741824, 4066; load=1.00000
    %store/real v00000259d1231150_0;
    %pushi/real 0, 4065; load=0.00000
    %store/real v00000259d12311f0_0;
    %fork t_67, S_00000259d122e290;
    %jmp t_66;
    .scope S_00000259d122e290;
t_67 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1230930_0, 0, 32;
T_101.131 ;
    %load/vec4 v00000259d1230930_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_101.132, 5;
    %load/vec4 v00000259d1231510_0;
    %load/vec4 v00000259d1230930_0;
    %part/s 1;
    %cmpi/e 1, 0, 1;
    %jmp/0xz  T_101.133, 4;
    ; show_stmt_assign_real: Get l-value for compressed += operand
    %load/real v00000259d12311f0_0;
    %load/real v00000259d1231150_0;
    %add/wr;
    %store/real v00000259d12311f0_0;
T_101.133 ;
    %load/real v00000259d1231150_0;
    %pushi/real 1073741824, 4067; load=2.00000
    %mul/wr;
    %store/real v00000259d1231150_0;
    %load/vec4 v00000259d1230930_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d1230930_0, 0, 32;
    %jmp T_101.131;
T_101.132 ;
    %end;
    .scope S_00000259d122e100;
t_66 %join;
    %load/real v00000259d12311f0_0;
    %pushi/real 2130706432, 4072; load=127.000
    %sub/wr;
    %ret/real 0; Assign to scale_to_shortreal
    %disable/flow S_00000259d122e100;
    %end;
S_00000259d122e290 .scope autobegin, "$ivl_for_loop3" "$ivl_for_loop3" 6 210, 6 210 0, S_00000259d122e100;
 .timescale -9 -12;
v00000259d1230930_0 .var/2s "i", 31 0;
S_00000259d122e420 .scope autofunction.vec2.u32, "shortreal_ceil_to_int" "shortreal_ceil_to_int" 6 172, 6 172 0, S_00000259d122ed80;
 .timescale -9 -12;
v00000259d12315b0_0 .var/2s "int_o", 31 0;
; Variable shortreal_ceil_to_int is bool return value of scope S_00000259d122e420
v00000259d1230d90_0 .var/real "shortreal_i", 0 0;
TD_tb_mx_int8_sum.mon.shortreal_ceil_to_int ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12315b0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %cvt/rv/s;
    %load/real v00000259d1230d90_0;
    %cmp/wr;
    %flag_or 5, 4;
    %jmp/0xz  T_102.135, 5;
T_102.137 ;
    %pushi/real 0, 4065; load=0.00000
    %load/real v00000259d1230d90_0;
    %cmp/wr;
    %jmp/0xz T_102.138, 5;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d12315b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d12315b0_0, 0, 32;
    ; show_stmt_assign_real: Get l-value for compressed -= operand
    %load/real v00000259d1230d90_0;
    %pushi/real 1073741824, 4066; load=1.00000
    %sub/wr;
    %store/real v00000259d1230d90_0;
    %jmp T_102.137;
T_102.138 ;
    %jmp T_102.136;
T_102.135 ;
T_102.139 ;
    %load/real v00000259d1230d90_0;
    %pushi/real 0, 4065; load=0.00000
    %cmp/wr;
    %jmp/0xz T_102.140, 5;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d12315b0_0;
    %pushi/vec4 1, 0, 32;
    %sub;
    %cast2;
    %store/vec4 v00000259d12315b0_0, 0, 32;
    ; show_stmt_assign_real: Get l-value for compressed += operand
    %load/real v00000259d1230d90_0;
    %pushi/real 1073741824, 4066; load=1.00000
    %add/wr;
    %store/real v00000259d1230d90_0;
    %jmp T_102.139;
T_102.140 ;
T_102.136 ;
    %load/vec4 v00000259d12315b0_0;
    %ret/vec4 0, 0, 32;  Assign to shortreal_ceil_to_int (store_vec4_to_lval)
    %disable/flow S_00000259d122e420;
    %end;
S_00000259d122e5b0 .scope autofunction.real, "shortreal_shift" "shortreal_shift" 6 110, 6 110 0, S_00000259d122ed80;
 .timescale -9 -12;
v00000259d1231ab0_0 .var/real "data", 0 0;
v00000259d12309d0_0 .var/2s "shift_num", 31 0;
; Variable shortreal_shift is REAL return value of scope S_00000259d122e5b0
TD_tb_mx_int8_sum.mon.shortreal_shift ;
T_103.141 ;
    %load/vec4 v00000259d12309d0_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz T_103.142, 4;
    %load/vec4 v00000259d12309d0_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz  T_103.143, 5;
    ; show_stmt_assign_vector: Get l-value for compressed -= operand
    %load/vec4 v00000259d12309d0_0;
    %pushi/vec4 1, 0, 32;
    %sub;
    %cast2;
    %store/vec4 v00000259d12309d0_0, 0, 32;
    ; show_stmt_assign_real: Get l-value for compressed *= operand
    %load/real v00000259d1231ab0_0;
    %pushi/real 1073741824, 4067; load=2.00000
    %mul/wr;
    %store/real v00000259d1231ab0_0;
    %jmp T_103.144;
T_103.143 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d12309d0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d12309d0_0, 0, 32;
    ; show_stmt_assign_real: Get l-value for compressed /= operand
    %load/real v00000259d1231ab0_0;
    %pushi/real 1073741824, 4067; load=2.00000
    %div/wr;
    %store/real v00000259d1231ab0_0;
T_103.144 ;
    %jmp T_103.141;
T_103.142 ;
    %load/real v00000259d1231ab0_0;
    %ret/real 0; Assign to shortreal_shift
    %disable/flow S_00000259d122e5b0;
    %end;
S_00000259d12333e0 .scope begin, "single_transection" "single_transection" 6 39, 6 39 0, S_00000259d122ed80;
 .timescale -9 -12;
S_00000259d1232760 .scope module, "ref_blk" "mx_int8_sum_ref" 4 23, 7 5 0, S_00000259d11c0f20;
 .timescale -9 -12;
    .port_info 0 /INPUT 8 "i_scale";
    .port_info 1 /INPUT 256 "i_mxint8_elements";
    .port_info 2 /OUTPUT 32 "o_float32";
    .port_info 3 /OUTPUT 1 "o_overflow";
L_00000259d1238108 .functor BUFT 1, C4<0000001000000>, C4<0>, C4<0>, C4<0>;
L_00000259d11c0430 .functor NOT 13, L_00000259d1238108, C4<0000000000000>, C4<0000000000000>, C4<0000000000000>;
L_00000259d11c0190 .functor BUFZ 1, v00000259d1234ef0_0, C4<0>, C4<0>, C4<0>;
v00000259d1231c90_0 .net *"_ivl_10", 8 0, L_00000259d1234e50;  1 drivers
L_00000259d1238198 .functor BUFT 1, C4<0000>, C4<0>, C4<0>, C4<0>;
v00000259d1231d30_0 .net *"_ivl_13", 3 0, L_00000259d1238198;  1 drivers
v00000259d1231dd0_0 .net *"_ivl_2", 12 0, L_00000259d11c0430;  1 drivers
L_00000259d1238150 .functor BUFT 1, C4<0000000000001>, C4<0>, C4<0>, C4<0>;
v00000259d1230110_0 .net/2u *"_ivl_4", 12 0, L_00000259d1238150;  1 drivers
v00000259d12301b0_0 .var "carry_flag", 0 0;
v00000259d1230250_0 .var "float32_mantissa", 22 0;
v00000259d12302f0_0 .var "float32_scale", 7 0;
v00000259d12304d0 .array "i_mxint8_elements", 0 31;
v00000259d12304d0_0 .net v00000259d12304d0 0, 7 0, L_00000259d11c0200; 1 drivers
v00000259d12304d0_1 .net v00000259d12304d0 1, 7 0, L_00000259d118e300; 1 drivers
v00000259d12304d0_2 .net v00000259d12304d0 2, 7 0, L_00000259d118da40; 1 drivers
v00000259d12304d0_3 .net v00000259d12304d0 3, 7 0, L_00000259d118d810; 1 drivers
v00000259d12304d0_4 .net v00000259d12304d0 4, 7 0, L_00000259d118e370; 1 drivers
v00000259d12304d0_5 .net v00000259d12304d0 5, 7 0, L_00000259d118dc00; 1 drivers
v00000259d12304d0_6 .net v00000259d12304d0 6, 7 0, L_00000259d118dc70; 1 drivers
v00000259d12304d0_7 .net v00000259d12304d0 7, 7 0, L_00000259d118e0d0; 1 drivers
v00000259d12304d0_8 .net v00000259d12304d0 8, 7 0, L_00000259d118e060; 1 drivers
v00000259d12304d0_9 .net v00000259d12304d0 9, 7 0, L_00000259d118dce0; 1 drivers
v00000259d12304d0_10 .net v00000259d12304d0 10, 7 0, L_00000259d118e4c0; 1 drivers
v00000259d12304d0_11 .net v00000259d12304d0 11, 7 0, L_00000259d118e6f0; 1 drivers
v00000259d12304d0_12 .net v00000259d12304d0 12, 7 0, L_00000259d118dd50; 1 drivers
v00000259d12304d0_13 .net v00000259d12304d0 13, 7 0, L_00000259d118ddc0; 1 drivers
v00000259d12304d0_14 .net v00000259d12304d0 14, 7 0, L_00000259d118d960; 1 drivers
v00000259d12304d0_15 .net v00000259d12304d0 15, 7 0, L_00000259d118e140; 1 drivers
v00000259d12304d0_16 .net v00000259d12304d0 16, 7 0, L_00000259d118e1b0; 1 drivers
v00000259d12304d0_17 .net v00000259d12304d0 17, 7 0, L_00000259d118d880; 1 drivers
v00000259d12304d0_18 .net v00000259d12304d0 18, 7 0, L_00000259d118d9d0; 1 drivers
v00000259d12304d0_19 .net v00000259d12304d0 19, 7 0, L_00000259d118dab0; 1 drivers
v00000259d12304d0_20 .net v00000259d12304d0 20, 7 0, L_00000259d118db20; 1 drivers
v00000259d12304d0_21 .net v00000259d12304d0 21, 7 0, L_00000259cf58d8c0; 1 drivers
v00000259d12304d0_22 .net v00000259d12304d0 22, 7 0, L_00000259d1290170; 1 drivers
v00000259d12304d0_23 .net v00000259d12304d0 23, 7 0, L_00000259d1291910; 1 drivers
v00000259d12304d0_24 .net v00000259d12304d0 24, 7 0, L_00000259d1290cd0; 1 drivers
v00000259d12304d0_25 .net v00000259d12304d0 25, 7 0, L_00000259d1291670; 1 drivers
v00000259d12304d0_26 .net v00000259d12304d0 26, 7 0, L_00000259d1290f00; 1 drivers
v00000259d12304d0_27 .net v00000259d12304d0 27, 7 0, L_00000259d1290d40; 1 drivers
v00000259d12304d0_28 .net v00000259d12304d0 28, 7 0, L_00000259d1291520; 1 drivers
v00000259d12304d0_29 .net v00000259d12304d0 29, 7 0, L_00000259d1291130; 1 drivers
v00000259d12304d0_30 .net v00000259d12304d0 30, 7 0, L_00000259d1290870; 1 drivers
v00000259d12304d0_31 .net v00000259d12304d0 31, 7 0, L_00000259d1290250; 1 drivers
v00000259d1230390_0 .net "i_scale", 7 0, v00000259d1227f20_0;  alias, 1 drivers
v00000259d12358f0_0 .net "neg_2", 12 0, L_00000259d1235710;  1 drivers
v00000259d1235670_0 .var "neg_sum", 12 0;
v00000259d1235210_0 .net "o_float32", 31 0, L_00000259d1235c10;  alias, 1 drivers
v00000259d1235850_0 .net "o_overflow", 0 0, L_00000259d11c0190;  alias, 1 drivers
v00000259d1234ef0_0 .var "overflow", 0 0;
v00000259d1234bd0_0 .net "pos_2", 12 0, L_00000259d1238108;  1 drivers
v00000259d12355d0_0 .var "pos_sum", 12 0;
v00000259d1234c70_0 .net "scale", 8 0, L_00000259d1234f90;  1 drivers
v00000259d12349f0_0 .var "scale_carry", 4 0;
v00000259d1234a90_0 .net "sum", 12 0, L_00000259d1234db0;  1 drivers
v00000259d12348b0_0 .var "sum_abs", 12 0;
v00000259d1235df0_0 .var "sum_sign", 0 0;
E_00000259d119c150 .event anyedge, v00000259d1227f20_0, v00000259d1234c70_0;
E_00000259d119b8d0 .event anyedge, v00000259d12302f0_0, v00000259d1230250_0, v00000259d12301b0_0;
E_00000259d119c6d0 .event anyedge, v00000259d1234a90_0;
E_00000259d119c190/0 .event anyedge, v00000259d12355d0_0, v00000259d12304d0_0, v00000259d12304d0_1, v00000259d12304d0_2;
E_00000259d119c190/1 .event anyedge, v00000259d12304d0_3, v00000259d12304d0_4, v00000259d12304d0_5, v00000259d12304d0_6;
E_00000259d119c190/2 .event anyedge, v00000259d12304d0_7, v00000259d12304d0_8, v00000259d12304d0_9, v00000259d12304d0_10;
E_00000259d119c190/3 .event anyedge, v00000259d12304d0_11, v00000259d12304d0_12, v00000259d12304d0_13, v00000259d12304d0_14;
E_00000259d119c190/4 .event anyedge, v00000259d12304d0_15, v00000259d12304d0_16, v00000259d12304d0_17, v00000259d12304d0_18;
E_00000259d119c190/5 .event anyedge, v00000259d12304d0_19, v00000259d12304d0_20, v00000259d12304d0_21, v00000259d12304d0_22;
E_00000259d119c190/6 .event anyedge, v00000259d12304d0_23, v00000259d12304d0_24, v00000259d12304d0_25, v00000259d12304d0_26;
E_00000259d119c190/7 .event anyedge, v00000259d12304d0_27, v00000259d12304d0_28, v00000259d12304d0_29, v00000259d12304d0_30;
E_00000259d119c190/8 .event anyedge, v00000259d12304d0_31;
E_00000259d119c190 .event/or E_00000259d119c190/0, E_00000259d119c190/1, E_00000259d119c190/2, E_00000259d119c190/3, E_00000259d119c190/4, E_00000259d119c190/5, E_00000259d119c190/6, E_00000259d119c190/7, E_00000259d119c190/8;
E_00000259d119c850/0 .event anyedge, v00000259d12304d0_0, v00000259d12304d0_1, v00000259d12304d0_2, v00000259d12304d0_3;
E_00000259d119c850/1 .event anyedge, v00000259d12304d0_4, v00000259d12304d0_5, v00000259d12304d0_6, v00000259d12304d0_7;
E_00000259d119c850/2 .event anyedge, v00000259d12304d0_8, v00000259d12304d0_9, v00000259d12304d0_10, v00000259d12304d0_11;
E_00000259d119c850/3 .event anyedge, v00000259d12304d0_12, v00000259d12304d0_13, v00000259d12304d0_14, v00000259d12304d0_15;
E_00000259d119c850/4 .event anyedge, v00000259d12304d0_16, v00000259d12304d0_17, v00000259d12304d0_18, v00000259d12304d0_19;
E_00000259d119c850/5 .event anyedge, v00000259d12304d0_20, v00000259d12304d0_21, v00000259d12304d0_22, v00000259d12304d0_23;
E_00000259d119c850/6 .event anyedge, v00000259d12304d0_24, v00000259d12304d0_25, v00000259d12304d0_26, v00000259d12304d0_27;
E_00000259d119c850/7 .event anyedge, v00000259d12304d0_28, v00000259d12304d0_29, v00000259d12304d0_30, v00000259d12304d0_31;
E_00000259d119c850/8 .event anyedge, v00000259d1235670_0, v00000259d12358f0_0;
E_00000259d119c850 .event/or E_00000259d119c850/0, E_00000259d119c850/1, E_00000259d119c850/2, E_00000259d119c850/3, E_00000259d119c850/4, E_00000259d119c850/5, E_00000259d119c850/6, E_00000259d119c850/7, E_00000259d119c850/8;
L_00000259d1235710 .arith/sum 13, L_00000259d11c0430, L_00000259d1238150;
L_00000259d1234db0 .arith/sum 13, v00000259d12355d0_0, v00000259d1235670_0;
L_00000259d1234e50 .concat [ 5 4 0 0], v00000259d12349f0_0, L_00000259d1238198;
L_00000259d1234f90 .arith/sum 9, L_00000259d1234f90, L_00000259d1234e50;
L_00000259d1235c10 .concat [ 23 8 1 0], v00000259d1230250_0, v00000259d12302f0_0, v00000259d1235df0_0;
S_00000259d1233700 .scope begin, "$ivl_foreach8" "$ivl_foreach8" 7 26, 7 26 0, S_00000259d1232760;
 .timescale -9 -12;
v00000259d12307f0_0 .var/2s "i", 31 0;
S_00000259d12325d0 .scope begin, "$ivl_foreach9" "$ivl_foreach9" 7 34, 7 34 0, S_00000259d1232760;
 .timescale -9 -12;
v00000259d1230b10_0 .var/2s "i", 31 0;
S_00000259d1232120 .scope task, "sum_decode" "sum_decode" 7 92, 7 92 0, S_00000259d1232760;
 .timescale -9 -12;
v00000259d12316f0_0 .var "sum", 12 0;
v00000259d1231b50_0 .var "sum_abs", 12 0;
v00000259d1230bb0_0 .var "sum_sign", 0 0;
TD_tb_mx_int8_sum.ref_blk.sum_decode ;
    %load/vec4 v00000259d12316f0_0;
    %parti/s 1, 12, 5;
    %flag_set/vec4 8;
    %jmp/0xz  T_104.145, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000259d1230bb0_0, 0, 1;
    %load/vec4 v00000259d12316f0_0;
    %inv;
    %addi 1, 0, 13;
    %store/vec4 v00000259d1231b50_0, 0, 13;
    %jmp T_104.146;
T_104.145 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d1230bb0_0, 0, 1;
    %load/vec4 v00000259d12316f0_0;
    %store/vec4 v00000259d1231b50_0, 0, 13;
T_104.146 ;
    %end;
S_00000259d12322b0 .scope task, "sum_encode" "sum_encode" 7 104, 7 104 0, S_00000259d1232760;
 .timescale -9 -12;
v00000259d1231010_0 .var "carry_flag", 0 0;
v00000259d1231790_0 .var "carry_num", 4 0;
v00000259d1231bf0_0 .var "float32_mantissa", 22 0;
v00000259d1230c50_0 .var "sum_abs", 12 0;
TD_tb_mx_int8_sum.ref_blk.sum_encode ;
    %load/vec4 v00000259d1230c50_0;
    %concati/vec4 0, 0, 10;
    %store/vec4 v00000259d1231bf0_0, 0, 23;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d1231010_0, 0, 1;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v00000259d1231790_0, 0, 5;
    %fork t_69, S_00000259d1232c10;
    %jmp t_68;
    .scope S_00000259d1232c10;
t_69 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12313d0_0, 0, 32;
T_105.147 ;
    %load/vec4 v00000259d12313d0_0;
    %cmpi/s 5, 0, 32;
    %jmp/0xz T_105.148, 5;
    %load/vec4 v00000259d1231010_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_105.149, 8;
    %load/vec4 v00000259d1231790_0;
    %addi 1, 0, 5;
    %store/vec4 v00000259d1231790_0, 0, 5;
T_105.149 ;
    %load/vec4 v00000259d1231bf0_0;
    %parti/s 1, 22, 6;
    %flag_set/vec4 8;
    %jmp/0xz  T_105.151, 8;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000259d1231010_0, 0, 1;
    %jmp T_105.152;
T_105.151 ;
    %load/vec4 v00000259d1231bf0_0;
    %parti/s 22, 0, 2;
    %concati/vec4 0, 0, 1;
    %store/vec4 v00000259d1231bf0_0, 0, 23;
T_105.152 ;
    %load/vec4 v00000259d12313d0_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v00000259d12313d0_0, 0, 32;
    %jmp T_105.147;
T_105.148 ;
    %end;
    .scope S_00000259d12322b0;
t_68 %join;
    %load/vec4 v00000259d1231bf0_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftl 4;
    %store/vec4 v00000259d1231bf0_0, 0, 23;
    %end;
S_00000259d1232c10 .scope begin, "$ivl_for_loop5" "$ivl_for_loop5" 7 111, 7 111 0, S_00000259d12322b0;
 .timescale -9 -12;
v00000259d12313d0_0 .var/2s "i", 31 0;
    .scope S_00000259d11c0d90;
T_106 ;
    %callf/void TD_t_fp32_scale.set_clean, S_00000259d1226e60;
    %callf/void TD_t_fp32_scale.randomize, S_00000259d1225880;
    %end;
    .thread T_106;
    .scope S_00000259d1232760;
T_107 ;
    %wait E_00000259d119c850;
    %pushi/vec4 0, 0, 13;
    %store/vec4 v00000259d1235670_0, 0, 13;
    %fork t_71, S_00000259d1233700;
    %jmp t_70;
    .scope S_00000259d1233700;
t_71 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12307f0_0, 0, 32;
T_107.0 ;
    %load/vec4 v00000259d12307f0_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_107.1, 5;
    %ix/getv/s 4, v00000259d12307f0_0;
    %load/vec4a v00000259d12304d0, 4;
    %parti/s 1, 7, 4;
    %flag_set/vec4 8;
    %jmp/0xz  T_107.2, 8;
T_107.2 ;
    %load/vec4 v00000259d1235670_0;
    %load/vec4 v00000259d12358f0_0;
    %add;
    %store/vec4 v00000259d1235670_0, 0, 13;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d12307f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d12307f0_0, 0, 32;
    %jmp T_107.0;
T_107.1 ;
    %end;
    .scope S_00000259d1232760;
t_70 %join;
    %jmp T_107;
    .thread T_107, $push;
    .scope S_00000259d1232760;
T_108 ;
    %wait E_00000259d119c190;
    %pushi/vec4 0, 0, 13;
    %store/vec4 v00000259d12355d0_0, 0, 13;
    %fork t_73, S_00000259d12325d0;
    %jmp t_72;
    .scope S_00000259d12325d0;
t_73 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d1230b10_0, 0, 32;
T_108.0 ;
    %load/vec4 v00000259d1230b10_0;
    %cmpi/s 31, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz T_108.1, 5;
    %load/vec4 v00000259d12355d0_0;
    %ix/getv/s 4, v00000259d1230b10_0;
    %load/vec4a v00000259d12304d0, 4;
    %parti/s 7, 0, 2;
    %pad/u 13;
    %add;
    %store/vec4 v00000259d12355d0_0, 0, 13;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000259d1230b10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000259d1230b10_0, 0, 32;
    %jmp T_108.0;
T_108.1 ;
    %end;
    .scope S_00000259d1232760;
t_72 %join;
    %jmp T_108;
    .thread T_108, $push;
    .scope S_00000259d1232760;
T_109 ;
    %wait E_00000259d119c6d0;
    %load/vec4 v00000259d1234a90_0;
    %store/vec4 v00000259d12316f0_0, 0, 13;
    %fork TD_tb_mx_int8_sum.ref_blk.sum_decode, S_00000259d1232120;
    %join;
    %load/vec4 v00000259d1230bb0_0;
    %store/vec4 v00000259d1235df0_0, 0, 1;
    %load/vec4 v00000259d1231b50_0;
    %store/vec4 v00000259d12348b0_0, 0, 13;
    %load/vec4 v00000259d12348b0_0;
    %store/vec4 v00000259d1230c50_0, 0, 13;
    %fork TD_tb_mx_int8_sum.ref_blk.sum_encode, S_00000259d12322b0;
    %join;
    %load/vec4 v00000259d1231790_0;
    %store/vec4 v00000259d12349f0_0, 0, 5;
    %load/vec4 v00000259d1231bf0_0;
    %store/vec4 v00000259d1230250_0, 0, 23;
    %load/vec4 v00000259d1231010_0;
    %store/vec4 v00000259d12301b0_0, 0, 1;
    %jmp T_109;
    .thread T_109, $push;
    .scope S_00000259d1232760;
T_110 ;
    %wait E_00000259d119b8d0;
    %load/vec4 v00000259d12302f0_0;
    %or/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_110.0, 8;
    %load/vec4 v00000259d1230250_0;
    %assign/vec4 v00000259d1230250_0, 0;
    %jmp T_110.1;
T_110.0 ;
    %load/vec4 v00000259d12301b0_0;
    %load/vec4 v00000259d1230250_0;
    %parti/s 22, 1, 2;
    %concat/vec4; draw_concat_vec4
    %assign/vec4 v00000259d1230250_0, 0;
T_110.1 ;
    %jmp T_110;
    .thread T_110, $push;
    .scope S_00000259d1232760;
T_111 ;
    %wait E_00000259d119c150;
    %load/vec4 v00000259d1230390_0;
    %and/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_111.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000259d1234ef0_0, 0;
    %jmp T_111.1;
T_111.0 ;
    %load/vec4 v00000259d1234c70_0;
    %parti/s 1, 8, 5;
    %flag_set/vec4 8;
    %jmp/1 T_111.4, 8;
    %load/vec4 v00000259d1234c70_0;
    %parti/s 8, 0, 2;
    %and/r;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_111.4;
    %jmp/0xz  T_111.2, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000259d1234ef0_0, 0;
    %jmp T_111.3;
T_111.2 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000259d1234ef0_0, 0;
T_111.3 ;
T_111.1 ;
    %jmp T_111;
    .thread T_111, $push;
    .scope S_00000259d1232760;
T_112 ;
    %wait E_00000259d119c150;
    %load/vec4 v00000259d1230390_0;
    %and/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_112.0, 8;
    %load/vec4 v00000259d1230390_0;
    %store/vec4 v00000259d12302f0_0, 0, 8;
    %jmp T_112.1;
T_112.0 ;
    %load/vec4 v00000259d1234c70_0;
    %parti/s 1, 8, 5;
    %flag_set/vec4 8;
    %jmp/1 T_112.4, 8;
    %load/vec4 v00000259d1234c70_0;
    %parti/s 8, 0, 2;
    %and/r;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_112.4;
    %jmp/0xz  T_112.2, 8;
    %pushi/vec4 255, 0, 8;
    %assign/vec4 v00000259d12302f0_0, 0;
    %jmp T_112.3;
T_112.2 ;
    %load/vec4 v00000259d1234c70_0;
    %parti/s 7, 0, 2;
    %pad/u 8;
    %assign/vec4 v00000259d12302f0_0, 0;
T_112.3 ;
T_112.1 ;
    %jmp T_112;
    .thread T_112, $push;
    .scope S_00000259d12261e0;
T_113 ;
    %vpi_call/w 5 114 "$display", "normal_case" {0 0 0};
    %pushi/vec4 25, 0, 32;
T_113.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.1, 5;
    %jmp/1 T_113.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.normal_case, S_00000259d122a390;
    %jmp T_113.0;
T_113.1 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 121 "$display", "all positive number case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.2 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.3, 5;
    %jmp/1 T_113.3, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.positive_case, S_00000259d12298a0;
    %jmp T_113.2;
T_113.3 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 127 "$display", "all negative number case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.4 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.5, 5;
    %jmp/1 T_113.5, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.negative_case, S_00000259d1226370;
    %jmp T_113.4;
T_113.5 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 133 "$display", "all small absolute value int8 case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.6 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.7, 5;
    %jmp/1 T_113.7, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.small_case, S_00000259d122ae80;
    %jmp T_113.6;
T_113.7 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 139 "$display", "all big absolute value int8 case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.8 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.9, 5;
    %jmp/1 T_113.9, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.big_case, S_00000259d1226b40;
    %jmp T_113.8;
T_113.9 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 145 "$display", "all zero value case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.10 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.11, 5;
    %jmp/1 T_113.11, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.all_zero_case, S_00000259d1226500;
    %jmp T_113.10;
T_113.11 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 151 "$display", "1 random 0 case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.12 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.13, 5;
    %jmp/1 T_113.13, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.single_zero_case, S_00000259d122acf0;
    %jmp T_113.12;
T_113.13 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 157 "$display", "all int8 1000_0000 case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.14 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.15, 5;
    %jmp/1 T_113.15, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.all_nan_case, S_00000259d12253d0;
    %jmp T_113.14;
T_113.15 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 163 "$display", "1 int8 1000_0000 case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.16 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.17, 5;
    %jmp/1 T_113.17, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.single_nan_case, S_00000259d1229710;
    %jmp T_113.16;
T_113.17 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 169 "$display", "positive carry case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.18 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.19, 5;
    %jmp/1 T_113.19, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.positive_carry_case, S_00000259d12290d0;
    %jmp T_113.18;
T_113.19 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 175 "$display", "lagest positive carry" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.20 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.21, 5;
    %jmp/1 T_113.21, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.positive_carry_max_case, S_00000259d1229bc0;
    %jmp T_113.20;
T_113.21 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 181 "$display", "positive number overflow" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.22 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.23, 5;
    %jmp/1 T_113.23, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.positive_overflow_case, S_00000259d122a6b0;
    %jmp T_113.22;
T_113.23 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 187 "$display", "positive overflow with largest carry" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.24 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.25, 5;
    %jmp/1 T_113.25, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.positive_overflow_max_case, S_00000259d122ab60;
    %jmp T_113.24;
T_113.25 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 193 "$display", "positive overflow with int8 1000_0000" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.26 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.27, 5;
    %jmp/1 T_113.27, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.positive_overflow_scale_nan, S_00000259d12293f0;
    %jmp T_113.26;
T_113.27 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 199 "$display", "negative carry case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.28 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.29, 5;
    %jmp/1 T_113.29, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.negative_carry_case, S_00000259d1225ec0;
    %jmp T_113.28;
T_113.29 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 205 "$display", "lagest negative carry" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.30 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.31, 5;
    %jmp/1 T_113.31, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.negative_carry_max_case, S_00000259d1225560;
    %jmp T_113.30;
T_113.31 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 211 "$display", "negative number overflow" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.32 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.33, 5;
    %jmp/1 T_113.33, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.negative_overflow_case, S_00000259d1226690;
    %jmp T_113.32;
T_113.33 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 217 "$display", "negative overflow with largest carry" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.34 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.35, 5;
    %jmp/1 T_113.35, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.negative_overflow_max_case, S_00000259d1226820;
    %jmp T_113.34;
T_113.35 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 223 "$display", "negative overflow with int8 1000_0000" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.36 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.37, 5;
    %jmp/1 T_113.37, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.negative_overflow_scale_nan, S_00000259d12269b0;
    %jmp T_113.36;
T_113.37 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 229 "$display", "scale 1111_1111 nan case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.38 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.39, 5;
    %jmp/1 T_113.39, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.scale_nan_case, S_00000259d1229580;
    %jmp T_113.38;
T_113.39 ;
    %pop/vec4 1;
    %delay 51000, 0;
    %vpi_call/w 5 235 "$display", "scale 1111_1111 and int8 have 1000_0000 case" {0 0 0};
    %pushi/vec4 5, 0, 32;
T_113.40 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_113.41, 5;
    %jmp/1 T_113.41, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_00000259d119c110;
    %callf/void TD_tb_mx_int8_sum.drv.scale_nan_unusedcode_case, S_00000259d122a200;
    %jmp T_113.40;
T_113.41 ;
    %pop/vec4 1;
    %vpi_call/w 5 241 "$finish" {0 0 0};
    %end;
    .thread T_113;
    .scope S_00000259d122ed80;
T_114 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000259d12318d0_0, 0, 32;
    %end;
    .thread T_114;
    .scope S_00000259d122ed80;
T_115 ;
    %wait E_00000259d119c810;
    %fork t_75, S_00000259d12333e0;
    %jmp t_74;
    .scope S_00000259d12333e0;
t_75 ;
    %vpi_call/w 6 40 "$display", "\012transection id: %d", v00000259d12318d0_0 {0 0 0};
    %callf/vec4 TD_tb_mx_int8_sum.mon.print_input_vector, S_00000259d122f0a0;
    %store/vec4 v00000259d1231290_0, 0, 32;
    %delay 1000, 0;
    %vpi_call/w 6 43 "$display", "%b    :REF FP32 SUM OUT", v00000259d1231290_0 {0 0 0};
    %load/vec4 v00000259d12318d0_0;
    %addi 1, 0, 32;
    %cast2;
    %assign/vec4 v00000259d12318d0_0, 0;
    %end;
    .scope S_00000259d122ed80;
t_74 %join;
    %jmp T_115;
    .thread T_115;
    .scope S_00000259d11c0f20;
T_116 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000259d1235f30_0, 0, 1;
T_116.0 ;
    %delay 50000, 0;
    %load/vec4 v00000259d1235f30_0;
    %inv;
    %store/vec4 v00000259d1235f30_0, 0, 1;
    %jmp T_116.0;
    %end;
    .thread T_116;
    .scope S_00000259d11c0f20;
T_117 ;
    %vpi_call/w 4 53 "$dumpfile", "test.vcd" {0 0 0};
    %vpi_call/w 4 54 "$dumpvars", 32'sb00000000000000000000000000000000, S_00000259d12261e0 {0 0 0};
    %end;
    .thread T_117;
# The file index is used to find the file name in the following table.
:file_names 8;
    "N/A";
    "<interactive>";
    "-";
    "../transection.sv";
    "tb_mx_int8_sum.sv";
    "mx_int8_sum_drv.sv";
    "mx_int8_sum_mon.sv";
    "mx_int8_sum_ref.sv";
